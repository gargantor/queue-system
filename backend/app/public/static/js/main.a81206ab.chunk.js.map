{"version":3,"sources":["helper/adminlte.helper.js","service/auth-header.js","service/counters.service.js","service/auth.service.js","pages/partials/header.partial.js","pages/partials/sidebar.partials.js","pages/partials/footer.partial.js","pages/dashboardPages/content1.js","pages/dashboardPages/nopages.js","helper/Toaster.js","service/desk.service.js","components/desk.component.js","pages/partials/content-header.partials.js","helper/validateForm.js","components/selectDesk.form.js","pages/dashboardPages/desk.js","service/users.service.js","pages/dashboardPages/user.list.js","service/services.service.js","pages/dashboardPages/service.list.js","components/service.form.js","pages/dashboardPages/service.edit.js","pages/dashboardPages/counter.list.js","service/kiosk.service.js","components/counter.form.js","pages/dashboardPages/counter.edit.js","components/profile.form.js","components/pasword.form.js","pages/dashboardPages/profile.js","components/user.form.js","pages/dashboardPages/user.edit.js","service/settings.service.js","pages/dashboardPages/settings.js","pages/dashboardPage.js","helper/Printable.js","pages/kioskPage.js","pages/loginPage.js","service/monitor.service.js","context/Contexts.js","components/audioList.component.js","components/monitorList.component.js","pages/monitorPage.js","pages/noPages.js","pages/nopkioskPage.js","pages/registerPage.js","App.js","serviceWorker.js","index.js","helper/monitorCalling.js"],"names":["this","fixLoginRegisterHeight","fixSidebarHeight","fixContentHeight","login","document","getElementsByClassName","register","vcenter","body","style","height","minHeight","length","selectedHeight","clientHeight","console","log","sidebar","windowHeight","window","frames","innerHeight","bodyHeight","header","footer","content","authHeader","a","UserHeader","isExpired","exp","Date","now","getExpirationDate","jwtToken","jwt","JSON","parse","atob","split","user","localStorage","getItem","accessToken","axios","post","API_URL","response","data","setItem","stringify","removeItem","location","reload","process","headers","get","name","counter_code","status","services","id","delete","deskId","username","password","then","countersService","closeDesk","error","roles","fullname","HeaderPartial","props","className","data-widget","href","role","activeClassName","to","onClick","logout","SidebarPartial","match","useRouteMatch","useLocation","React","useLayoutEffect","adminlteHelper","useEffect","path","src","alt","opacity","currentUser","data-accordion","isModerator","FooterPartial","Content1","type","data-card-widget","data-toggle","title","NoPages","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","onOpen","addEventListener","stopTimer","resumeTimer","makeToast","msg","fire","icon","deskID","currentTicket","DeskComponent","socket","desk","useState","ticketCount","setticketCount","missedCount","setmissedCount","currentticket","setcurrentTicket","confirmation","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","getTicketCount","serviceFactory","waitingCount","getCurrentTicket","_id","eventcount","emit","on","test","message","ticket_number","theCurrent","nextCall","doneCall","result","isConfirmed","missedCall","ContentHeader","subtitle","btnLink","btnText","ValidateForm","callback","validate","initialValues","onFly","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","hasSubmit","sethasSubmit","firstRender","setfirstRender","formRendered","useRef","current","Object","keys","handleSubmit","event","preventDefault","handleChange","persist","target","multiple","value","Array","from","selectedOptions","option","checked","SelectDeskForm","onSubmit","onChange","selectDesk","map","index","key","ValidateService","DeskPage","setDesk","setSelectDesk","checkChosenDesk","counter","availableDesk","email","address","UserList","items","setItems","getAll","width","item","aria-label","catch","err","ServiceList","setServices","getServices","servicesService","service","ServiceForm","BackButton","withRouter","history","push","placeholder","htmlFor","ServiceEdit","defValues","setdefValues","params","edit","create","findOne","CounterList","serviceId","CounterForm","defServices","setdefServices","kioskService","min","step","size","Number","isInteger","parseFloat","CounterEdit","ProfileForm","disabled","PasswordForm","passwordConfirm","validateProfile","ValidatePasswordService","ProfilePage","getProfile","aria-orientation","aria-controls","aria-selected","aria-labelledby","profileUpdate","passwordUpdate","UserForm","defRoles","setdefRoles","authService","getRoles","isEditing","ValidateCreateService","ValidateEditService","UserEdit","SettingsPage","ticketCounts","setticketCounts","getCounter","resetCounter","sequence_value","DashboardPage","setupSocket","state","newsocket","io","setState","setTimeout","isAdmin","getCurrentUser","token","classList","add","includes","disconnect","matchPath","exact","component","Component","PrintAble","ticket","serviceName","KioskPage","listService","setListService","setTicket","makeTicket","remove","print","printOrder","ValidateLogin","LoginPage","e","helper","AudioListContext","createContext","audioList","ListAudio","Consumer","audiofile","ID","link","file","MonitorList","calling","currentCall","ticketCalled","xmlns","preserveAspectRatio","focusable","fill","x","y","dy","MonitorPage","getAudio","monitorService","newSocket","getTicket","dismantleSocket","off","iscallNext","theticket","callTicket","recursiveCalling","listCalling","ticketNumber","toString","monitorCalling","letCall","tempCalled","first","rest","shoutCaller","theTicket","callDone","prevProps","prevState","Provider","NoprintkioskPage","ValidateRegister","RegisterPage","App","render","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","toCounter","totalwaktu","play","repeatCall","j","number","callingNumber","arrayChar","sisa","charlength","i","Math","pow","playPromise","pause","currentTime","counterNumber","Promise","resolve","time","module","exports"],"mappings":"kOAkDe,M,uGAhDXA,KAAKC,yBACLD,KAAKE,mBACLF,KAAKG,qB,+CAGL,IAAMC,EAAQC,SAASC,uBAAuB,aACxCC,EAAWF,SAASC,uBAAuB,gBAC3CE,EAAUH,SAASC,uBAAuB,eAC1CG,EAAOJ,SAASI,KAGtB,GAFAA,EAAKC,MAAMC,OAAS,KACpBF,EAAKC,MAAME,UAAY,KACA,IAAnBJ,EAAQK,OACVJ,EAAKC,MAAMC,OAAS,UAEjB,GAAoB,IAAjBP,EAAMS,QAAoC,IAApBN,EAASM,OACrCJ,EAAKC,MAAMC,OAAS,WACf,CACL,IACMG,GAD4B,IAAjBV,EAAMS,OAAeN,EAAS,GAAKH,EAAM,IAC1BW,aAChCN,EAAKC,MAAME,UAAYE,EAAe,KACtCE,QAAQC,IAAIH,M,yCAMd,IAAMI,EAAUb,SAASC,uBAAuB,gBAC1Ca,EAAeC,OAAOC,OAAOC,YAC7BC,EAAalB,SAASI,KAAKM,aAC9BG,EAAQ,KACTA,EAAQ,GAAGR,MAAME,UAAYW,EAAaJ,EAAeI,EAAW,KAAOJ,EAAa,Q,yCAO1F,IAAMK,EAASnB,SAASC,uBAAuB,eACzCmB,EAASpB,SAASC,uBAAuB,eACzCoB,EAAUrB,SAASC,uBAAuB,mBAC1Ca,EAAeC,OAAOC,OAAOC,YAChBjB,SAASI,KAAKM,aAC9BW,EAAQ,KACTA,EAAQ,GAAGhB,MAAME,UAAaO,GAAgBK,EAAO,GAAGT,aAAa,IAAMU,EAAO,GAAGV,aAAa,GAAI,U,qDC3C7F,SAAeY,IAA9B,+B,4CAAe,sBAAAC,EAAA,+EACJC,KADI,4C,sBAYf,IAAMC,EAAY,SAACC,GACf,QAAKA,GAIEC,KAAKC,MAAQF,GAElBG,EAAoB,SAACC,GACvB,IAAKA,EACD,OAAO,KAGX,IAAMC,EAAMC,KAAKC,MAAMC,KAAKJ,EAASK,MAAM,KAAK,KAGhD,OAAOJ,GAAOA,EAAIL,KAAiB,IAAVK,EAAIL,KAAc,M,SAEhCF,I,2EAAf,gCAAAD,EAAA,2DACQa,EAAOJ,KAAKC,MAAMI,aAAaC,QAAQ,YAChCF,EAAKG,YAFpB,qBAGYd,EAAUI,EAAkBO,EAAKG,cAH7C,wBAIY5B,QAAQC,IAAI,aACN2B,EAAcH,EAAKG,YALrC,SAMmCC,IAAMC,KAAKC,yBAA6B,CAACH,gBAN5E,YAMkBI,EANlB,QAOwBC,KAPxB,wBAQgBR,EAAK,2BAAIA,GAAL,IACAG,YAAYI,EAASC,KAAKL,cAE9BF,aAAaQ,QAAQ,OAAQb,KAAKc,UAAUV,IAX5D,kBAYuB,CAAE,iBAAkBO,EAASC,KAAKL,cAZzD,QAegBF,aAAaU,WAAW,QACxBhC,OAAOiC,SAASC,SAhBhC,iCAmBmB,CAAE,iBAAkBN,EAASC,KAAKL,cAnBrD,iCAsBmB,CAAE,iBAAkBH,EAAKG,cAtB5C,yDA0Be,IA1Bf,6C,sBC5BA,IAoDe,M,uNAhDAC,I,KAJCU,iB,SAIoC5B,I,gCAAf6B,Q,6BAAhBC,I,6LAGJC,EAAMC,EAAcC,EAAQC,G,6EAC9BhB,I,KAAWE,uB,KAAoB,CAClCW,OACAE,SACAD,eACAE,Y,SACgBlC,I,gCAAf6B,Q,6BALQV,K,0MASHgB,G,6EACHjB,I,KAAUE,sBAAkBe,E,SAAqBnC,I,gCAAf6B,Q,6BAA5BC,I,4LAGNC,EAAMC,EAAcC,EAAQE,EAAID,G,6EAChChB,I,KAAWE,sBAAkBe,E,KAAI,CACpCJ,OACAE,SACAD,eACAE,Y,SACgBlC,I,gCAAf6B,Q,6BALQV,K,2MASJgB,G,6EACFjB,I,KAAaE,wBAAqBe,E,SAAqBnC,I,gCAAf6B,Q,6BAAlCO,O,oRAINlB,I,KAAUE,0B,SAAwCpB,I,gCAAf6B,Q,6BAA7BC,I,iMAGAO,G,6EACNnB,I,KAAWE,2B,KAAwB,CAACiB,U,SAAyBrC,I,gCAAf6B,Q,6BAAxCV,K,2RAIND,I,KAAUE,6B,SAA2CpB,I,gCAAf6B,Q,6BAAhCC,I,+QAGNZ,I,KAAWE,0B,KAAuB,G,SAAoBpB,I,gCAAf6B,Q,6BAAjCV,K,oICaN,M,mGAvDP,OAAOD,IAAMY,IAAIV,mB,4BAGfkB,EAAUC,GACZ,OAAOrB,IACFC,KAAKC,mBAAyB,CAC3BkB,WACAC,aAEHC,MAAK,SAAAnB,GAKF,OAJGA,EAASC,KAAKL,aACbF,aAAaQ,QAAQ,OAAQb,KAAKc,UAAUH,EAASC,OAGlDD,O,+BAKfoB,EAAgBC,YACfF,MACG,SAAAnB,GACIN,aAAaU,WAAW,WAE5B,SAAAkB,GACItD,QAAQC,IAAIqD,Q,+BAMfL,EAAUC,EAAUK,EAAOC,GAChC,OAAO3B,IAAMC,KAAKC,mBAAyB,CACvCkB,WACAC,WACAK,QACAC,e,uCAKJ,OAAOnC,KAAKC,MAAMI,aAAaC,QAAQ,W,2BAGtCsB,EAAUC,EAAUK,EAAOC,GAC5B,OAAO3B,IAAMC,KAAKC,cAAoB,CAClCkB,WACAC,WACAK,QACAC,iB,MCtDG,SAASC,EAAcC,GACpC,OACE,yBAAKC,UAAU,6DACb,wBAAIA,UAAU,cACZ,wBAAIA,UAAU,YAAW,uBAAGA,UAAU,WAAWC,cAAY,WAAWC,KAAK,KAAKC,KAAK,UAAS,uBAAGH,UAAU,kBAC7G,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWI,gBAAgB,SAASC,GAAG,KAA1D,SAIF,wBAAIL,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWI,gBAAgB,SAASC,GAAG,UAA1D,UAIF,wBAAIL,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWI,gBAAgB,SAASC,GAAG,aAA1D,aAIF,wBAAIL,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWI,gBAAgB,SAASC,GAAG,YAA1D,YAIF,wBAAIL,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWI,gBAAgB,SAASC,GAAG,UAA1D,WAKJ,wBAAIL,UAAU,sBACZ,wBAAIA,UAAU,qCACZ,4BAAQA,UAAU,sCAAsCM,QAASP,EAAMQ,QACrE,0BAAMP,UAAU,aAAY,uBAAGA,UAAU,+BAD3C,aChCK,SAASQ,EAAeT,GACnC,IAAIU,EAAQC,cACRhC,EAAWiC,cASjB,OAREC,IAAMC,iBAAgB,WAElBC,EAAevF,qBAEjB,CAACmD,IACHkC,IAAMG,WAAU,cAEd,CAACrC,IAEH,2BAAOsB,UAAU,8CACb,kBAAC,IAAD,CAASK,GAAE,UAAKI,EAAMO,KAAX,KAAoBhB,UAAU,cACrC,yBAAKiB,IAAI,wBAAwBC,IAAI,gBAAgBlB,UAAU,qCAAqCjE,MAAO,CAACoF,QAAS,SACrH,0BAAMnB,UAAU,gCAAhB,eAER,yBAAKA,UAAU,WACX,yBAAKA,UAAU,oCACf,yBAAKA,UAAU,SAAQ,yBAAKiB,IAAI,mBAAmBjB,UAAU,yBAAyBkB,IAAI,UAC1F,yBAAKlB,UAAU,QAAO,kBAAC,IAAD,CAASK,GAAE,UAAKI,EAAMO,KAAX,YAA2BhB,UAAU,WAAWD,EAAMqB,YAAYvB,SAAWE,EAAMqB,YAAYvB,SAAW,gBAE3I,yBAAKG,UAAU,QACf,wBAAIA,UAAU,wCAAwCC,cAAY,WAAWE,KAAK,OAAOkB,iBAAe,SACpG,wBAAIrB,UAAU,YACV,kBAAC,IAAD,CAASA,UAAU,WAAWI,gBAAgB,SAASC,GAAE,UAAKI,EAAMO,KAAX,UACrD,uBAAGhB,UAAU,iCAAiC,qCAGtD,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAASA,UAAU,WAAWI,gBAAgB,SAASC,GAAE,UAAKI,EAAMO,KAAX,aACrD,uBAAGhB,UAAU,yBAAyB,wCAG7CD,EAAMuB,aACP,oCACA,wBAAItB,UAAU,cAAd,SACA,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAASA,UAAU,WAAWI,gBAAgB,SAASC,GAAE,UAAKI,EAAMO,KAAX,aACrD,uBAAGhB,UAAU,8BAA8B,wCAGnD,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAASA,UAAU,WAAWI,gBAAgB,SAASC,GAAE,UAAKI,EAAMO,KAAX,WACrD,uBAAGhB,UAAU,0BAA0B,2CAG/C,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAASA,UAAU,WAAWI,gBAAgB,SAASC,GAAE,UAAKI,EAAMO,KAAX,cACrD,uBAAGhB,UAAU,0BAA0B,8CAG/C,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAASA,UAAU,WAAWI,gBAAgB,SAASC,GAAE,UAAKI,EAAMO,KAAX,cACrD,uBAAGhB,UAAU,0BAA0B,8CAG/C,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAASA,UAAU,WAAWI,gBAAgB,SAASC,GAAE,UAAKI,EAAMO,KAAX,cACrD,uBAAGhB,UAAU,2BAA2B,0CAKhD,wBAAIA,UAAU,cAAd,iBACA,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAASA,UAAU,WAAWI,gBAAgB,SAASC,GAAG,gBACtD,uBAAGL,UAAU,wBAAwB,gDCrE1C,SAASuB,IACtB,OACE,4BAAQvB,UAAU,eACd,yBAAKA,UAAU,iCACX,sCADJ,UAGA,4DAA8B,uBAAGE,KAAK,sBAAR,eAA9B,KAJJ,yBCFW,SAASsB,IACtB,OACE,6BAEI,6BAASxB,UAAU,kBACjB,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,YACb,2CAEF,yBAAKA,UAAU,YACb,wBAAIA,UAAU,6BACZ,wBAAIA,UAAU,mBAAkB,uBAAGE,KAAK,MAAR,SAChC,wBAAIF,UAAU,0BAAd,kBAOV,6BAASA,UAAU,WAEjB,yBAAKA,UAAU,QACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,cAAd,aACA,yBAAKA,UAAU,cACb,4BAAQyB,KAAK,SAASzB,UAAU,eAAe0B,mBAAiB,WAAWC,cAAY,UAAUC,MAAM,YACrG,uBAAG5B,UAAU,kBACf,4BAAQyB,KAAK,SAASzB,UAAU,eAAe0B,mBAAiB,SAASC,cAAY,UAAUC,MAAM,UACnG,uBAAG5B,UAAU,oBAGnB,yBAAKA,UAAU,aAAf,4CAIA,yBAAKA,UAAU,eAAf,aCpCG,SAAS6B,IACtB,OACE,6BACI,6BAAS7B,UAAU,kBACf,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,YACX,yBAAKA,UAAU,YACf,+CAEA,yBAAKA,UAAU,YACf,wBAAIA,UAAU,6BACV,wBAAIA,UAAU,mBAAkB,uBAAGE,KAAK,MAAR,SAChC,wBAAIF,UAAU,0BAAd,uBAMZ,6BAASA,UAAU,WACf,yBAAKA,UAAU,cACf,wBAAIA,UAAU,yBAAd,QACA,yBAAKA,UAAU,iBACX,4BAAI,uBAAGA,UAAU,6CAAjB,0BACA,mF,4BCvBV8B,EAAQC,IAAKC,MAAM,CACvBC,OAAO,EACPC,SAAU,UACVC,mBAAmB,EACnBC,MAAO,IACPC,kBAAkB,EAClBC,OAAQ,SAACL,GACPA,EAAMM,iBAAiB,aAAcR,IAAKS,WAC1CP,EAAMM,iBAAiB,aAAcR,IAAKU,gBAW/BC,EAPG,SAACjB,EAAMkB,GACvBb,EAAMc,KAAK,CACTC,KAAMpB,EACNG,MAAOe,KCQI,M,6IAlBOzD,G,6EACPhB,I,KAAWE,sB,KAAqB,CAACc,Y,SAA4BlC,I,gCAAf6B,Q,6BAAxCV,K,6MAEM2E,G,6EACZ5E,I,KAAWE,8B,KAA6B,CAAC0E,U,SAA0B9F,I,gCAAf6B,Q,6BAA9CV,K,qMAEF4E,G,6EACJ7E,I,KAAWE,qB,KAAoB,CAAC2E,iB,SAAiC/F,I,gCAAf6B,Q,6BAA5CV,K,uMAEA4E,G,6EACN7E,I,KAAWE,uB,KAAsB,CAAC2E,iB,SAAiC/F,I,gCAAf6B,Q,6BAA9CV,K,qMAGF2E,EAAQ5D,G,0FAAU6D,E,+BAAc,K,KACpC7E,I,KAAWE,sB,KAAqB,CAAC0E,SAAQ5D,WAAU6D,iB,SAAiC/F,I,gCAAf6B,Q,6BAA/DV,K,uIChBN,SAAS6E,EAAT,GAAmD,IAA3BtD,EAA0B,EAA1BA,UAAWuD,EAAe,EAAfA,OAAQC,EAAO,EAAPA,KAAO,EACvBC,mBAAS,GADc,mBACtDC,EADsD,KACzCC,EADyC,OAEvBF,mBAAS,GAFc,mBAEtDG,EAFsD,KAEzCC,EAFyC,OAGnBJ,mBAAS,MAHU,mBAGtDK,EAHsD,KAGvCC,EAHuC,KAKvDC,EAAe3B,IAAKC,MAAM,CAC5BJ,MAAO,gBACP+B,KAAM,oCACNd,KAAM,UACNe,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,4BAGjBC,EAAiB,WACnBC,EAAeb,YAAYF,EAAKhE,UAC/BM,MACG,SAAAnB,GACIhC,QAAQC,IAAI+B,EAASC,MAErB+E,EAAehF,EAASC,KAAK4F,cAC7BX,EAAelF,EAASC,KAAKgF,gBAEjC,SAAA3D,GACItD,QAAQC,IAAIqD,OAuJ1B,OA1BEoB,qBAAU,WACNiD,IAxHIR,GACAS,EAAeE,iBAAiBjB,EAAKkB,KACpC5E,MACG,SAAAnB,GACOA,EAASC,MACRmF,EAAiBpF,EAASC,SAIlC,SAAAqB,GACItD,QAAQC,IAAIqD,MAiHxB,IAAI0E,EAAa,EAcnB,OAbKpB,IAECA,EAAOqB,KAAK,WAAY,aACxBrB,EAAOsB,GAAG,qBAAqB,SAACC,GAC5BH,IACAhI,QAAQC,IAAIkI,EAAMH,GAClBL,OAEJf,EAAOsB,GAAG,kBAAkB,SAACE,GACzBpI,QAAQC,IAAI,qBAAsBmI,OAIrC,WAEGxB,GAEAA,EAAOqB,KAAK,YAAa,gBAGlC,IAEH,oCACI,6BAAStE,UAAU,WACf,yBAAKA,UAAU,OACf,yBAAKA,UAAU,SACX,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,eACX,wBAAIA,UAAU,cAAd,mBAEJ,yBAAKA,UAAU,yBAAwB,wBAAIA,UAAU,aAAY,2BAC5DwD,GAAiBA,EAAckB,cAAgBlB,EAAckB,cAAgB,QAElF,yBAAK1E,UAAU,eAAf,YACcwD,GAAiBA,EAAckB,cAAgB,aAAc,QAI/E,yBAAK1E,UAAU,SACX,yBAAKA,UAAU,QACf,yBAAKA,UAAU,aACX,yBAAKA,UAAU,cACf,yBAAKA,UAAU,iBACX,4BAAQM,QAzEP,WACjB,IAAMqE,EAAcnB,GAAiBA,EAAcY,IAAOZ,EAAcY,IAAM,KAC9EH,EAAeW,SAAS1B,EAAKkB,IAAKlB,EAAKhE,SAAUyF,GAChDnF,MACG,SAAAnB,GAEOA,EAASC,KAAKmG,SAAqC,wBAA1BpG,EAASC,KAAKmG,SACtCpI,QAAQC,IAAI+B,EAASC,KAAKmG,SAC1B/B,EAAU,OAAQrE,EAASC,KAAKmG,SAChChB,EAAiB,QAEjBA,EAAiBpF,EAASC,MAC1B0F,IACAf,EAAOqB,KAAK,eAAejG,EAASC,KAAK8F,SAKjD,SAAAzE,GACItD,QAAQC,IAAIqD,OAsD6BK,UAAU,gDAC3C,0BAAMA,UAAU,aAAY,uBAAGA,UAAU,mCADzC,SAKJ,yBAAKA,UAAU,iBACX,4BAAQM,QAtIT,WACZkD,EACCP,EAAOqB,KAAK,iBAAkBd,EAAcY,KAE5C1B,EAAU,QAAS,yBAkIwB1C,UAAU,gDACzC,0BAAMA,UAAU,aAAY,uBAAGA,UAAU,sBADzC,WAKJ,yBAAKA,UAAU,iBACX,4BAAQM,QApKX,WACVkD,EACCS,EAAeY,SAASrB,EAAcY,KACrC5E,MACG,SAAAnB,GACOA,EAASC,OACRjC,QAAQC,IAAI+B,EAASC,MAClBkF,EAAcY,MAAQ/F,EAASC,KAAK8F,MACnC1B,EAAU,UAAW,UAAUc,EAAckB,cAAc,SAC3DjB,EAAiB,WAM7B,SAAA9D,GACItD,QAAQC,IAAIqD,MAIpB+C,EAAU,QAAS,yBAgJsB1C,UAAU,gDACvC,0BAAMA,UAAU,aAAY,uBAAGA,UAAU,yBADzC,SAKJ,yBAAKA,UAAU,iBACX,4BAAQM,QAzIT,WACZkD,EACCE,EAAad,OACZpD,MAAK,SAACsF,GACCA,EAAOC,aACPd,EAAee,WAAWxB,EAAcY,KACvC5E,MACG,SAAAnB,GACOA,EAASC,OACRjC,QAAQC,IAAI+B,EAASC,MAClBkF,EAAcY,MAAQ/F,EAASC,KAAK8F,MACnC1B,EAAU,WAAY,UAAUc,EAAckB,cAAc,WAC5DjB,EAAiB,MACjBO,IACAf,EAAOqB,KAAK,eAAejG,EAASC,KAAK8F,UAMrD,SAAAzE,GACItD,QAAQC,IAAIqD,SAS5B+C,EAAU,QAAS,yBA2GwB1C,UAAU,gDACzC,0BAAMA,UAAU,aAAY,uBAAGA,UAAU,kBADzC,WAMJ,yBAAKA,UAAU,iBACX,4BAAQM,QAtGL,WACfoC,EAAU,QAAS,wBAqG4B1C,UAAU,gDAC7C,0BAAMA,UAAU,aAAY,uBAAGA,UAAU,qBADzC,cAKJ,yBAAKA,UAAU,iBACX,4BAAQM,QArHP,WAEboC,EAAU,QADXc,EACoB,sBAGA,yBAgH0BxD,UAAU,6CAC3C,0BAAMA,UAAU,aAAY,uBAAGA,UAAU,yBADzC,aAMJ,yBAAKA,UAAU,iBACX,4BAAQM,QAAS,kBAAIZ,KAAaM,UAAU,gDAC5C,0BAAMA,UAAU,aAAY,uBAAGA,UAAU,sBADzC,eAUZ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,kBACf,yBAAKA,UAAU,eACX,wBAAIA,UAAU,cAAd,eAEJ,yBAAKA,UAAU,aACX,wBAAIA,UAAU,gBAAd,eAAyC,2BAAIoD,IAC7C,wBAAIpD,UAAU,eAAd,iBAA0C,2BAAIsD,KAElD,yBAAKtD,UAAU,qBClQpB,SAASiF,EAAclF,GACpC,OACE,6BAASC,UAAU,kBACf,yBAAKA,UAAU,IACX,4BAAKD,EAAM6B,OACV7B,EAAMmF,UACP,2BAAInF,EAAMmF,WAGbnF,EAAMoF,SACP,kBAAC,IAAD,CAAM9E,GAAIN,EAAMoF,QAAS1D,KAAK,SAASzB,UAAU,+BAA+BD,EAAMqF,U,YC0D/EC,EArEM,SAACC,EAAUC,EAAUC,GAAiC,IAAlBC,IAAiB,2DAE5CtC,mBAASqC,GAAiB,IAFkB,mBAEjEE,EAFiE,KAEzDC,EAFyD,OAG5CxC,mBAAS,IAHmC,mBAGjEyC,EAHiE,KAGzDC,EAHyD,OAIhC1C,oBAAS,GAJuB,mBAIjE2C,EAJiE,KAInDC,EAJmD,OAKtC5C,oBAAS,GAL6B,mBAKjE6C,EALiE,KAKtDC,EALsD,OAMlC9C,oBAAS,GANyB,mBAMjE+C,EANiE,KAMpDC,EANoD,KAQlEC,EAAeC,kBAAO,GAE5BtF,qBAAU,WACHqF,EAAaE,UAChBX,EAAUH,GACVK,EAAU,IACVM,GAAe,GACfJ,GAAgB,GAChBE,GAAa,IAEfG,EAAaE,SAAU,IACtB,CAACd,IAEJzE,qBAAU,WAC2B,IAA/BwF,OAAOC,KAAKZ,GAAQ1J,QAAgB4J,GACtCR,EAAS,CAAEI,SAAQE,aAEpB,CAACA,IAEJ7E,qBAAU,WACL0E,IACDM,GAAgB,IACZG,GAAeF,EACjBH,EAAUN,EAASG,IAInBS,GAAe,MAGlB,CAACT,IAEJ,IAAMe,EAAe,SAACC,GAChBA,GAAOA,EAAMC,iBACjBd,EAAUN,EAASG,IACnBK,GAAgB,GAChBE,GAAa,IAGTW,EAAe,SAACF,GAGpB,GAFAA,EAAMG,UAEHH,EAAMI,OAAOC,SAAS,CACvB,IAAIC,EAAQC,MAAMC,KAAKR,EAAMI,OAAOK,iBAAiB,SAAAC,GAAM,OAAIA,EAAOJ,SACtErB,GAAU,SAAAD,GAAM,kCAAUA,GAAV,kBAAmBgB,EAAMI,OAAO/H,KAAOiI,WAC1B,aAAtBN,EAAMI,OAAOrF,KACpBkE,GAAU,SAAAD,GAAM,kCAAUA,GAAV,kBAAmBgB,EAAMI,OAAO/H,KAAO2H,EAAMI,OAAOO,aAGpE1B,GAAU,SAAAD,GAAM,kCAAUA,GAAV,kBAAmBgB,EAAMI,OAAO/H,KAAO2H,EAAMI,OAAOE,YAIxE,MAAO,CACLJ,eACAH,eACAf,SACAE,WChEW,SAAS0B,EAAevH,GAAQ,IAAD,EACWsF,EAAatF,EAAMuF,SAAUvF,EAAMwF,UAAjFG,EADmC,EACnCA,OAAQE,EAD2B,EAC3BA,OAAQgB,EADmB,EACnBA,aAAcH,EADK,EACLA,aACvC,OACE,oCACI,6BAASzG,UAAU,WACf,yBAAKA,UAAU,OACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,eACX,wBAAIA,UAAU,cAAd,gBAEJ,yBAAKA,UAAU,aACX,0BAAMuH,SAAUd,GACZ,yBAAKzG,UAAU,mBACX,+CACA,4BACIA,UAAS,wBAAmB4F,EAAO1C,MAAQ,cAC3CnE,KAAK,OACLyI,SAAUZ,EACVI,MAAOtB,EAAOxC,MAAQ,IAEtB,+CACCnD,EAAM0H,WAAWC,KAAI,SAACxE,EAAMyE,GAEzB,OAAO,4BAAQC,IAAKD,EAAOX,MAAO9D,EAAKkB,KAAMlB,EAAKlE,kBAIrD4G,EAAO1C,MACJ,0BAAMlD,UAAU,0BAA0B4F,EAAO1C,KAAO0C,EAAO1C,KAAO,cAGlF,yBAAKlD,UAAU,aACf,yBAAKA,UAAU,wBACX,4BAAQyB,KAAK,SAASzB,UAAU,mBAAkB,uBAAGA,UAAU,mCAA/D,oBC9BpC,IAAM6H,EAAkB,SAACnC,GACrB,IAAIE,EAAS,GAIb,OAHIF,EAAOxC,OACP0C,EAAO1C,KAAO,2BAEX0C,GAEI,SAASkC,EAAT,GAA6B,IAAV7E,EAAS,EAATA,OAAS,EAEfE,qBAFe,mBAEhCD,EAFgC,KAE1B6E,EAF0B,OAGH5E,mBAAS,IAHN,mBAGhCsE,EAHgC,KAGpBO,EAHoB,OAID7E,mBAAS,GAJR,6BAiFzC,OAjBEpC,qBAAU,WAGN,OAhCAkD,EAAegE,kBACVzI,MACG,SAAAnB,GAGI0J,EAAQ1J,EAASC,KAAK4J,YAE1B,SAAAvI,GACItD,QAAQC,IAAIqD,MAwBjB,eAGR,IACHoB,qBAAU,WAKN,OAJImC,GAjEJe,EAAekE,gBACV3I,MACG,SAAAnB,GACI2J,EAAc3J,EAASC,SAE3B,SAAAqB,OAgED,eAGR,CAACuD,IAGJ,oCACI,kBAAC+B,EAAD,CACIrD,MAAM,OACNsD,SAAUhC,EAAO,WAAaA,EAAKlE,aApF5B,uBAsFTkE,EAGF,kBAACF,EAAD,CAAetD,UA1CD,WACdrD,QAAQC,IAAI,cACZ2H,EAAevE,YACdF,MACG,SAAAnB,GAGI0J,EAAQ1J,EAASC,KAAK4J,YAE1B,SAAAvI,GACItD,QAAQC,IAAIqD,OAgCiBsD,OAAQA,EAAQC,KAAMA,IAF3D,kBAACoE,EAAD,CAAgBhC,SArEK,SAAC,GAAc,IAAbI,EAAY,EAAZA,OACvBrJ,QAAQC,IAAI,UACZ2H,EAAewD,WAAW/B,EAAOxC,MAC5B1D,MACG,SAAAnB,GACIhC,QAAQC,IAAI+B,GACZ0J,EAAQ1J,EAASC,KAAK4J,YAE1B,SAAAvI,QA6DoC4F,SAAUsC,EAAiBJ,WAAYA,KCnG3F,IA0De,M,uNAtDAvJ,I,KAJCU,c,SAIoC5B,I,gCAAf6B,Q,6BAAhBC,I,6LAGJQ,EAAU8I,EAAOrJ,EAAMsJ,EAASzI,EAAOL,G,6EACzCrB,I,KAAWE,oB,KAAoB,CAClCkB,WACA8I,QACArJ,OACAsJ,UACAzI,QACAL,Y,SACgBvC,I,gCAAf6B,Q,6BAPQV,K,8MAWHgB,G,6EACHjB,I,KAAUE,mBAAkBe,E,SAAqBnC,I,gCAAf6B,Q,6BAA5BC,I,4LAGNK,EAAIiJ,EAAOrJ,EAAMsJ,EAASzI,G,6EAC1B1B,I,KAAWE,mBAAkBe,E,KAAI,CACpCiJ,QACArJ,OACAsJ,UACAzI,S,SACgB5C,I,gCAAf6B,Q,6BALQV,K,+MAQAgB,G,6EACNjB,I,KAAWE,sB,KAAqB,CAACe,M,SAAsBnC,I,gCAAf6B,Q,6BAAlCV,K,0MAGGgB,EAAIiJ,EAAOrJ,EAAMsJ,G,6EAC1BnK,I,KAAWE,6B,KAA6B,CAC3Ce,KACAiJ,QACArJ,OACAsJ,W,SACgBrL,I,gCAAf6B,Q,6BALQV,K,iNAQIgB,EAAII,G,6EACdrB,I,KAAWE,8B,KAA8B,CAC5Ce,KACAI,Y,SACgBvC,I,gCAAf6B,Q,6BAHQV,K,qMAOJgB,G,6EACFjB,I,KAAaE,qBAAqBe,E,SAAqBnC,I,gCAAf6B,Q,6BAAlCO,O,gIClDN,SAASkJ,IACpB,IAAM5E,EAAe3B,IAAKC,MAAM,CAC5BJ,MAAO,gBACP+B,KAAM,oCACNd,KAAM,UACNe,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBARQ,EAULZ,mBAAS,IAVJ,mBAUxBoF,EAVwB,KAUjBC,EAViB,KAWzBC,EAAS,WACXxE,EAAewE,SACVjJ,MACG,SAAAnB,GAEImK,EAASnK,EAASC,SAEtB,SAAAqB,QA6Bd,OANEoB,qBAAU,WAER,OADE0H,IACK,eAGN,IAEH,6BACI,kBAACxD,EAAD,CACIrD,MAAM,QACNsD,SAAS,oBACTC,QAAQ,0BACRC,QAAQ,aAEZ,6BAASpF,UAAU,WACf,yBAAKA,UAAU,OACf,yBAAKA,UAAU,UACX,yBAAKA,UAAU,QACf,yBAAKA,UAAU,aAEX,2BAAOb,GAAG,aAAaa,UAAU,oCACjC,2BAAOA,UAAU,eACb,wBAAIA,UAAU,IACd,wBAAIjE,MAAO,CAAC2M,MAAO,QAAnB,KACA,wBAAI1I,UAAU,IAAd,YACA,wBAAIA,UAAU,IAAd,QACA,wBAAIA,UAAU,IAAd,SACA,wBAAIA,UAAU,IAAd,WACA,wBAAIA,UAAU,IAAd,QACA,wBAAIA,UAAU,gBAAe,uBAAGA,UAAU,eAA1C,OAGJ,+BACKuI,EAAMb,KAAI,SAACiB,EAAMhB,GAAP,OACP,wBAAI3H,UAAU,GAAG4H,IAAKD,GAClB,wBAAI3H,UAAU,eAAe2H,EAAM,GACnC,wBAAI3H,UAAU,IAAI2I,EAAKrJ,UACvB,wBAAIU,UAAU,eAAe2I,EAAK5J,MAClC,wBAAIiB,UAAU,eAAe2I,EAAKP,OAClC,wBAAIpI,UAAU,eAAe2I,EAAKN,SAClC,wBAAIrI,UAAU,eACV2I,EAAK/I,MAAM8H,KAAI,SAACvH,EAAMwH,GAClB,OAAW,IAARA,EACQxH,EAAKpB,KAEL,KAAOoB,EAAKpB,SAK/B,wBAAIiB,UAAU,gBACV,yBAAKA,UAAU,YAAYG,KAAK,QAAQyI,aAAW,gBACnD,kBAAC,IAAD,CAAMvI,GAAE,2BAAsBsI,EAAKvE,IAA3B,SAAuC3C,KAAK,SAASzB,UAAU,0BAAyB,uBAAGA,UAAU,gBAC7G,4BAAQM,QAAS,kBAtE7BnB,EAsE4CwJ,EAAKvE,SArEjEV,EAAad,OACRpD,MAAK,SAACsF,GACCA,EAAOC,aACPd,EAAe7E,OAAOD,GACrBK,MAAK,SAACnB,GACHoK,IACA/F,EAAU,UAAWrE,EAASC,KAAKmG,YACpCoE,OAAM,SAACC,GACNpG,EAAU,QAASoG,EAAIzK,SAASC,KAAKmG,eATtC,IAACtF,GAsEuDsC,KAAK,SAASzB,UAAU,yBAAwB,uBAAGA,UAAU,+BClG5I,IAgCe,M,4NA5BA9B,I,KAJCU,iB,SAIoC5B,I,gCAAf6B,Q,6BAAhBC,I,6LAGJC,EAAME,G,6EACRf,I,KAAWE,uB,KAAoB,CAClCW,OACAE,U,SACgBjC,I,gCAAf6B,Q,6BAHQV,K,sMAOHgB,G,6EACHjB,I,KAAUE,sBAAkBe,E,SAAqBnC,I,gCAAf6B,Q,6BAA5BC,I,4LAGNC,EAAME,EAAQE,G,0FACdjB,IAAMC,KAAKC,sBAAkBe,EAAI,CACpCJ,OACAE,UACD,CAAEJ,QAAS7B,O,4KAILmC,G,6EACFjB,I,KAAaE,wBAAqBe,E,SAAqBnC,I,gCAAf6B,Q,6BAAlCO,O,gICxBN,SAAS2J,IACpB,IAAMrF,EAAe3B,IAAKC,MAAM,CAC5BJ,MAAO,gBACP+B,KAAM,oCACNd,KAAM,UACNe,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBARW,EAUFZ,mBAAS,IAVP,mBAU3BjE,EAV2B,KAUjB8J,EAViB,KAW5BC,EAAc,WAChBC,EAAgBD,cACXzJ,MACG,SAAAnB,GAEI2K,EAAY3K,EAASC,SAEzB,SAAAqB,QA6Bd,OANEoB,qBAAU,WAER,OADEkI,IACK,eAGN,IAEH,6BACI,kBAAChE,EAAD,CACIrD,MAAM,WACNsD,SAAS,uBACTC,QAAQ,6BACRC,QAAQ,gBAEZ,6BAASpF,UAAU,WACf,yBAAKA,UAAU,OACf,yBAAKA,UAAU,UACX,yBAAKA,UAAU,QACf,yBAAKA,UAAU,aAEX,2BAAOb,GAAG,aAAaa,UAAU,oCACjC,2BAAOA,UAAU,eACb,wBAAIA,UAAU,IACd,wBAAIjE,MAAO,CAAC2M,MAAO,QAAnB,KACA,wBAAI1I,UAAU,IAAd,gBACA,wBAAIA,UAAU,IAAd,UACA,wBAAIA,UAAU,gBAAe,uBAAGA,UAAU,eAA1C,OAGJ,+BACKd,EAASwI,KAAI,SAACyB,EAASxB,GAAV,OACV,wBAAI3H,UAAU,GAAG4H,IAAKD,GACtB,wBAAI3H,UAAU,eAAe2H,EAAM,GACnC,wBAAI3H,UAAU,IAAImJ,EAAQpK,MAC1B,wBAAIiB,UAAU,eAAemJ,EAAQlK,OAAS,OAAS,UACvD,wBAAIe,UAAU,gBAEV,yBAAKA,UAAU,YAAYG,KAAK,QAAQyI,aAAW,gBACnD,kBAAC,IAAD,CAAMvI,GAAE,8BAAyB8I,EAAQ/E,IAAjC,SAA6C3C,KAAK,SAASzB,UAAU,0BAAyB,uBAAGA,UAAU,gBACnH,4BAAQM,QAAS,kBAxDtBnB,EAwDwCgK,EAAQ/E,SAvDnEV,EAAad,OACRpD,MAAK,SAACsF,GACCA,EAAOC,aACPmE,EAAgB9J,OAAOD,GACtBK,MAAK,SAACnB,GACH4K,IACAvG,EAAU,UAAWrE,EAASC,KAAKmG,YACpCoE,OAAM,SAACC,GACNpG,EAAU,QAASoG,EAAIzK,SAASC,KAAKmG,eATnC,IAACtF,GAwDsDsC,KAAK,SAASzB,UAAU,yBAAwB,uBAAGA,UAAU,+BCnF/H,SAASoJ,EAAYrJ,GAAQ,IAAD,EACcsF,EAAatF,EAAMuF,SAAUvF,EAAMwF,SAAUxF,EAAMyF,eAAjGE,EADgC,EAChCA,OAAQE,EADwB,EACxBA,OAAQgB,EADgB,EAChBA,aAAcH,EADE,EACFA,aAC/B4C,EAAaC,aAAW,SAACvJ,GAAD,OAC1B,4BAAQO,QAAS,WAAOP,EAAMwJ,QAAQC,KAAK,wBAAyBxJ,UAAU,sBAAsByB,KAAK,UAAS,uBAAGzB,UAAU,mCAA/H,cAEN,OACE,oCACA,0BAAMuH,SAAUd,GACZ,yBAAKzG,UAAU,cACX,uCACA,2BACIyB,KAAK,OACLzB,UAAS,uBAAkB4F,EAAO7G,MAAQ,cAC1C0K,YAAY,OACZ1K,KAAK,OACLiI,MAAOtB,EAAO3G,MAAQ,GACtByI,SAAUZ,IAEbhB,EAAO7G,MACJ,0BAAMiB,UAAU,0BAA0B4F,EAAO7G,KAAO6G,EAAO7G,KAAO,cAG9E,yBAAKiB,UAAU,cACX,yCACA,yBAAKA,UAAU,kFACX,2BACIyB,KAAK,WACLzB,UAAU,uBACVb,GAAG,gBACHJ,KAAK,SACLsI,QAAS3B,EAAOzG,SAAU,EAC1BuI,SAAUZ,IAEd,2BAAO5G,UAAU,uBAAuB0J,QAAQ,iBAAiBhE,EAAOzG,OAAS,OAAS,YAGlG,yBAAKe,UAAU,aACX,yBAAKA,UAAU,wBACf,kBAACqJ,EAAD,MACA,4BAAQ5H,KAAK,SAASzB,UAAU,mBAAkB,uBAAGA,UAAU,mCAA/D,aCpCZ,IAAM6H,EAAkB,SAACnC,GACrB,IAAIE,EAAS,GAIb,OAHIF,EAAO3G,OACP6G,EAAO7G,KAAO,oBAEX6G,GAGI,SAAS+D,EAAY5J,GAAQ,IAAD,EACLoD,mBAAS,IADJ,mBAChCyG,EADgC,KACrBC,EADqB,KAoBnC3E,EAAW,qBACXuB,EAAe1G,EAAMU,MAAMqJ,OAAO3K,GAVjB,SAAC,GAAc,IAAbuG,EAAY,EAAZA,OACnBwD,EAAgBa,KAAKrE,EAAO3G,KAAM2G,EAAOzG,OAAQc,EAAMU,MAAMqJ,OAAO3K,IAC/DK,MAAK,SAAAnB,GACFqE,EAAU,UAAWrE,EAASC,KAAKmG,SACnC1E,EAAMwJ,QAAQC,KAAK,0BACpBX,OAAM,SAACC,GACNpG,EAAU,QAASoG,EAAIzK,SAASC,KAAKmG,aAf5B,SAAC,GAAc,IAAbiB,EAAY,EAAZA,OACnBwD,EAAgBc,OAAOtE,EAAO3G,KAAM2G,EAAOzG,QACtCO,MAAK,SAAAnB,GACFqE,EAAU,UAAWrE,EAASC,KAAKmG,SACnC1E,EAAMwJ,QAAQC,KAAK,0BACpBX,OAAM,SAACC,GACNpG,EAAU,QAASoG,EAAIzK,SAASC,KAAKmG,aAc9C1E,EAAMU,MAAMqJ,OAAO3K,KAClB+F,EAAW,gBAGfnE,qBAAW,WACJhB,EAAMU,MAAMqJ,OAAO3K,IAClB+J,EAAgBe,QAAQlK,EAAMU,MAAMqJ,OAAO3K,IAC1CK,MAAK,SAAAnB,GACFwL,EAAaxL,EAASC,SACvBuK,OAAM,SAACC,GACqB,MAAxBA,EAAIzK,SAASY,QACZc,EAAMwJ,QAAQC,KAAK,mBAEvBnN,QAAQC,IAAIwM,QAIrB,IACWc,EAAU7K,KAK1B,OAJEgC,qBAAU,WACE6I,EAAU7K,OACnB,CAAC6K,IAGJ,oCACI,kBAAC3E,EAAD,CACIrD,MAAM,WACNsD,SAAUA,IAEd,6BAASlF,UAAU,WACf,yBAAKA,UAAU,OACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,eACX,wBAAIA,UAAU,cAAckF,EAA5B,IAAuC0E,EAAU7K,OAErD,yBAAKiB,UAAU,aACX,kBAACoJ,EAAD,CAAa9D,SAAUmB,EAAclB,SAAUsC,EAAiBrC,cAAeoE,UCnE5F,SAASM,IACpB,IAAMxG,EAAe3B,IAAKC,MAAM,CAC5BJ,MAAO,gBACP+B,KAAM,oCACNd,KAAM,UACNe,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBARW,EAURZ,mBAAS,IAVD,mBAU3BoF,EAV2B,KAUpBC,EAVoB,KAW5BC,EAAS,WACXxE,EAAewE,SACVjJ,MACG,SAAAnB,GACIhC,QAAQC,IAAI+B,EAASC,MACrBkK,EAASnK,EAASC,SAEtB,SAAAqB,QA6Bd,OANEoB,qBAAU,WAER,OADE0H,IACK,eAGN,IAEH,6BACI,kBAACxD,EAAD,CACIrD,MAAM,WACNsD,SAAS,uBACTC,QAAQ,6BACRC,QAAQ,gBAEZ,6BAASpF,UAAU,WACf,yBAAKA,UAAU,OACf,yBAAKA,UAAU,UACX,yBAAKA,UAAU,QACf,yBAAKA,UAAU,aAEX,2BAAOb,GAAG,aAAaa,UAAU,oCACjC,2BAAOA,UAAU,eACb,wBAAIA,UAAU,IACd,wBAAIjE,MAAO,CAAC2M,MAAO,QAAnB,KACA,wBAAI1I,UAAU,IAAd,gBACA,wBAAIA,UAAU,IAAd,QACA,wBAAIA,UAAU,IAAd,UACA,wBAAIA,UAAU,IAAd,WACA,wBAAIA,UAAU,IAAd,QACA,wBAAIA,UAAU,gBAAe,uBAAGA,UAAU,eAA1C,OAGJ,+BACKuI,EAAMb,KAAI,SAACiB,EAAMhB,GAAP,OACP,wBAAI3H,UAAU,GAAG4H,IAAKD,GACtB,wBAAI3H,UAAU,eAAe2H,EAAM,GACnC,wBAAI3H,UAAU,IAAI2I,EAAK5J,MACvB,wBAAIiB,UAAU,eAAe2I,EAAK3J,cAClC,wBAAIgB,UAAU,eAAe2I,EAAK1J,OAAS,OAAS,UACpD,wBAAIe,UAAU,IAEV2I,EAAKzJ,SAASwI,KAAI,SAACyB,EAASxB,GACxB,OAAW,IAARA,EACQwB,EAAQpK,KAER,KAAOoK,EAAQpK,SAKlC,wBAAIiB,UAAU,eAAe2I,EAAK7K,MAAQ6K,EAAK7K,KAAKwB,SAAWqJ,EAAK7K,KAAKwB,SAAW,IACpF,wBAAIU,UAAU,gBACV,yBAAKA,UAAU,YAAYG,KAAK,QAAQyI,aAAW,gBACnD,kBAAC,IAAD,CAAMvI,GAAE,8BAAyBsI,EAAKvE,IAA9B,SAA0C3C,KAAK,SAASzB,UAAU,0BAAyB,uBAAGA,UAAU,gBAChH,4BAAQM,QAAS,kBAvEzBnB,EAuEwCwJ,EAAKvE,SAtE7DV,EAAad,OACRpD,MAAK,SAACsF,GACCA,EAAOC,aACPd,EAAe7E,OAAOD,GACrBK,MAAK,SAACnB,GACHoK,IACA/F,EAAU,UAAWrE,EAASC,KAAKmG,YACpCoE,OAAM,SAACC,GACNpG,EAAU,QAASoG,EAAIzK,SAASC,KAAKmG,eATtC,IAACtF,GAuEmDsC,KAAK,SAASzB,UAAU,yBAAwB,uBAAGA,UAAU,+BCnGxI,IAae,O,sGARP,OAAO9B,IAAMY,IAAIV,yBAAyB,CAAES,QAAS7B,Q,iCAG9CmN,GACP,OAAOjM,IAAMC,KAAKC,yBAAyB,CAAC+L,aAAY,CAACtL,QAAS7B,U,MCP3D,SAASoN,GAAYrK,GAAQ,IAAD,EACcsF,EAAatF,EAAMuF,SAAUvF,EAAMwF,SAAUxF,EAAMyF,eAAjGE,EADgC,EAChCA,OAAQE,EADwB,EACxBA,OAAQgB,EADgB,EAChBA,aAAcH,EADE,EACFA,aADE,EAEDtD,mBAAS,CAAC,WAFT,mBAEhCkH,EAFgC,KAEnBC,EAFmB,KAIjCjB,EAAaC,aAAW,SAACvJ,GAAD,OAC1B,4BAAQO,QAAS,WAAOP,EAAMwJ,QAAQC,KAAK,wBAAyBxJ,UAAU,sBAAsByB,KAAK,UAAS,uBAAGzB,UAAU,mCAA/H,cAgBN,OAJEe,qBAAU,WARNwJ,GAAatB,cACRzJ,MAAK,SAACnB,GAEHiM,EAAejM,EAASC,SACzBuK,OAAM,SAACC,GACNzM,QAAQC,IAAIwM,QAMrB,IAEH,oCACA,0BAAMvB,SAAUd,GACZ,yBAAKzG,UAAU,cACX,uCACA,2BACIyB,KAAK,OACLzB,UAAS,uBAAkB4F,EAAO7G,MAAQ,cAC1C0K,YAAY,OACZ1K,KAAK,OACLiI,MAAOtB,EAAO3G,MAAQ,GACtByI,SAAUZ,IAEbhB,EAAO7G,MACJ,0BAAMiB,UAAU,0BAA0B4F,EAAO7G,KAAO6G,EAAO7G,KAAO,cAG9E,yBAAKiB,UAAU,cACX,yCACA,2BACIyB,KAAK,SACL+I,IAAI,IACJC,KAAK,IACLzK,UAAS,uBAAkB4F,EAAO5G,cAAgB,cAClDyK,YAAY,eACZ1K,KAAK,eACLiI,MAAOtB,EAAO1G,cAAgB,GAC9BwI,SAAUZ,IAEbhB,EAAO5G,cACJ,0BAAMgB,UAAU,0BAA0B4F,EAAO5G,aAAe4G,EAAO5G,aAAe,cAG9F,yBAAKgB,UAAU,cACX,yCACA,yBAAKA,UAAU,kFACX,2BACIyB,KAAK,WACLzB,UAAU,uBACVb,GAAG,gBACHJ,KAAK,SACLsI,QAAS3B,EAAOzG,SAAU,EAC1BuI,SAAUZ,IAEd,2BAAO5G,UAAU,uBAAuB0J,QAAQ,iBAAiBhE,EAAOzG,OAAS,OAAS,YAGlG,yBAAKe,UAAU,mBACX,kDACA,4BACIA,UAAU,gBACV+G,UAAU,EACVhI,KAAK,WACLyI,SAAUZ,EACVI,MAAOtB,EAAOxG,UAAY,GAC1BwL,KAAK,KAEJL,EAAY3C,KAAI,SAACyB,EAASxB,GAEvB,OAAO,4BAAQC,IAAKD,EAAOX,MAAOmC,EAAQ/E,KAAM+E,EAAQpK,WAKpE,yBAAKiB,UAAU,aACX,yBAAKA,UAAU,wBACf,kBAACqJ,EAAD,MACA,4BAAQ5H,KAAK,SAASzB,UAAU,mBAAkB,uBAAGA,UAAU,mCAA/D,aCtFZ,IAAM6H,GAAkB,SAACnC,GACrB,IAAIE,EAAS,GAab,OAZIF,EAAO3G,OACP6G,EAAO7G,KAAO,oBAEd2G,EAAO1G,eACP4G,EAAO5G,aAAc,oBAEtB0G,EAAO1G,cAAc,IACpB4G,EAAO5G,aAAc,mBAErB2L,OAAOC,UAAUC,WAAWnF,EAAO1G,iBACnC4G,EAAO5G,aAAc,6BAElB4G,GAGI,SAASkF,GAAY/K,GAAQ,IAAD,EACLoD,mBAAS,IADJ,mBAChCyG,EADgC,KACrBC,EADqB,KA4BnC3E,EAAW,qBACXuB,EAAe1G,EAAMU,MAAMqJ,OAAO3K,GAfjB,SAAC,GAAc,IAAbuG,EAAY,EAAZA,OACnBrJ,QAAQC,IAAI,QACZD,QAAQC,IAAIoJ,EAAO1G,cACnB,IAAIwF,EAAOmG,OAAOC,UAAUlF,EAAO1G,cACnC3C,QAAQC,IAAIkI,GACZP,EAAe8F,KAAKrE,EAAO3G,KAAM2G,EAAO1G,aAAc0G,EAAOzG,OAAQc,EAAMU,MAAMqJ,OAAO3K,GAAIuG,EAAOxG,UAC9FM,MAAK,SAAAnB,GACFqE,EAAU,UAAWrE,EAASC,KAAKmG,SACnC1E,EAAMwJ,QAAQC,KAAK,0BACpBX,OAAM,SAACC,GACNpG,EAAU,QAASoG,EAAIzK,SAASC,KAAKmG,aAtB5B,SAAC,GAAc,IAAbiB,EAAY,EAAZA,OACnBrJ,QAAQC,IAAI,UACZD,QAAQC,IAAIoJ,EAAO1G,cACnBiF,EAAe+F,OAAOtE,EAAO3G,KAAM2G,EAAO1G,aAAc0G,EAAOzG,OAAQyG,EAAOxG,UACzEM,MAAK,SAAAnB,GACFqE,EAAU,UAAWrE,EAASC,KAAKmG,SACnC1E,EAAMwJ,QAAQC,KAAK,0BACpBX,OAAM,SAACC,GACNpG,EAAU,QAASoG,EAAIzK,SAASC,KAAKmG,aAoB9C1E,EAAMU,MAAMqJ,OAAO3K,KAClB+F,EAAW,gBAGfnE,qBAAW,WACJhB,EAAMU,MAAMqJ,OAAO3K,IAClB8E,EAAegG,QAAQlK,EAAMU,MAAMqJ,OAAO3K,IACzCK,MAAK,SAAAnB,GACFwL,EAAaxL,EAASC,SACvBuK,OAAM,SAACC,GACqB,MAAxBA,EAAIzK,SAASY,QACZc,EAAMwJ,QAAQC,KAAK,mBAEvBnN,QAAQC,IAAIwM,QAIrB,IACWc,EAAU7K,KAK1B,OAJEgC,qBAAU,WACE6I,EAAU7K,OACnB,CAAC6K,IAGJ,oCACI,kBAAC3E,EAAD,CACIrD,MAAM,WACNsD,SAAUA,IAEd,6BAASlF,UAAU,WACf,yBAAKA,UAAU,OACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,eACX,wBAAIA,UAAU,cAAckF,EAA5B,IAAuC0E,EAAU7K,OAErD,yBAAKiB,UAAU,aACX,kBAAC,GAAD,CAAUsF,SAAUmB,EAAclB,SAAUsC,GAAiBrC,cAAeoE,UCvFzF,SAASmB,GAAYhL,GAAQ,IAAD,EACcsF,EAAatF,EAAMuF,SAAUvF,EAAMwF,SAAUxF,EAAMyF,eAAjGE,EADgC,EAChCA,OAAQE,EADwB,EACxBA,OAAQgB,EADgB,EAChBA,aAAcH,EADE,EACFA,aAEvC,OACE,oCACA,0BAAMc,SAAUd,GACZ,yBAAKzG,UAAU,cACX,2CACA,2BACIyB,KAAK,OACLzB,UAAS,uBAAkB4F,EAAOtG,UAAY,cAC9CmK,YAAY,OACZ1K,KAAK,WACLiI,MAAOtB,EAAOpG,UAAY,SAC1BkI,SAAUZ,EACVoE,UAAU,IAEbpF,EAAO7G,MACJ,0BAAMiB,UAAU,0BAA0B4F,EAAO7G,KAAO6G,EAAO7G,KAAO,cAG9E,yBAAKiB,UAAU,cACX,wCACA,2BACIyB,KAAK,OACLzB,UAAS,uBAAkB4F,EAAO7G,MAAQ,cAC1C0K,YAAY,QACZ1K,KAAK,QACLiI,MAAOtB,EAAO0C,OAAS,GACvBZ,SAAUZ,IAEbhB,EAAO7G,MACJ,0BAAMiB,UAAU,0BAA0B4F,EAAOwC,MAAQxC,EAAOwC,MAAQ,cAGhF,yBAAKpI,UAAU,cACX,uCACA,2BACIyB,KAAK,OACLzB,UAAS,uBAAkB4F,EAAO7G,MAAQ,cAC1C0K,YAAY,OACZ1K,KAAK,OACLiI,MAAOtB,EAAO3G,MAAQ,GACtByI,SAAUZ,IAEbhB,EAAO7G,MACJ,0BAAMiB,UAAU,0BAA0B4F,EAAO7G,KAAO6G,EAAO7G,KAAO,cAG9E,yBAAKiB,UAAU,cACX,0CACA,2BACIyB,KAAK,OACLzB,UAAS,uBAAkB4F,EAAOyC,SAAW,cAC7CoB,YAAY,OACZ1K,KAAK,UACLiI,MAAOtB,EAAO2C,SAAW,GACzBb,SAAUZ,IAEbhB,EAAO7G,MACJ,0BAAMiB,UAAU,0BAA0B4F,EAAOyC,QAAUzC,EAAOyC,QAAU,cAGpF,yBAAKrI,UAAU,aACX,yBAAKA,UAAU,wBAEf,4BAAQyB,KAAK,SAASzB,UAAU,mBAAkB,uBAAGA,UAAU,mCAA/D,aCnEG,SAASiL,GAAalL,GAAQ,IAAD,EACasF,EAAatF,EAAMuF,SAAUvF,EAAMwF,UAAjFG,EADiC,EACjCA,OAAQE,EADyB,EACzBA,OAAQgB,EADiB,EACjBA,aAAcH,EADG,EACHA,aACvC,OACE,oCACA,0BAAMc,SAAUd,GACZ,yBAAKzG,UAAU,cACX,2CACA,2BACIyB,KAAK,WACLzB,UAAS,uBAAkB4F,EAAOrG,UAAY,cAC9CkK,YAAY,WACZ1K,KAAK,WACLiI,MAAOtB,EAAOnG,UAAY,GAC1BiI,SAAUZ,IAEbhB,EAAO7G,MACJ,0BAAMiB,UAAU,0BAA0B4F,EAAOrG,SAAWqG,EAAOrG,SAAW,cAGtF,yBAAKS,UAAU,cACX,mDACA,2BACIyB,KAAK,WACLzB,UAAS,uBAAkB4F,EAAOsF,iBAAmB,cACrDzB,YAAY,mBACZ1K,KAAK,kBACLiI,MAAOtB,EAAOwF,iBAAmB,GACjC1D,SAAUZ,IAEbhB,EAAO7G,MACJ,0BAAMiB,UAAU,0BAA0B4F,EAAOsF,gBAAkBtF,EAAOsF,gBAAkB,cAGpG,yBAAKlL,UAAU,aACX,yBAAKA,UAAU,wBACf,4BAAQyB,KAAK,SAASzB,UAAU,mBAAkB,uBAAGA,UAAU,mCAA/D,aC7BZ,IAAMmL,GAAkB,SAACzF,GAErB,MADa,IAGX0F,GAA0B,SAAC1F,GAC7B,IAAIE,EAAS,GASb,OARIF,EAAOnG,WACPqG,EAAOrG,SAAW,wBAElBmG,EAAOwF,gBAEAxF,EAAOwF,kBAAoBxF,EAAOnG,WACzCqG,EAAOsF,gBAAkB,sBAFzBtF,EAAOsF,gBAAkB,0BAItBtF,GAGI,SAASyF,GAAYtL,GAAQ,IAAD,EACLoD,mBAAS,IADJ,mBAChCyG,EADgC,KACrBC,EADqB,OAED1G,mBAASzF,KAAKC,MAAMI,aAAaC,QAAQ,UAFxC,mBAEhCoD,EAFgC,UAqCzC,OAfEL,qBAAU,WAENkD,EAAeqH,WAAWlK,EAAYjC,IACrCK,MAAK,SAAAnB,GACFwL,EAAaxL,EAASC,SACvBuK,OAAM,SAACC,GACqB,MAAxBA,EAAIzK,SAASY,QACZc,EAAMwJ,QAAQC,KAAK,mBAEvBnN,QAAQC,IAAIwM,QAKjB,IAEH,oCACI,kBAAC7D,EAAD,CACIrD,MAAM,YAEV,6BAAS5B,UAAU,WACf,yBAAKA,UAAU,eACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,aACf,yBAAKA,UAAU,sCAAsCG,KAAK,UAAUoL,mBAAiB,YACjF,uBAAGvL,UAAU,kBAAkB2B,cAAY,OAAOzB,KAAK,gBAAgBC,KAAK,MAAMqL,gBAAc,eAAeC,gBAAc,QAA7H,WACA,uBAAGzL,UAAU,WAAW2B,cAAY,OAAOzB,KAAK,wBAAwBC,KAAK,MAAMqL,gBAAc,wBAAwBC,gBAAc,SAAvI,uBAMZ,yBAAKzL,UAAU,YACf,yBAAKA,UAAU,cAAcb,GAAG,wBAC5B,yBAAKa,UAAU,4BAA4Bb,GAAG,eAAegB,KAAK,WAAWuL,kBAAgB,oBACzF,yBAAK1L,UAAU,QACX,yBAAKA,UAAU,aACX,kBAAC+K,GAAD,CAAazF,SAxDpB,SAAC,GAAc,IAAbI,EAAY,EAAZA,OACnBrJ,QAAQC,IAAI,UACZ2H,EAAe0H,cAAcvK,EAAYjC,GAAIuG,EAAO0C,MAAO1C,EAAO3G,KAAM2G,EAAO2C,SAC1E7I,MAAK,SAAAnB,GACFqE,EAAU,UAAWrE,EAASC,KAAKmG,YACpCoE,OAAM,SAACC,GACNpG,EAAU,QAASoG,EAAIzK,SAASC,KAAKmG,aAkDgBc,SAAU4F,GAAiB3F,cAAeoE,OAI3F,yBAAK5J,UAAU,gBAAgBb,GAAG,uBAAuBgB,KAAK,WAAWuL,kBAAgB,4BACrF,yBAAK1L,UAAU,QACX,yBAAKA,UAAU,eACX,wBAAIA,UAAU,cAAd,oBAEJ,yBAAKA,UAAU,aACX,kBAACiL,GAAD,CAAc3F,SAzDb,SAAC,GAAc,IAAbI,EAAY,EAAZA,OAC3BrJ,QAAQC,IAAIoJ,GACZzB,EAAe2H,eAAexK,EAAYjC,GAAIuG,EAAOnG,UAChDC,MAAK,SAAAnB,GACFqE,EAAU,UAAWrE,EAASC,KAAKmG,YACpCoE,OAAM,SAACC,GACNpG,EAAU,QAASoG,EAAIzK,SAASC,KAAKmG,aAmDyBc,SAAU6F,aC3FzE,SAASS,GAAS9L,GAAQ,IAAD,EACiBsF,EAAatF,EAAMuF,SAAUvF,EAAMwF,SAAUxF,EAAMyF,eAAjGE,EAD6B,EAC7BA,OAAQE,EADqB,EACrBA,OAAQgB,EADa,EACbA,aAAcH,EADD,EACCA,aADD,EAEJtD,mBAAS,CAAC,OAAQ,QAAS,UAFvB,mBAE7B2I,EAF6B,KAEnBC,EAFmB,KAiBpChL,qBAAU,WAZNiL,EAAYC,WACPzM,MACG,SAAAnB,GAEI0N,EAAY1N,EAASC,SAEzB,SAAAqB,SAQT,IACH,IAAM0J,EAAaC,aAAW,SAACvJ,GAAD,OAC1B,4BAAQO,QAAS,WAAOP,EAAMwJ,QAAQC,KAAK,qBAAsBxJ,UAAU,sBAAsByB,KAAK,UAAS,uBAAGzB,UAAU,mCAA5H,cAEN,OACE,oCACA,0BAAMuH,SAAUd,GACZ,yBAAKzG,UAAU,cACX,2CACA,2BACIyB,KAAK,OACLzB,UAAS,uBAAkB4F,EAAOtG,UAAY,cAC9CmK,YAAY,OACZ1K,KAAK,WACLiI,MAAOtB,EAAOpG,UAAY,GAC1BkI,SAAUZ,EACVoE,SAAUjL,EAAMmM,YAGnBtG,EAAO7G,MACJ,0BAAMiB,UAAU,0BAA0B4F,EAAO7G,KAAO6G,EAAO7G,KAAO,cAG9E,yBAAKiB,UAAU,cACX,wCACA,2BACIyB,KAAK,OACLzB,UAAS,uBAAkB4F,EAAO7G,MAAQ,cAC1C0K,YAAY,QACZ1K,KAAK,QACLiI,MAAOtB,EAAO0C,OAAS,GACvBZ,SAAUZ,IAEbhB,EAAO7G,MACJ,0BAAMiB,UAAU,0BAA0B4F,EAAOwC,MAAQxC,EAAOwC,MAAQ,cAGhF,yBAAKpI,UAAU,cACX,uCACA,2BACIyB,KAAK,OACLzB,UAAS,uBAAkB4F,EAAO7G,MAAQ,cAC1C0K,YAAY,OACZ1K,KAAK,OACLiI,MAAOtB,EAAO3G,MAAQ,GACtByI,SAAUZ,IAEbhB,EAAO7G,MACJ,0BAAMiB,UAAU,0BAA0B4F,EAAO7G,KAAO6G,EAAO7G,KAAO,cAG9E,yBAAKiB,UAAU,cACX,0CACA,8BACIA,UAAS,uBAAkB4F,EAAOyC,SAAW,cAC7CoB,YAAY,UACZ1K,KAAK,UACLyI,SAAUZ,EACVI,MAAOtB,EAAO2C,SAAW,KAE5BzC,EAAO7G,MACJ,0BAAMiB,UAAU,0BAA0B4F,EAAOyC,QAAUzC,EAAOyC,QAAU,cAGpF,yBAAKrI,UAAU,mBACX,+CACA,4BACIA,UAAU,gBACV+G,UAAU,EACVhI,KAAK,QACLyI,SAAUZ,EACVI,MAAOtB,EAAO9F,OAAS,GACvB8K,KAAK,KAEJoB,EAASpE,KAAI,SAACvH,EAAMwH,GAEjB,OAAO,4BAAQC,IAAKD,EAAOX,MAAO7G,EAAKpB,MAAOoB,EAAKpB,YAK7DgB,EAAMmM,WACR,oCACA,yBAAKlM,UAAU,cACX,2CACA,2BACIyB,KAAK,WACLzB,UAAS,uBAAkB4F,EAAOrG,UAAY,cAC9CkK,YAAY,WACZ1K,KAAK,WACLiI,MAAOtB,EAAOnG,UAAY,GAC1BiI,SAAUZ,IAEbhB,EAAO7G,MACJ,0BAAMiB,UAAU,0BAA0B4F,EAAOrG,SAAWqG,EAAOrG,SAAW,cAGtF,yBAAKS,UAAU,cACX,mDACA,2BACIyB,KAAK,WACLzB,UAAS,uBAAkB4F,EAAOsF,iBAAmB,cACrDzB,YAAY,mBACZ1K,KAAK,kBACLiI,MAAOtB,EAAOwF,iBAAmB,GACjC1D,SAAUZ,IAEbhB,EAAO7G,MACJ,0BAAMiB,UAAU,0BAA0B4F,EAAOsF,gBAAkBtF,EAAOsF,gBAAkB,eAKpG,yBAAKlL,UAAU,aACX,yBAAKA,UAAU,wBACf,kBAACqJ,EAAD,MACA,4BAAQ5H,KAAK,SAASzB,UAAU,mBAAkB,uBAAGA,UAAU,mCAA/D,aCpIZ,IAAMmM,GAAwB,SAACzG,GAC3B,IAAIE,EAAS,GAcb,OAbIF,EAAOpG,SAEAoG,EAAOpG,SAASpD,OAAS,IAChC0J,EAAOtG,SAAW,yCAFlBsG,EAAOtG,SAAW,uBAIlBoG,EAAOnG,WACPqG,EAAOrG,SAAW,wBAElBmG,EAAOwF,gBAEAxF,EAAOwF,kBAAoBxF,EAAOnG,WACzCqG,EAAOsF,gBAAkB,sBAFzBtF,EAAOsF,gBAAkB,0BAItBtF,GAELwG,GAAsB,SAAC1G,GACzB,IAAIE,EAAS,GAMb,OALIF,EAAOpG,SAEAoG,EAAOpG,SAASpD,OAAS,IAChC0J,EAAOtG,SAAW,yCAFlBsG,EAAOtG,SAAW,uBAIfsG,GAELwF,GAA0B,SAAC1F,GAC7B,IAAIE,EAAS,GASb,OARIF,EAAOnG,WACPqG,EAAOrG,SAAW,wBAElBmG,EAAOwF,gBAEAxF,EAAOwF,kBAAoBxF,EAAOnG,WACzCqG,EAAOsF,gBAAkB,sBAFzBtF,EAAOsF,gBAAkB,0BAItBtF,GAGI,SAASyG,GAAStM,GAAQ,IAAD,EACFoD,mBAAS,IADP,mBAC7ByG,EAD6B,KAClBC,EADkB,KAsChC3E,EAAW,kBACXuB,EAAe1G,EAAMU,MAAMqJ,OAAO3K,GAxBjB,SAAC,GAAc,IAAbuG,EAAY,EAAZA,OACnBrJ,QAAQC,IAAI,QAEZ2H,EAAe8F,KAAKhK,EAAMU,MAAMqJ,OAAO3K,GAAIuG,EAAO0C,MAAO1C,EAAO3G,KAAM2G,EAAO2C,QAAS3C,EAAO9F,OACxFJ,MAAK,SAAAnB,GACFqE,EAAU,UAAWrE,EAASC,KAAKmG,SACnC1E,EAAMwJ,QAAQC,KAAK,uBACpBX,OAAM,SAACC,GACNpG,EAAU,QAASoG,EAAIzK,SAASC,KAAKmG,aArB5B,SAAC,GAAc,IAAbiB,EAAY,EAAZA,OACnBrJ,QAAQC,IAAI,UAEZ2H,EAAe+F,OAAOtE,EAAOpG,SAAUoG,EAAO0C,MAAO1C,EAAO3G,KAAM2G,EAAO2C,QAAS3C,EAAO9F,MAAO8F,EAAOnG,UAClGC,MAAK,SAAAnB,GACFqE,EAAU,UAAWrE,EAASC,KAAKmG,SACnC1E,EAAMwJ,QAAQC,KAAK,uBACpBX,OAAM,SAACC,GACNpG,EAAU,QAASoG,EAAIzK,SAASC,KAAKmG,aA8B3CyH,IAAYnM,EAAMU,MAAMqJ,OAAO3K,GAC/B0I,EAAkB9H,EAAMU,MAAMqJ,OAAO3K,GAAKiN,GAAsBD,GAqBxE,OApBKpM,EAAMU,MAAMqJ,OAAO3K,KAClB+F,EAAW,aAGfnE,qBAAW,WACJhB,EAAMU,MAAMqJ,OAAO3K,IAClB8E,EAAegG,QAAQlK,EAAMU,MAAMqJ,OAAO3K,IACzCK,MAAK,SAAAnB,GACFwL,EAAaxL,EAASC,SACvBuK,OAAM,SAACC,GAINzM,QAAQC,IAAIwM,QAIrB,IAIH,oCACI,kBAAC7D,EAAD,CACIrD,MAAM,QACNsD,SAAUA,IAEd,6BAASlF,UAAU,WACf,yBAAKA,UAAU,OACVkM,GACD,oCACA,yBAAKlM,UAAU,YACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,aACf,yBAAKA,UAAU,sCAAsCG,KAAK,UAAUoL,mBAAiB,YACjF,uBAAGvL,UAAU,kBAAkB2B,cAAY,OAAOzB,KAAK,gBAAgBC,KAAK,MAAMqL,gBAAc,eAAeC,gBAAc,QAA7H,WACA,uBAAGzL,UAAU,WAAW2B,cAAY,OAAOzB,KAAK,wBAAwBC,KAAK,MAAMqL,gBAAc,wBAAwBC,gBAAc,SAAvI,uBAKZ,yBAAKzL,UAAU,YACf,yBAAKA,UAAU,cAAcb,GAAG,wBAC5B,yBAAKa,UAAU,4BAA4Bb,GAAG,eAAegB,KAAK,WAAWuL,kBAAgB,oBACzF,yBAAK1L,UAAU,QACX,yBAAKA,UAAU,eACX,wBAAIA,UAAU,cAAckF,EAA5B,IAAuC0E,EAAU7K,OAErD,yBAAKiB,UAAU,aACX,kBAAC,GAAD,CAAUsF,SAAUmB,EAAclB,SAAUsC,EAAiBrC,cAAeoE,EAAWsC,UAAWA,OAI9G,yBAAKlM,UAAU,gBAAgBb,GAAG,uBAAuBgB,KAAK,WAAWuL,kBAAgB,4BACrF,yBAAK1L,UAAU,QACX,yBAAKA,UAAU,eACX,wBAAIA,UAAU,cAAd,oBAEJ,yBAAKA,UAAU,aACX,kBAACiL,GAAD,CAAc3F,SAxEb,SAAC,GAAc,IAAbI,EAAY,EAAZA,OAC3BrJ,QAAQC,IAAIoJ,GACZzB,EAAe2H,eAAe7L,EAAMU,MAAMqJ,OAAO3K,GAAIuG,EAAOnG,UACvDC,MAAK,SAAAnB,GACFqE,EAAU,UAAWrE,EAASC,KAAKmG,SACnC1E,EAAMwJ,QAAQC,KAAK,uBACpBX,OAAM,SAACC,GACNpG,EAAU,QAASoG,EAAIzK,SAASC,KAAKmG,aAiEyBc,SAAU6F,YAStEc,GACE,yBAAKlM,UAAU,oBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,eACX,wBAAIA,UAAU,cAAckF,EAA5B,IAAuC0E,EAAU7K,OAErD,yBAAKiB,UAAU,aACX,kBAAC,GAAD,CAAUsF,SAAUmB,EAAclB,SAAUsC,EAAiBrC,cAAeoE,EAAWsC,UAAWA,U,wBCnJnH,O,6NARAhO,I,KAAUE,4B,SAAyCpB,I,gCAAf6B,Q,6BAA9BC,I,gRAGNZ,I,KAAUE,0B,SAAuCpB,I,gCAAf6B,Q,6BAA5BC,I,+HCLN,SAASwN,KAAgB,IAAD,EACKnJ,qBADL,mBAC5BoJ,EAD4B,KACdC,EADc,KAE7B9I,EAAe3B,IAAKC,MAAM,CAC5BJ,MAAO,gBACP+B,KAAM,oCACNd,KAAM,UACNe,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,mBAiBjB0I,EAAa,WACfxI,GAAewI,aACVjN,MAAK,SAACnB,GACHhC,QAAQC,IAAI+B,EAASC,MACrBkO,EAAgBnO,EAASC,SAC1BuK,OAAM,SAACC,GACNzM,QAAQC,IAAIwM,OAS1B,OANE/H,qBAAU,WAER,OADE0L,IACK,eAGN,IAEH,oCACI,kBAACxH,EAAD,CACIrD,MAAM,aAEV,6BAAS5B,UAAU,WACf,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,aACX,4BAAQM,QAxCX,WACjBoD,EAAad,OACZpD,MAAK,SAACsF,GACCA,EAAOC,cACP1I,QAAQC,IAAI,WACZ2H,GAAeyI,eACVlN,MAAK,SAACnB,GACHqE,EAAU,UAAWrE,EAASC,KAAKmG,SACnCgI,OACD5D,OAAM,SAACC,GACNpG,EAAU,QAASoG,EAAIzK,SAASC,KAAKmG,iBA8BFzE,UAAU,0BAAzC,sBACCuM,GACG,6BACKA,EAAa7E,KAAI,SAACtE,EAAauE,GAAd,OACd,uBAAGC,IAAKD,GAAR,kBAAgCvE,EAAY+F,SAAW/F,EAAY+F,QAAQpK,KAAQqE,EAAY+F,QAAQpK,KAAQ,aAA/G,mBACqBqE,EAAYuJ,0B,ICvCpDC,G,kDACnB,WAAY7M,GAAQ,IAAD,8BACjB,cAAMA,IAYR8M,YAAc,WACZ,IAAI,EAAKC,MAAM7J,OAAO,CACpB5G,QAAQC,IAAI,gBACZ,IAAMyQ,EAAYC,OAElBD,EAAUxI,GAAG,WAAW,WACtBlI,QAAQC,IAAI,uBAGdyQ,EAAUxI,GAAG,cAAc,WACzBlI,QAAQC,IAAI,+BACZ,EAAK2Q,SAAS,CAAChK,OAAO,OACtBiK,WAAW,EAAKL,YAAa,QAE/BE,EAAUxI,GAAG,qBAAqB,SAACE,GACjCpI,QAAQC,IAAI,mBAAmBmI,MAGjC,EAAKwI,SAAS,CAAChK,OAAO8J,MA/BP,EAmCnBxM,OAAS,WACPyL,EAAYzL,SACZ,EAAK0M,SAAS,CACZ7L,YAAa,MAnCf,EAAK0L,MAAQ,CACXxL,aAAa,EACb6L,SAAS,EACT/L,YAAa4K,EAAYoB,iBACzBC,MAAO,GACPpK,OAAQ,MARO,E,gEA2CjBvH,SAASI,KAAKwR,UAAUC,IAAI,gBAC5BzM,EAAexF,yBACfwF,EAAetF,mBACf,IAAMsC,EAAOkO,EAAYoB,iBAEtBtP,GACDzC,KAAK4R,SAAS,CACZ7L,YAAatD,EACbwD,YAAaxD,EAAK8B,MAAM4N,SAAS,kBACjCL,QAASrP,EAAK8B,MAAM4N,SAAS,gBAGjCnS,KAAKwR,gB,6CAGLxQ,QAAQC,IAAI,gBACTjB,KAAKyR,MAAM7J,SACZ5G,QAAQC,IAAI,2BACZjB,KAAKyR,MAAM7J,OAAOwK,gB,+BAOpB,IAAMC,EAAYrS,KAAK0E,MAAMU,MAAMO,KAD5B,EAEsD3F,KAAKyR,MAA1D1L,EAFD,EAECA,YAAaE,EAFd,EAEcA,YAA6B2B,GAF3C,EAE2BkK,QAF3B,EAEoCE,MAFpC,EAE2CpK,QAElD,OAAI7B,EAGF,oCACE,kBAACtB,EAAD,CAAeS,OAAQlF,KAAKkF,SAC5B,kBAACC,EAAD,CAAgBc,YAAaA,EAAaF,YAAaA,IAEvD,yBAAKpB,UAAU,mBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOgB,KAAI,UAAK0M,EAAL,UACT,kBAAC5F,EAAD,CAAU7E,OAAQA,KAEpB,kBAAC,IAAD,CAAOjC,KAAI,UAAK0M,EAAL,aACT,kBAACrC,GAAD,OAGF,kBAAC,IAAD,CAAOrK,KAAI,UAAK0M,EAAL,aACT,kBAAClM,EAAD,OAEF,kBAAC,IAAD,CAAOmM,OAAK,EAAC3M,KAAI,UAAK0M,EAAL,WAAwB,kBAACpF,EAAD,OACzC,kBAAC,IAAD,CAAOqF,OAAK,EAAC3M,KAAI,UAAK0M,EAAL,iBAA+BE,UAAWvB,KAC3D,kBAAC,IAAD,CAAOsB,OAAK,EAAC3M,KAAI,UAAK0M,EAAL,mBAAiCE,UAAWvB,KAE7D,kBAAC,IAAD,CAAOsB,OAAK,EAAC3M,KAAI,UAAK0M,EAAL,cAA2B,kBAACxD,EAAD,OAC5C,kBAAC,IAAD,CAAOyD,OAAK,EAAC3M,KAAI,UAAK0M,EAAL,oBAAkCE,UAAW9C,KAC9D,kBAAC,IAAD,CAAO6C,OAAK,EAAC3M,KAAI,UAAK0M,EAAL,sBAAoCE,UAAW9C,KAEhE,kBAAC,IAAD,CAAO6C,OAAK,EAAC3M,KAAI,UAAK0M,EAAL,cAA2B,kBAAC3E,EAAD,OAC5C,kBAAC,IAAD,CAAO4E,OAAK,EAAC3M,KAAI,UAAK0M,EAAL,oBAAkCE,UAAWjE,IAC9D,kBAAC,IAAD,CAAO3I,KAAI,UAAK0M,EAAL,sBAAoCE,UAAWjE,IAE1D,kBAAC,IAAD,CAAO3I,KAAI,UAAK0M,EAAL,cACT,kBAACpB,GAAD,OAGF,kBAAC,IAAD,CAAOqB,OAAK,EAAC3M,KAAM0M,GACjB,kBAAClM,EAAD,OAEF,kBAAC,IAAD,KACE,kBAACK,EAAD,SAMN,kBAACN,EAAD,OA5CK,kBAAC,IAAD,CAAUlB,GAAG,e,GAzEiBO,IAAMiN,WCRlCC,GAbG,SAAC/N,GACjB,OACE,yBAAKC,UAAU,iDACiB,KAA7BD,EAAMgO,OAAOC,YACd,4BAAKjO,EAAMgO,OAAOC,aAClB,GAEA,6CACA,4BAAKjO,EAAMgO,OAAOrJ,iBCNT,SAASuJ,KAAa,IAAD,EACO9K,mBAAS,CAAC,kBADjB,mBACzB+K,EADyB,KACZC,EADY,OAEJhL,mBAAS,IAFL,mBAEzB4K,EAFyB,KAEjBK,EAFiB,OAGMjL,oBAAS,GAHf,mBAGzB+C,EAHyB,KAGZC,EAHY,KAuB1BkI,EAAa,SAAClE,GAA+B,IAApB6D,EAAmB,uDAAP,GACvCzD,GAAa8D,WAAWlE,GACnB3K,MAAK,SAACnB,GAEHA,EAASC,KAAK0P,YAAYA,EAC1BI,EAAU/P,EAASC,SACpBuK,OAAM,SAACC,GACNzM,QAAQC,IAAIwM,OAoB1B,OAjBElI,IAAMG,WAAU,WAKZ,OAJArF,SAASI,KAAKwR,UAAUC,IAAI,cA3B5BhD,GAAatB,cACRzJ,MAAK,SAACnB,GAEH8P,EAAe9P,EAASC,SACzBuK,OAAM,SAACC,GACNzM,QAAQC,IAAIwM,MA0Bb,WACHpN,SAASI,KAAKwR,UAAUgB,OAAO,iBAEpC,IAEH1N,IAAMG,WAAU,WACTmF,EACCC,GAAe,GAEf1J,OAAO8R,UAEZ,CAACR,IAEJ,6BACI,yBAAK/N,UAAU,+BACX,yBAAKA,UAAU,eAAf,gBACA,yBAAKA,UAAU,aACX,yBAAKA,UAAU,2CACVkO,EAAYxG,KAAI,SAACyB,EAASxB,GACvB,OACI,4BAAQC,IAAKD,EAAO3H,UAAU,wDAAwDM,QAAS,kBA1CpG,SAAC6J,GAA+B,IAApB6D,EAAmB,uDAAP,GAGvCK,EAAWlE,EAAW6D,GAuCmGQ,CAAWrF,EAAQ/E,IAAK+E,EAAQpK,QAAQoK,EAAQpK,YAOxKgP,GACG,kBAAC,GAAD,CAAWA,OAAQA,KC7D/B,IAAMU,GAAgB,SAAC/I,GACnB,IAAIE,EAAS,GAOb,OANIF,EAAOpG,WACPsG,EAAOtG,SAAW,wBAElBoG,EAAOnG,WACPqG,EAAOrG,SAAW,wBAEfqG,GAGI,SAAS8I,GAAU3O,GAAQ,IAAD,EACgBsF,GAErD,SAAqBsJ,GACjB3C,EAAYvQ,MAAMiK,EAAOpG,SAAUoG,EAAOnG,UACrCC,MAAK,SAAAnB,GACFhC,QAAQC,IAAI+B,EAASC,MACrBoE,EAAU,UAAW,WAAarE,EAASC,KAAKgB,UAEhDS,EAAMwJ,QAAQC,KAAK,QACpBX,OAAM,SAACC,GACNzM,QAAQC,IAAIwM,GACZpG,EAAU,QAASoG,EAAIzK,SAASC,KAAKmG,cAX8BgK,IAAxE/I,EAD8B,EAC9BA,OAAQE,EADsB,EACtBA,OAAQgB,EADc,EACdA,aAAcH,EADA,EACAA,aAuBvC,OATE1F,qBAAU,WAIN,OAHArF,SAASI,KAAKwR,UAAUC,IAAI,cAC5BqB,EAAOtT,yBAEA,WACHI,SAASI,KAAKwR,UAAUgB,OAAO,iBAEpC,IAGH,yBAAKtO,UAAU,aACX,yBAAKA,UAAU,cACX,oCADJ,OAIA,yBAAKA,UAAU,QACX,yBAAKA,UAAU,6BACf,uBAAGA,UAAU,iBAAb,iCACA,0BAAMuH,SAAUd,GACZ,yBAAKzG,UAAU,oBACX,2BACIyB,KAAK,OACLzB,UAAS,uBAAkB4F,EAAOtG,SAAW,aAAe,IAE5DmK,YAAY,WACZjC,SAAUZ,EACV7H,KAAK,WACLiI,MAAOtB,EAAOpG,UAAY,KAE9B,yBAAKU,UAAU,sBACX,yBAAKA,UAAU,oBACf,0BAAMA,UAAU,kBAGnB4F,EAAOtG,UACJ,0BAAMU,UAAU,0BAA0B4F,EAAOtG,SAAWsG,EAAOtG,SAAW,cAGtF,yBAAKU,UAAU,oBACX,2BACIyB,KAAK,WACLzB,UAAS,uBAAkB4F,EAAOrG,UAAY,cAE9CkK,YAAY,WACZjC,SAAUZ,EACV7H,KAAK,WACLiI,MAAOtB,EAAOnG,UAAY,KAE9B,yBAAKS,UAAU,sBACX,yBAAKA,UAAU,oBACf,0BAAMA,UAAU,kBAGnB4F,EAAOrG,UACJ,0BAAMS,UAAU,0BAA0B4F,EAAOrG,SAAWqG,EAAOrG,SAAW,cAGtF,yBAAKS,UAAU,OACf,yBAAKA,UAAU,SACX,yBAAKA,UAAU,kBACf,2BAAOyB,KAAK,WAAWtC,GAAG,aAC1B,2BAAOuK,QAAQ,YAAf,iBAMJ,yBAAK1J,UAAU,SACX,4BAAQyB,KAAK,SAASzB,UAAU,6BAAhC,cAOR,uBAAGA,UAAU,QACT,kBAAC,IAAD,CAAMK,GAAG,YAAYL,UAAU,eAA/B,iC,sBC/FD,O,mGARP,OAAO9B,IAAMY,IAAIV,wBAAsB,CAAES,QAAS7B,Q,gCAE5CmC,GACN,OAAOjB,IAAMC,KAAKC,0BAAuB,CAACe,MAAK,CAAEN,QAAS7B,U,0BCTrD6R,GAAmBjO,IAAMkO,cAAc,CAChDC,UAAW,OAEmBnO,IAAMkO,cAAc,CAClDC,UAAW,OCHA,SAASC,KACtB,OACE,oCACE,kBAACH,GAAiBI,SAAlB,MACG,SAACF,GAAD,OACC,8BACIA,GAAa,IAAIrH,KAAI,SAACwH,EAAUvH,GAAX,OACrB,2BAAOC,IAAKD,EAAOxI,GAAE,eAAU+P,EAAUC,IAAMnP,UAAU,YAAYiB,IAAKiO,EAAUE,MAAOF,EAAUG,cCRpG,SAASC,GAAT,GAA4D,IAAtCC,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,aAEvDpT,QAAQC,IAAImT,GAEZ,IADA,IAAM9G,EAAO,GACJhB,EAAQ,EAAGA,EAAQ,GAAIA,IAC5BgB,EAAKa,KACL,yBAAK5B,IAAKD,EAAO3H,UAAU,OACvB,yBAAKA,UAAU,QACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,iCACX,wBAAIA,UAAU,yCAAd,WACcyP,EAAa9H,IAAU8H,EAAa9H,GAAOO,SAAWuH,EAAa9H,GAAOO,QAAQlJ,aAAgByQ,EAAa9H,GAAOO,QAAQlJ,aAAe,MAG3J,wBAAIgB,UAAU,+BACV,2BAAKyP,EAAa9H,IAAU8H,EAAa9H,GAAOjD,cAAiB+K,EAAa9H,GAAOjD,cAAgB,YAU/H,OACE,oCACI,6BAAS1E,UAAU,WACf,yBAAKA,UAAU,cACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,kCACX,yBAAKA,UAAS,gCAA2BuP,GAAW,UAChD,4CACA,0BAAMvP,UAAU,aAAY,2BAAKwP,GAAeA,EAAY9K,cAAiB8K,EAAY9K,cAAgB,OACzG,gDACA,wBAAI1E,UAAU,aAAd,WAAoCwP,GAAeA,EAAYtH,SAAWsH,EAAYtH,QAAQlJ,aAAgBwQ,EAAYtH,QAAQlJ,aAAe,SAI7J,yBAAKgB,UAAU,mBACX,yBAAKA,UAAU,kCACX,yBAAKA,UAAU,aACf,yBAAKA,UAAU,qDAAqD0I,MAAM,OAAO1M,OAAO,OAAO0T,MAAM,6BAA6BC,oBAAoB,iBAAiBC,UAAU,QAAQzP,KAAK,MAAMyI,aAAW,iCAC3M,8CACA,0BAAMF,MAAM,OAAO1M,OAAO,OAAO6T,KAAK,YACtC,0BAAMC,EAAE,MAAMC,EAAE,MAAMF,KAAK,UAAUG,GAAG,QAAxC,yBAQhB,yBAAKhQ,UAAU,kBACV2I,K,IC6HFsH,G,kDA3KX,WAAYlQ,GAAQ,IAAD,8BACf,cAAMA,IAYVmQ,SAAW,WACPC,GAAeD,WACV1Q,MAAK,SAACnB,GACH,EAAK4O,SAAS,CACV8B,UAAW1Q,EAASC,UAEzBuK,OAAM,SAACC,GACNzM,QAAQC,IAAIwM,OApBL,EAuBnB+D,YAAc,WACV,IAAI5J,EAAS,EAAK6J,MAAM7J,OAExB,GADA5G,QAAQC,IAAI,gBACR2G,EAAO,CACP,IAAMmN,EAAYpD,OAElBoD,EAAU7L,GAAG,WAAW,WACpBlI,QAAQC,IAAI,uBAEhB8T,EAAU7L,GAAG,cAAc,WACvBlI,QAAQC,IAAI,+BACZ,EAAK2Q,SAAS,CAAChK,OAAO,OACtBiK,WAAW,EAAKL,YAAa,QAEjCuD,EAAU9L,KAAK,WAAY,WAC3B8L,EAAU7L,GAAG,WAAW,SAACpF,GACrB9C,QAAQC,IAAI,wBAAyB6C,GACrC,EAAKkR,UAAUlR,MAEnBiR,EAAU7L,GAAG,aAAa,SAACpF,GACvB9C,QAAQC,IAAI,0BAA2B6C,GACvC,EAAKkR,UAAUlR,GAAI,MAEvB,EAAK8N,SAAS,CAAChK,OAAOmN,MA9CX,EAiDnBE,gBAAkB,WACd,IAAIrN,EAAS,EAAK6J,MAAM7J,OACrBA,IACCA,EAAOsN,IAAI,WAAW,WAClBlU,QAAQC,IAAI,kBAEhB2G,EAAOqB,KAAK,YAAa,WACzBrB,EAAOwK,aACP,EAAKR,SAAS,CAAChK,OAAO,SAzDX,EA4DnBoN,UAAY,SAAClR,GAA2B,IAAvBqR,IAAsB,yDACnCL,GAAeE,UAAUlR,GACpBK,MAAK,SAACnB,GACH,IAAIoS,EAAYpS,EAASC,KACzBmS,EAAUD,WAAYA,EACtB,EAAKvD,UAAS,SAAAH,GAEV,MAAO,CAAC4D,WADQ,uBAAO5D,EAAM4D,YAAb,CAAyBD,WAI9C5H,OAAM,SAACC,QAtEC,EA2EnB6H,iBA3EmB,sBA2EA,gCAAA1T,EAAA,yDACX,EAAK6P,MAAMyC,QADA,mBAEXlT,QAAQC,IAAI,uBACNsU,EAAc,EAAK9D,MAAM4D,aAEbE,EAAY1U,OAAS,GAL5B,uBAMP,EAAK+Q,SAAS,CACVsC,SAAQ,EACRC,YAAaoB,EAAY,KAEzBC,EAAeD,EAAY,GAAGlM,cAAcoM,WAC5C9R,EAAe4R,EAAY,GAAG1I,QAAQlJ,aAAa8R,WAXhD,SAYDC,KAAeC,QAAQH,EAAc7R,GAC1CQ,MAAK,SAACnB,GACAA,IACChC,QAAQC,IAAI,aAAc+B,GAC1B6O,YAAW,WACP,EAAKD,UAAS,SAAAH,GACV,IAAMmE,EAAanE,EAAM2C,aADR,eAEQ3C,EAAM4D,YAAxBQ,EAFU,KAEAC,EAFA,WAGjB,OAAGD,EAAMV,WACE,CACHE,WAAYS,EACZ1B,aAAa,CAAEyB,GAAH,oBAAaD,IACzB1B,SAAQ,GAIL,CACHmB,WAAYS,EACZ5B,SAAQ,QAKtB,SAnCH,2CA3EA,EAuHnB6B,YAvHmB,uCAuHL,WAAMC,GAAN,mBAAApU,EAAA,yDACN,EAAK6P,MAAMyC,QADL,uBAEN,EAAKtC,SAAS,CAACsC,SAAQ,IACnBsB,EAAeQ,EAAU3M,cAAcoM,WACvC9R,EAAeqS,EAAUnJ,QAAQlJ,aAAa8R,WAJ5C,SAKeC,KAAeC,QAAQH,EAAc7R,GACzDQ,MAAK,SAACnB,GACHhC,QAAQC,IAAI,OAAQ+B,GACjBiT,GAMC,EAAKrE,SAAS,CAACsC,SAAQ,OAdzB,OAKF+B,EALE,kDAvHK,sDAEf,EAAKxE,MAAQ,CACTiC,UAAU,KACV9L,OAAO,KACPsM,SAAS,EACTmB,WAAY,GACZlB,YAAa,KACbC,aAAc,GACdjL,KAAM,YATK,E,+DA4IA+M,EAAWC,GACtBnW,KAAKyR,MAAM4D,aAAec,EAAUd,aACpCrU,QAAQC,IAAI,sBACZjB,KAAKsV,sB,0CAITjV,SAASI,KAAKwR,UAAUC,IAAI,gBAC5BlS,KAAK6U,WACL7U,KAAKwR,gB,6CAGLxR,KAAKiV,oB,+BAIL,OACA,oCACI,kBAACzB,GAAiB4C,SAAlB,CAA2BzK,MAAO3L,KAAKyR,MAAMiC,WACzC,kBAACC,GAAD,OAEJ,yBAAKhP,UAAU,wBACf,kBAACsP,GAAD,CAAaC,QAASlU,KAAKyR,MAAMyC,QAASC,YAAanU,KAAKyR,MAAM0C,YAAaC,aAAcpU,KAAKyR,MAAM2C,gBAExG,4BAAQnP,QAASjF,KAAKsV,iBAAkB3Q,UAAU,wCAAlD,oB,GArKc6N,aCLX,SAAShM,KAiCtB,OAREd,qBAAU,WAIN,OAHArF,SAASI,KAAKwR,UAAUC,IAAI,cAC5BzM,EAAexF,yBAER,WACHI,SAASI,KAAKwR,UAAUgB,OAAO,iBAEpC,IAEH,yBAAKtO,UAAU,0BACX,wBAAIA,UAAU,yBAAd,QACA,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,eAAc,uBAAGA,UAAU,6CAAzC,0BACA,uBAAGA,UAAU,eAAb,sDCtCG,SAAS0R,KAAoB,IAAD,EACAvO,mBAAS,CAAC,kBADV,mBAChC+K,EADgC,KACnBC,EADmB,OAGXhL,mBAAS,IAHE,mBAGhC4K,EAHgC,KAGxBK,EAHwB,OAIDjL,oBAAS,GAJR,mBAIhC+C,EAJgC,KAInBC,EAJmB,KAwBjCkI,EAAa,SAAClE,GAA+B,IAApB6D,EAAmB,uDAAP,GACvCzD,GAAa8D,WAAWlE,GACnB3K,MAAK,SAACnB,GAEHA,EAASC,KAAK0P,YAAYA,EAC1BI,EAAU/P,EAASC,SACpBuK,OAAM,SAACC,GACNzM,QAAQC,IAAIwM,OAoB1B,OAjBElI,IAAMG,WAAU,WAKZ,OAJArF,SAASI,KAAKwR,UAAUC,IAAI,cA5B5BlR,QAAQC,IAAI,0BACZiO,GAAatB,cACRzJ,MAAK,SAACnB,GAEH8P,EAAe9P,EAASC,SACzBuK,OAAM,SAACC,GACNzM,QAAQC,IAAIwM,MA0Bb,WACHpN,SAASI,KAAKwR,UAAUgB,OAAO,iBAEpC,IAEH1N,IAAMG,WAAU,WACTmF,GACCC,GAAe,KAIpB,CAAC4H,IAEJ,6BACI,yBAAK/N,UAAU,+BACX,yBAAKA,UAAU,eAAf,gBACA,yBAAKA,UAAU,aACX,yBAAKA,UAAU,2CACVkO,EAAYxG,KAAI,SAACyB,EAASxB,GACvB,OACI,4BAAQC,IAAKD,EAAO3H,UAAU,wDAAwDM,QAAS,kBA1CpG,SAAC6J,GAA+B,IAApB6D,EAAmB,uDAAP,GACvC3R,QAAQC,IAAI,cACZD,QAAQC,IAAI6N,GACZkE,EAAWlE,EAAW6D,GAuCmGQ,CAAWrF,EAAQ/E,IAAK+E,EAAQpK,QAAQoK,EAAQpK,YAOxKgP,GACG,kBAAC,GAAD,CAAWA,OAAQA,KC/D/B,IAAM4D,GAAmB,SAACjM,GACtB,IAAIE,EAAS,GAiBb,OAbIF,EAAOpG,SAEAoG,EAAOpG,SAASpD,OAAS,IAChC0J,EAAOtG,SAAW,yCAFlBsG,EAAOtG,SAAW,uBAIlBoG,EAAOnG,WACPqG,EAAOrG,SAAW,wBAElBmG,EAAOwF,gBAEAxF,EAAOwF,kBAAoBxF,EAAOnG,WACzCqG,EAAOsF,gBAAkB,sBAFzBtF,EAAOsF,gBAAkB,0BAItBtF,GAKI,SAASgM,GAAa7R,GAAQ,IAAD,EACRoD,mBAAS,IADD,mBACjC2I,EADiC,KACvBC,EADuB,OAEa1G,GAErD,SAAyBsJ,GAIrB3C,EAAYpQ,SAAS8J,EAAOpG,SAAUoG,EAAOnG,SAAUmG,EAAO9F,MAAO8F,EAAO7F,UACvEL,MAAK,SAAAnB,GACFhC,QAAQC,IAAI+B,EAASC,MACrBoE,EAAU,UAAWrE,EAASC,KAAKmG,SAEnC1E,EAAMwJ,QAAQC,KAAK,aACpBX,OAAM,SAACC,GACNpG,EAAU,QAASoG,EAAIzK,SAASC,KAAKmG,cAbiCkN,IAA3EjM,EAFiC,EAEjCA,OAAQE,EAFyB,EAEzBA,OAAQgB,EAFiB,EAEjBA,aAAcH,EAFG,EAEHA,aAuCvC,OARE1F,qBAAU,WAIN,OAhBAiL,EAAYC,WACPzM,MACG,SAAAnB,GACIhC,QAAQC,IAAI+B,EAASC,MACrByN,EAAY1N,EAASC,SAEzB,SAAAqB,OAQRjE,SAASI,KAAKwR,UAAUC,IAAI,iBAC5BzM,EAAexF,yBACR,WACHI,SAASI,KAAKwR,UAAUgB,OAAO,oBAEpC,IAEH,yBAAKtO,UAAU,gBACX,yBAAKA,UAAU,iBACX,oCADJ,OAGA,yBAAKA,UAAU,QACX,yBAAKA,UAAU,gCACf,uBAAGA,UAAU,iBAAb,6BAEA,0BAAMuH,SAAUd,GACZ,yBAAKzG,UAAU,+BACX,2BACIyB,KAAK,OACLzB,UAAS,uBAAkB4F,EAAO/F,UAAY,cAC9C4J,YAAY,YACZjC,SAAUZ,EACV7H,KAAK,WACLiI,MAAOtB,EAAO7F,UAAY,KAE9B,yBAAKG,UAAU,sBACX,yBAAKA,UAAU,oBACf,0BAAMA,UAAU,qBAGnB4F,EAAO/F,UACJ,0BAAMG,UAAU,0BAA0B4F,EAAO/F,SAAW+F,EAAO/F,SAAW,cAItF,yBAAKG,UAAU,oBACX,2BACIyB,KAAK,OACLzB,UAAS,uBAAkB4F,EAAOtG,UAAY,cAC9CmK,YAAY,WACZjC,SAAUZ,EACV7H,KAAK,WACLiI,MAAOtB,EAAOpG,UAAY,KAE9B,yBAAKU,UAAU,sBACX,yBAAKA,UAAU,oBACf,0BAAMA,UAAU,kBAGnB4F,EAAOtG,UACJ,0BAAMU,UAAU,0BAA0B4F,EAAOtG,SAAWsG,EAAOtG,SAAW,cAGtF,yBAAKU,UAAU,mBACX,+CACC,4BACGA,UAAU,gBACV+G,UAAU,EACVhI,KAAK,QACLyI,SAAUZ,EACVI,MAAOtB,EAAO9F,OAAS,GACvB8K,KAAK,KAEJoB,EAASpE,KAAI,SAACvH,EAAMwH,GAAP,OACV,4BAAQC,IAAKD,EAAOX,MAAO7G,EAAKpB,MAAOoB,EAAKpB,WAIxD,yBAAKiB,UAAU,oBACX,2BACIyB,KAAK,WACLzB,UAAS,uBAAkB4F,EAAOrG,UAAY,cAC9CkK,YAAY,WACZjC,SAAUZ,EACV7H,KAAK,WACLiI,MAAOtB,EAAOnG,UAAY,KAE9B,yBAAKS,UAAU,sBACX,yBAAKA,UAAU,oBACf,0BAAMA,UAAU,kBAGnB4F,EAAOrG,UACJ,0BAAMS,UAAU,0BAA0B4F,EAAOrG,SAAWqG,EAAOrG,SAAW,cAGtF,yBAAKS,UAAU,oBACX,2BACIyB,KAAK,WACLzB,UAAS,uBAAkB4F,EAAOsF,iBAAmB,cACrDzB,YAAY,kBACZjC,SAAUZ,EACV7H,KAAK,kBACLiI,MAAOtB,EAAOwF,iBAAmB,KAErC,yBAAKlL,UAAU,sBACX,yBAAKA,UAAU,oBACf,0BAAMA,UAAU,kBAGnB4F,EAAOsF,iBACJ,0BAAMlL,UAAU,0BAA0B4F,EAAOsF,gBAAkBtF,EAAOsF,gBAAkB,cAGpG,4BAAQzJ,KAAK,SAASzB,UAAU,6BAAhC,aAEJ,uBAAGA,UAAU,QACT,kBAAC,IAAD,CAAMK,GAAG,SAASL,UAAU,eAA5B,iCCtID6R,OA5Bf,WACE,OACE,kBAAC,IAAD,KACI,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOlE,OAAK,EAAC3M,KAAK,IAAI8Q,OAAQ,kBAAM,kBAAC,IAAD,CAAUzR,GAAG,iBACjD,kBAAC,IAAD,CAAOsN,OAAK,EAAC3M,KAAK,SAAS4M,UAAWc,KACtC,kBAAC,IAAD,CAAOf,OAAK,EAAC3M,KAAK,YAAY4M,UAAWgE,KACzC,kBAAC,IAAD,CAAO5Q,KAAK,aAAa8Q,OAAQ,SAAC/R,GAAD,OAAW,kBAAC,GAAkBA,MAI/D,kBAAC,IAAD,CAAOiB,KAAK,YACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAACiN,GAAD,OAEF,kBAAC,IAAD,CAAOjN,KAAK,aACV,kBAAC0Q,GAAD,OAEF,kBAAC,IAAD,KACE,kBAAC,GAAD,UCpBQK,QACW,cAA7BtV,OAAOiC,SAASsT,UAEe,UAA7BvV,OAAOiC,SAASsT,UAEhBvV,OAAOiC,SAASsT,SAASvR,MACvB,2DCZNwR,IAASH,OAAO,kBAAC,GAAD,MAASpW,SAASwW,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB7S,MAAK,SAAA8S,GACJA,EAAaC,gBAEd1J,OAAM,SAAAlJ,GACLtD,QAAQsD,MAAMA,EAAM8E,a,iBEzIxB,IAuBM+N,EAAY,WACd,IAAIC,EAAa,EASjB,OARAvF,YAAW,WACPwF,EAAK,aACND,GACHA,GAAuB,KACvBvF,YAAW,WACPwF,EAAK,kBACND,GACHA,GAAuB,MAKrBE,EAAa,SAACC,EAAGC,GACnB3F,YAAW,WACPwF,EAAK,QAAQG,KACd,KAAKD,IAGNE,EAAgB,SAACjC,GAOnB,IANA,IAAI4B,EAAa,EACbM,EAAY9L,MAAMC,KAAK2J,GACvBmC,EAAOnC,EACPoC,EAAaF,EAAU7W,OAAO,EAE9B0W,EAAI,EACCM,EAAI,EAAGA,EAAIH,EAAU7W,OAAQgX,IAAK,CAEvC,IAAIL,EAASE,EAAUG,GAAKC,KAAKC,IAAI,GAAKH,EAAWC,GACrD,GAAGL,EAAO,UAIJ,IAAGG,EAAK,GAAG,CACbL,EAAWC,EAAGI,GACdP,GAAwB,KACxBG,IACAI,EAAO,EAEP,MAEgB,IAAXH,IACLF,EAAWC,EAAGC,GACdJ,GAAwB,KACxBG,KAMJ,GAAY,KAJZI,GAAQH,GAIO,MAInB,OAAOJ,GAKRC,EAAO,SAACvT,GAEb,IAAMkU,EAAY3X,SAASwW,eAAe/S,GAAIuT,OAC3B,OAAhBW,GAEFA,EAAYxK,OAAM,WACjBnN,SAASwW,eAAe/S,GAAImU,QAC5B5X,SAASwW,eAAe/S,GAAIoU,YAAY,EACxC7X,SAASwW,eAAe/S,GAAIuT,WAO1B3B,EAAiB,CACnBC,QAnGgB,SAACH,EAAc2C,GAC3B,OAAO,IAAIC,SAAQ,SAAAC,GACf,IAAIC,EAAO,EACXzG,YAAW,WACPyG,EAAOb,EAAcjC,GACrB3D,YAAW,WACPyG,EAAOnB,IACPtF,YAAW,WACPyG,EAAOb,EAAcU,GACrBtG,YAAW,WAGH7Q,QAAQC,IAAI,aACZoX,GAAQ,KAGbC,KACJA,KACJA,KACJA,QAmFfC,EAAOC,QAAU9C,G","file":"static/js/main.a81206ab.chunk.js","sourcesContent":["class helper {\r\n  fixallHeight(){\r\n    this.fixLoginRegisterHeight();\r\n    this.fixSidebarHeight();\r\n    this.fixContentHeight();\r\n  }\r\n  fixLoginRegisterHeight(){\r\n    const login = document.getElementsByClassName('login-box');\r\n    const register = document.getElementsByClassName('register-box');\r\n    const vcenter = document.getElementsByClassName('vcenter-box');\r\n    const body = document.body;\r\n    body.style.height = null;\r\n    body.style.minHeight = null;\r\n    if( vcenter.length !== 0 ){\r\n      body.style.height = null;      \r\n    }\r\n    else if(login.length === 0 && register.length === 0) {\r\n      body.style.height = 'auto';      \r\n    } else {\r\n      const selected = login.length === 0 ? register[0] : login[0];\r\n      const selectedHeight = selected.clientHeight;\r\n      body.style.minHeight = selectedHeight+'px';\r\n      console.log(selectedHeight);\r\n    }\r\n    //console.log(login.length);\r\n\r\n  }\r\n  fixSidebarHeight(){\r\n    const sidebar = document.getElementsByClassName('main-sidebar');\r\n    const windowHeight = window.frames.innerHeight;\r\n    const bodyHeight = document.body.clientHeight;\r\n    if(sidebar[0]){\r\n      sidebar[0].style.minHeight = bodyHeight > windowHeight ? bodyHeight+'px' : windowHeight+'px';\r\n    }\r\n    \r\n    //console.log('calculate sidebar height' + windowHeight);\r\n\r\n  }\r\n  fixContentHeight(){\r\n    const header = document.getElementsByClassName('main-header');\r\n    const footer = document.getElementsByClassName('main-footer');\r\n    const content = document.getElementsByClassName('content-wrapper');\r\n    const windowHeight = window.frames.innerHeight;    \r\n    const bodyHeight = document.body.clientHeight;  \r\n    if(content[0]){\r\n      content[0].style.minHeight = (windowHeight - (header[0].clientHeight+1) - (footer[0].clientHeight+1))+'px';\r\n    }\r\n  }\r\n\r\n}\r\nexport default new helper();\r\n/*function fixLoginRegisterHeight() {\r\n    if ($(Selector.LOGIN_BOX + ', ' + Selector.REGISTER_BOX).length === 0) {\r\n      $('body, html').css('height', 'auto')\r\n    } else if ($(Selector.LOGIN_BOX + ', ' + Selector.REGISTER_BOX).length !== 0) {\r\n      let box_height = $(Selector.LOGIN_BOX + ', ' + Selector.REGISTER_BOX).height()\r\n\r\n      if ($('body').css('min-height') !== box_height) {\r\n        $('body').css('min-height', box_height)\r\n      }\r\n    }\r\n}*/\r\n","import axios from \"axios\";\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\nexport default async function authHeader(){\r\n    return UserHeader()\r\n    /*const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    if(user && user.accessToken){\r\n        //return { Authorization: 'Bearer ' + user.accessToken };\r\n        // for Node.js Express back-end\r\n        //console.log(user.accessToken);\r\n        return { 'x-access-token': user.accessToken }\r\n    } else {\r\n        return {}\r\n    }*/\r\n}\r\nconst isExpired = (exp?: number) => {\r\n    if (!exp) {\r\n        return false;\r\n    }\r\n\r\n    return Date.now() > exp;\r\n};\r\nconst getExpirationDate = (jwtToken?: string): number | null => {\r\n    if (!jwtToken) {\r\n        return null;\r\n    }\r\n\r\n    const jwt = JSON.parse(atob(jwtToken.split('.')[1]));        \r\n\r\n    // multiply by 1000 to convert seconds into milliseconds\r\n    return jwt && jwt.exp && jwt.exp * 1000 || null;\r\n};\r\nasync function UserHeader() {\r\n    let user = JSON.parse(localStorage.getItem(\"user\"));\r\n    if(user && user.accessToken){\r\n        if (isExpired(getExpirationDate(user.accessToken))) {\r\n            console.log(\"isExpired\");\r\n            const accessToken = user.accessToken;\r\n            const response = await axios.post(API_URL+'auth/update-token', {accessToken} )\r\n            if(response.data){\r\n                user={...user,\r\n                    accessToken:response.data.accessToken,\r\n                }\r\n                localStorage.setItem(\"user\", JSON.stringify(user));\r\n                return { 'x-access-token': response.data.accessToken }\r\n                \r\n            }else{\r\n                localStorage.removeItem(\"user\");\r\n                window.location.reload();\r\n            }\r\n            //return { 'x-access-token': user.accessToken }\r\n            return { 'x-access-token': response.data.accessToken }\r\n\r\n        }else{\r\n            return { 'x-access-token': user.accessToken }\r\n        }\r\n        \r\n    } else {\r\n        return {}\r\n    }\r\n  }","import axios from \"axios\";\r\nimport authHeader from \"../service/auth-header\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL+\"counters/\";\r\n\r\nclass CountersService  {\r\n    async getAll(){\r\n        return axios.get(API_URL , { headers: await authHeader() });        \r\n    }\r\n\r\n    async create(name, counter_code, status, services){        \r\n        return axios.post(API_URL + 'create', {\r\n            name,\r\n            status,\r\n            counter_code,\r\n            services\r\n        }, { headers: await authHeader() });\r\n\r\n    }\r\n\r\n    async findOne(id){\r\n        return axios.get(API_URL + 'edit/'+id, { headers: await authHeader() });\r\n    }\r\n\r\n    async edit(name, counter_code, status, id, services){        \r\n        return axios.post(API_URL + 'edit/'+id, {\r\n            name,\r\n            status,\r\n            counter_code,\r\n            services\r\n        }, { headers: await authHeader() });\r\n\r\n    }\r\n\r\n    async delete(id){\r\n        return axios.delete(API_URL + 'delete/'+ id, { headers: await authHeader() });\r\n    }\r\n\r\n    async availableDesk(){\r\n        return axios.get(API_URL + 'available', { headers: await authHeader() });\r\n    }\r\n\r\n    async selectDesk(deskId){\r\n        return axios.post(API_URL + 'selectdesk', {deskId}, {headers: await authHeader() });\r\n    }\r\n\r\n    async checkChosenDesk(){\r\n        return axios.get(API_URL + 'checkchoosen', { headers: await authHeader() })\r\n    }\r\n    async closeDesk(){\r\n        return axios.post(API_URL + 'closedesk', {},{ headers: await authHeader() })\r\n    }\r\n    \r\n\r\n}\r\nexport default new CountersService();","import axios from \"axios\";\r\nimport countersService from \"./counters.service\";\r\nimport CountersService from \"./counters.service\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nclass AuthService {\r\n    getRoles(){\r\n        return axios.get(API_URL+'getroles');\r\n    }\r\n\r\n    login(username, password){\r\n        return axios\r\n            .post(API_URL + \"auth/signin\", {\r\n                username,\r\n                password\r\n            })\r\n            .then(response => {\r\n                if(response.data.accessToken) {\r\n                    localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n                }\r\n\r\n                return response;\r\n            });\r\n    }\r\n\r\n    logout(){\r\n        countersService.closeDesk()\r\n        .then(\r\n            response => {\r\n                localStorage.removeItem(\"user\");\r\n            },\r\n            error => {\r\n                console.log(error);\r\n            }\r\n        )\r\n        //localStorage.removeItem(\"user\");\r\n    }\r\n\r\n    register(username, password, roles, fullname){\r\n        return axios.post(API_URL + \"auth/signup\", {\r\n            username,\r\n            password,\r\n            roles,\r\n            fullname\r\n        });\r\n    }\r\n\r\n    getCurrentUser(){\r\n        return JSON.parse(localStorage.getItem(\"user\"));\r\n    }\r\n\r\n    test(username, password, roles, fullname){\r\n        return axios.post(API_URL + \"signup\", {\r\n            username,\r\n            password,\r\n            roles,\r\n            fullname\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default new AuthService();","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function HeaderPartial(props) {\r\n  return (\r\n    <nav className=\"main-header navbar navbar-expand navbar-blue navbar-light\">\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\"><a className=\"nav-link\" data-widget=\"pushmenu\" href=\"/#\" role=\"button\"><i className=\"fas fa-bars\" /></a></li>\r\n        <li className=\"nav-item\">\r\n          <NavLink className=\"nav-link\" activeClassName=\"active\" to='/'>\r\n              Home\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"nav-item\">          \r\n          <NavLink className=\"nav-link\" activeClassName=\"active\" to='/login'>\r\n              Login\r\n          </NavLink>  \r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <NavLink className=\"nav-link\" activeClassName=\"active\" to='/register'>\r\n              Register\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <NavLink className=\"nav-link\" activeClassName=\"active\" to='/monitor'>\r\n              Monitor\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <NavLink className=\"nav-link\" activeClassName=\"active\" to='/kiosk'>\r\n              Kiosk\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n      <ul className=\"navbar-nav ml-auto\">\r\n        <li className=\"nav-item d-none d-sm-inline-block\">\r\n          <button className=\"nav-link btn btn-danger btn-labeled\" onClick={props.logout}>\r\n            <span className=\"btn-label\"><i className=\"nav-icon fas fa-power-off\" /></span>\r\n            Logout\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n\r\n  \r\n  );\r\n}\r\n","import React from 'react';\r\nimport { NavLink, useLocation, useRouteMatch } from \"react-router-dom\";\r\nimport adminlteHelper from '../../helper/adminlte.helper';\r\n\r\nexport default function SidebarPartial(props) {\r\n    let match = useRouteMatch()    \r\n    let location = useLocation();\r\n    React.useLayoutEffect(()=>{\r\n        //console.log(location);\r\n        adminlteHelper.fixSidebarHeight()\r\n\r\n    },[location])\r\n    React.useEffect(()=>{\r\n        \r\n    },[location])\r\n  return (\r\n    <aside className=\"main-sidebar sidebar-dark-info elevation-4\">\r\n        <NavLink to={`${match.path}/`} className=\"brand-link\">\r\n            <img src=\"/img/AdminLTELogo.png\" alt=\"AdminLTE Logo\" className=\"brand-image img-circle elevation-3\" style={{opacity: '0.8'}} />\r\n            <span className=\"brand-text font-weight-light\">AdminLTE 3</span>\r\n        </NavLink>\r\n    <div className=\"sidebar\">\r\n        <div className=\"user-panel mt-3 pb-3 mb-3 d-flex\">\r\n        <div className=\"image\"><img src=\"/img/avatar2.png\" className=\"img-circle elevation-2\" alt=\"User\" /></div>\r\n        <div className=\"info\"><NavLink to={`${match.path}/profile`} className=\"d-block\">{props.currentUser.fullname ? props.currentUser.fullname : 'Dummy name'}</NavLink></div>\r\n        </div>\r\n        <nav className=\"mt-2\">\r\n        <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n            <li className=\"nav-item\">                \r\n                <NavLink className=\"nav-link\" activeClassName=\"active\" to={`${match.path}/desk`}>\r\n                    <i className=\"nav-icon fas fa-laptop-house\" /><p>Desk</p>\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" activeClassName=\"active\" to={`${match.path}/profile`}>\r\n                    <i className=\"nav-icon fas fa-user\" /><p>Profile</p>\r\n                </NavLink>\r\n            </li>\r\n            {props.isModerator &&\r\n            <>\r\n            <li className=\"nav-header\">Admin</li>\r\n            <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" activeClassName=\"active\" to={`${match.path}/reports`}>\r\n                    <i className=\"nav-icon far fa-chart-bar\" /><p>Reports</p>\r\n                </NavLink>                \r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" activeClassName=\"active\" to={`${match.path}/users`}>\r\n                    <i className=\"nav-icon fas fa-users\" /><p>Users List</p>\r\n                </NavLink>                \r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" activeClassName=\"active\" to={`${match.path}/counters`}>\r\n                    <i className=\"nav-icon fas fa-users\" /><p>Counters List</p>\r\n                </NavLink>                \r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" activeClassName=\"active\" to={`${match.path}/services`}>\r\n                    <i className=\"nav-icon fas fa-users\" /><p>Services List</p>\r\n                </NavLink>            \r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" activeClassName=\"active\" to={`${match.path}/settings`}>\r\n                    <i className=\"nav-icon fas fa-wrench\" /><p>Settings</p>\r\n                </NavLink>\r\n            </li>\r\n            </>\r\n            }\r\n            <li className=\"nav-header\">MISCELLANEOUS</li>\r\n            <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" activeClassName=\"active\" to='/maintenance'>\r\n                    <i className=\"nav-icon fas fa-cog\" /><p>Maintenance</p>\r\n                </NavLink>            \r\n            </li>\r\n        </ul>\r\n        </nav>\r\n    </div>\r\n    </aside>\r\n\r\n\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function FooterPartial() {\r\n  return (\r\n    <footer className=\"main-footer\">\r\n        <div className=\"float-right d-none d-sm-block\">\r\n            <b>Version</b> 3.0.5\r\n        </div>\r\n        <strong>Copyright © 2014-2019 <a href=\"http://adminlte.io\">AdminLTE.io</a>.</strong> All rights\r\n        reserved.\r\n    </footer>\r\n\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Content1() {\r\n  return (\r\n    <div>\r\n        {/* Content Header (Page header) */}\r\n        <section className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\">\r\n                <h1>Blank Page</h1>\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <ol className=\"breadcrumb float-sm-right\">\r\n                  <li className=\"breadcrumb-item\"><a href=\"/#\">Home</a></li>\r\n                  <li className=\"breadcrumb-item active\">Content 1</li>\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>{/* /.container-fluid */}\r\n        </section>\r\n        {/* Main content */}\r\n        <section className=\"content\">\r\n          {/* Default box */}\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h3 className=\"card-title\">Content 1</h3>\r\n              <div className=\"card-tools\">\r\n                <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"collapse\" data-toggle=\"tooltip\" title=\"Collapse\">\r\n                  <i className=\"fas fa-minus\" /></button>\r\n                <button type=\"button\" className=\"btn btn-tool\" data-card-widget=\"remove\" data-toggle=\"tooltip\" title=\"Remove\">\r\n                  <i className=\"fas fa-times\" /></button>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              Start creating your amazing application!\r\n            </div>\r\n            {/* /.card-body */}\r\n            <div className=\"card-footer\">\r\n              Footer\r\n            </div>\r\n            {/* /.card-footer*/}\r\n          </div>\r\n          {/* /.card */}\r\n        </section>\r\n        {/* /.content */}\r\n        </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function NoPages() {\r\n  return (\r\n    <div>\r\n        <section className=\"content-header\">\r\n            <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n                <div className=\"col-sm-6\">\r\n                <h1>404 Error Page</h1>\r\n                </div>\r\n                <div className=\"col-sm-6\">\r\n                <ol className=\"breadcrumb float-sm-right\">\r\n                    <li className=\"breadcrumb-item\"><a href=\"/#\">Home</a></li>\r\n                    <li className=\"breadcrumb-item active\">404 Error Page</li>\r\n                </ol>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </section>\r\n        <section className=\"content\">\r\n            <div className=\"error-page\">\r\n            <h2 className=\"headline text-warning\"> 404</h2>\r\n            <div className=\"error-content\">\r\n                <h3><i className=\"fas fa-exclamation-triangle text-warning\" /> Oops! Page not found.</h3>\r\n                <p>\r\n                We could not find the page you were looking for.\r\n                \r\n                </p>\r\n                \r\n            </div>\r\n            {/* /.error-content */}\r\n            </div>\r\n            {/* /.error-page */}\r\n        </section>\r\n    </div>\r\n\r\n  );\r\n}\r\n","import Swal from \"sweetalert2\";\r\n\r\nconst Toast = Swal.mixin({\r\n  toast: true,\r\n  position: \"top-end\",\r\n  showConfirmButton: false,\r\n  timer: 3000,\r\n  timerProgressBar: true,\r\n  onOpen: (toast) => {\r\n    toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n    toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n  },\r\n});\r\n\r\nconst makeToast = (type, msg) => {\r\n  Toast.fire({\r\n    icon: type,\r\n    title: msg,\r\n  });\r\n};\r\n\r\nexport default makeToast;","import axios from \"axios\";\r\nimport authHeader from \"../service/auth-header\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL+\"queue/\";\r\n//const API_SERVER = process.env.REACT_APP_API_URL;\r\n\r\nclass DesksService  {\r\n    async ticketCount(services){\r\n        return axios.post(API_URL+ 'getcount', {services}, { headers: await authHeader() })\r\n    }\r\n    async getCurrentTicket(deskID){\r\n        return axios.post(API_URL+ 'getcurrentticket', {deskID}, { headers: await authHeader() })\r\n    }\r\n    async doneCall(currentTicket){\r\n        return axios.post(API_URL+ 'setdone', {currentTicket}, { headers: await authHeader() })\r\n    }\r\n    async missedCall(currentTicket){\r\n        return axios.post(API_URL+ 'setmissed', {currentTicket}, { headers: await authHeader() })\r\n    }\r\n\r\n    async nextCall(deskID, services, currentTicket=null){\r\n        return axios.post(API_URL+ 'nextcall', {deskID, services, currentTicket}, { headers: await authHeader() })\r\n    }\r\n}\r\n\r\nexport default new DesksService();","import React, { useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport makeToast from '../helper/Toaster';\r\nimport serviceFactory from '../service/desk.service'\r\n\r\nexport default function DeskComponent({closeDesk, socket, desk}) {\r\n    const [ticketCount, setticketCount] = useState(0);\r\n    const [missedCount, setmissedCount] = useState(0);\r\n    const [currentticket, setcurrentTicket] = useState(null);\r\n\r\n    const confirmation = Swal.mixin({\r\n        title: 'Are you sure?',\r\n        text: \"You won't be able to revert this!\",\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Yes, This ticket missed'\r\n      });\r\n\r\n    const getTicketCount = () => {\r\n        serviceFactory.ticketCount(desk.services)\r\n        .then(\r\n            response => {  \r\n                console.log(response.data);                  \r\n                \r\n                setticketCount(response.data.waitingCount);\r\n                setmissedCount(response.data.missedCount)                \r\n            },\r\n            error => {\r\n                console.log(error);\r\n            }\r\n        );\r\n                \r\n    }  \r\n    const getCurrentTicket = () => {\r\n        if(!currentticket){\r\n            serviceFactory.getCurrentTicket(desk._id)\r\n            .then(\r\n                response => {\r\n                    if(response.data){\r\n                        setcurrentTicket(response.data);\r\n                    }\r\n                    \r\n                },\r\n                error => {\r\n                    console.log(error);\r\n                }\r\n            )\r\n        }\r\n    }\r\n    const doneHandle=()=> {\r\n        if(currentticket){\r\n            serviceFactory.doneCall(currentticket._id)\r\n            .then(\r\n                response => {\r\n                    if(response.data){\r\n                        console.log(response.data);\r\n                        if(currentticket._id === response.data._id){\r\n                            makeToast('success', \"Ticket \"+currentticket.ticket_number+\" Done\");\r\n                            setcurrentTicket(null);\r\n                        }\r\n                        //setcurrentTicket(response.data);\r\n                    }\r\n                    \r\n                },\r\n                error => {\r\n                    console.log(error);\r\n                }\r\n            )\r\n        }else {\r\n            makeToast('error', \"No ticket on process\");\r\n        }\r\n\r\n    }\r\n    const reCallHandle=()=> {\r\n        if(currentticket){\r\n            socket.emit(\"TicketReCalled\", currentticket._id)\r\n        }else {\r\n            makeToast('error', \"No ticket on process\");\r\n        }\r\n\r\n    }\r\n\r\n    const missedHandle=()=>{\r\n        if(currentticket){\r\n            confirmation.fire()\r\n            .then((result) => {\r\n                if (result.isConfirmed) {\r\n                    serviceFactory.missedCall(currentticket._id)\r\n                    .then(\r\n                        response => {\r\n                            if(response.data){\r\n                                console.log(response.data);\r\n                                if(currentticket._id === response.data._id){\r\n                                    makeToast('question', \"Ticket \"+currentticket.ticket_number+\" Missed\");\r\n                                    setcurrentTicket(null);\r\n                                    getTicketCount();\r\n                                    socket.emit(\"TicketMissed\",response.data._id)\r\n                                }\r\n                                //setcurrentTicket(response.data);\r\n                            }\r\n                            \r\n                        },\r\n                        error => {\r\n                            console.log(error);\r\n                        }\r\n                    )\r\n                }\r\n\r\n            })\r\n            \r\n            \r\n        }else {\r\n            makeToast('error', \"No ticket on process\");\r\n        }        \r\n    }\r\n    const transferHandle=()=>{\r\n        if(currentticket){\r\n            makeToast('error', \"Not implemented yet\");\r\n            \r\n        }else {\r\n            makeToast('error', \"No ticket on process\");\r\n        }        \r\n    }\r\n\r\n    const callMissedHandle=()=>{        \r\n            makeToast('error', \"Not implemented yet\");      \r\n    }    \r\n\r\n    const nextCallHandle=() => {\r\n        const theCurrent = (currentticket && currentticket._id) ? currentticket._id : null;\r\n        serviceFactory.nextCall(desk._id, desk.services, theCurrent)\r\n        .then(\r\n            response => {                    \r\n                //console.log(response);\r\n                if(response.data.message && response.data.message === 'no ticket available'){\r\n                    console.log(response.data.message);\r\n                    makeToast('info', response.data.message);\r\n                    setcurrentTicket(null)\r\n                }else{\r\n                    setcurrentTicket(response.data);\r\n                    getTicketCount();\r\n                    socket.emit(\"TicketCalled\",response.data._id)\r\n\r\n                }                \r\n                \r\n            },\r\n            error => {\r\n                console.log(error);\r\n                //console.log(\"alert alert\");\r\n            }\r\n        );\r\n\r\n    }\r\n    useEffect(() => {        \r\n        getTicketCount();\r\n        getCurrentTicket();\r\n        //console.log(\"prepare socket\");\r\n        let eventcount = 0;\r\n        if(socket){\r\n            //console.log(\"there is socket\");\r\n            socket.emit(\"joinRoom\", \"ticketing\");             \r\n            socket.on(\"TicketCountUpdate\", (test) => {\r\n                eventcount++;\r\n                console.log(test, eventcount);\r\n                getTicketCount();\r\n                })\r\n            socket.on(\"clientToServer\", (message)=>{\r\n                console.log(\"message dr lain : \"+ message);\r\n            })\r\n        }\r\n        \r\n      return () => {\r\n        //console.log(\"prepare leave room\");\r\n            if (socket) {\r\n                //console.log(\"there is socket for leaveroom\");\r\n                socket.emit(\"leaveRoom\", \"ticketing\");\r\n            }\r\n      };\r\n    }, []) \r\n  return (\r\n    <>          \r\n        <section className=\"content\">\r\n            <div className=\"row\">\r\n            <div className=\"col-5\">\r\n                <div className=\"card card-primary\">\r\n                <div className=\"card-header\">\r\n                    <h3 className=\"card-title\">Current Number</h3>\r\n                </div>\r\n                <div className=\"card-body text-center\"><h1 className=\"display-1\"><b>\r\n                    {currentticket && currentticket.ticket_number ? currentticket.ticket_number : '--'}\r\n                </b></h1></div>\r\n                <div className=\"card-footer\">\r\n                    Status : {currentticket && currentticket.ticket_number ? 'processing': '--'}\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-7\">\r\n                <div className=\"card\">                \r\n                <div className=\"card-body\">\r\n                    <div className=\"row d-flex\">\r\n                    <div className=\"col-md-4 mb-2\">\r\n                        <button onClick={nextCallHandle} className=\"btn btn-primary btn-block btn-lg btn-labeled\" >\r\n                        <span className=\"btn-label\"><i className=\"fas fa-arrow-alt-circle-right\" /></span>\r\n                        Next\r\n                        </button>\r\n                    </div>   \r\n                    <div className=\"col-md-4 mb-2\">\r\n                        <button onClick={reCallHandle} className=\"btn btn-primary btn-block btn-lg btn-labeled\">\r\n                        <span className=\"btn-label\"><i className=\"fas fa-volume-up\" /></span>\r\n                        Recall\r\n                        </button>\r\n                    </div> \r\n                    <div className=\"col-md-4 mb-2\">\r\n                        <button onClick={doneHandle} className=\"btn btn-success btn-block btn-lg btn-labeled\">\r\n                        <span className=\"btn-label\"><i className=\"far fa-check-circle\" /></span>\r\n                        Done\r\n                        </button>\r\n                    </div>                \r\n                    <div className=\"col-md-4 mb-2\">\r\n                        <button onClick={missedHandle} className=\"btn btn-warning btn-block btn-lg btn-labeled\">\r\n                        <span className=\"btn-label\"><i className=\"far fa-clock\" /></span>\r\n                        Missed\r\n                        </button>\r\n                    </div>\r\n                    \r\n                    <div className=\"col-md-4 mb-2\">\r\n                        <button onClick={callMissedHandle} className=\"btn btn-primary btn-block btn-lg btn-labeled\">\r\n                        <span className=\"btn-label\"><i className=\"fas fa-sync-alt\" /></span>\r\n                        Call Miss\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col-md-4 mb-2\">\r\n                        <button onClick={transferHandle} className=\"btn btn-info btn-block btn-lg btn-labeled\">\r\n                        <span className=\"btn-label\"><i className=\"fas fa-share-square\" /></span>\r\n                        Transfer\r\n                        </button>\r\n                    </div>\r\n                    \r\n                    <div className=\"col-md-4 mb-2\">\r\n                        <button onClick={()=>closeDesk()} className=\"btn btn-danger btn-block btn-lg  btn-labeled\">\r\n                        <span className=\"btn-label\"><i className=\"fas fa-user-lock\" /></span>\r\n                        Close\r\n                        </button>\r\n                    </div>\r\n                    </div>\r\n                </div>                \r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"card card-info\">\r\n                    <div className=\"card-header\">\r\n                        <h3 className=\"card-title\">Queue info</h3>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <h3 className=\"text-primary\">Queue Left: <b>{ticketCount}</b></h3>\r\n                        <h3 className=\"text-danger\">Missed Queue: <b>{missedCount}</b></h3>\r\n                    </div>\r\n                    <div className=\"card-footer\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </section>\r\n    \r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function ContentHeader(props) {\r\n  return (\r\n    <section className=\"content-header\">        \r\n        <div className=\"\">\r\n            <h1>{props.title}</h1>\r\n            {props.subtitle &&\r\n            <p>{props.subtitle}</p>\r\n            }\r\n        </div>\r\n        {props.btnLink &&\r\n        <Link to={props.btnLink} type=\"button\" className=\"btn btn-primary float-right\">{props.btnText}</Link>\r\n        }\r\n        \r\n    </section>\r\n  );\r\n}\r\n","import { useState, useEffect, useRef } from 'react';\r\n\r\nconst ValidateForm = (callback, validate, initialValues, onFly = true) => {\r\n\r\n  const [values, setValues] = useState(initialValues || {});\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [hasSubmit, sethasSubmit] = useState(false);\r\n  const [firstRender, setfirstRender] = useState(true);\r\n\r\n  const formRendered = useRef(true)\r\n\r\n  useEffect(() => {\r\n    if (!formRendered.current) {\r\n      setValues(initialValues);\r\n      setErrors({});\r\n      setfirstRender(true);\r\n      setIsSubmitting(false);\r\n      sethasSubmit(false);\r\n    }\r\n    formRendered.current = false;\r\n  }, [initialValues]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      callback({ values, errors });\r\n    }\r\n  }, [errors]); \r\n\r\n  useEffect(() => {\r\n    if(onFly){\r\n      setIsSubmitting(false);\r\n      if(!firstRender && hasSubmit){      \r\n        setErrors(validate(values));\r\n        //console.log(\"change value\");\r\n      }\r\n      else{\r\n        setfirstRender(false);\r\n      }    \r\n    }\r\n  }, [values])\r\n  \r\n  const handleSubmit = (event) => {\r\n    if (event) event.preventDefault();\r\n    setErrors(validate(values));\r\n    setIsSubmitting(true);\r\n    sethasSubmit(true);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n    //console.log(event.target.value);\r\n    if(event.target.multiple){\r\n      let value = Array.from(event.target.selectedOptions, option => option.value);\r\n      setValues(values => ({ ...values, [event.target.name]: value }));\r\n    }else if(event.target.type === 'checkbox'){\r\n      setValues(values => ({ ...values, [event.target.name]: event.target.checked }));\r\n    }\r\n    else {\r\n      setValues(values => ({ ...values, [event.target.name]: event.target.value }));\r\n    }\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values,\r\n    errors,\r\n  }\r\n};\r\n\r\nexport default ValidateForm;","import React from 'react';\r\nimport ValidateForm from \"../helper/validateForm\";\r\n\r\nexport default function SelectDeskForm(props) {\r\n    const {values, errors, handleChange, handleSubmit} = ValidateForm(props.callback, props.validate,);    \r\n  return (\r\n    <>\r\n        <section className=\"content\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-5 mx-auto\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            <h3 className=\"card-title\">Choose Desk</h3>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={handleSubmit}>\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label>Select Roles</label>\r\n                                    <select \r\n                                        className={`custom-select ${errors.desk && 'is-invalid' }`}                                   \r\n                                        name=\"desk\" \r\n                                        onChange={handleChange} \r\n                                        value={values.desk || ''}                                                              \r\n                                    >\r\n                                        <option>Choose Desk</option>\r\n                                        {props.selectDesk.map((desk, index) =>{\r\n                                            //console.log(role)\r\n                                            return <option key={index} value={desk._id}>{desk.counter_code}</option>\r\n                                            \r\n                                        })}\r\n                                        </select>\r\n                                        {errors.desk &&\r\n                                            <span className=\"error invalid-feedback\">{errors.desk ? errors.desk : \"not valid\"}</span>                \r\n                                        }\r\n                                </div>\r\n                                <div className=\"row mb-10\">\r\n                                <div className=\"col-md-12 text-right\">                                    \r\n                                    <button type=\"submit\" className=\"btn btn-primary\"><i className=\"fa fa-fw fa-lg fa-check-circle\"></i> Submit</button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    \r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport DeskComponent from '../../components/desk.component';\r\nimport ContentHeader from '../partials/content-header.partials';\r\nimport serviceFactory from '../../service/counters.service'\r\nimport makeToast from \"../../helper/Toaster\";\r\nimport SelectDeskForm from '../../components/selectDesk.form';\r\n\r\nconst ValidateService = (values) => {\r\n    let errors = {}    \r\n    if(!values.desk){\r\n        errors.desk = \"Please choose desk code\"\r\n    } \r\n    return errors;\r\n  }\r\nexport default function DeskPage({socket}) {\r\n    let subtitle = \"please Choose Desk\"\r\n    const [desk, setDesk] = useState();\r\n    const [selectDesk, setSelectDesk] = useState([]);\r\n    const [ticketCount, setticketCount] = useState(0);\r\n\r\n    const getDesks = () => {\r\n        serviceFactory.availableDesk()\r\n            .then(\r\n                response => {                    \r\n                    setSelectDesk(response.data);\r\n                },\r\n                error => {\r\n                    //console.log(\"alert alert\");\r\n                }\r\n            );\r\n\r\n    }\r\n\r\n    const handleSubmitDesk = ({values}) => {\r\n        console.log(\"submit\");\r\n        serviceFactory.selectDesk(values.desk)\r\n            .then(\r\n                response => {                    \r\n                    console.log(response);\r\n                    setDesk(response.data.counter);\r\n                },\r\n                error => {\r\n                    //console.log(\"alert alert\");\r\n                }\r\n            );\r\n\r\n    }\r\n\r\n    const checkChosenDesk = () => {        \r\n        serviceFactory.checkChosenDesk()\r\n            .then(\r\n                response => {\r\n                    //console.log(\"check chosen\");\r\n                    //console.log(response);\r\n                    setDesk(response.data.counter)\r\n                },\r\n                error => {\r\n                    console.log(error);\r\n                }\r\n            )\r\n    }\r\n\r\n    const closeDesk = () => {\r\n        console.log(\"desk close\");\r\n        serviceFactory.closeDesk()\r\n        .then(\r\n            response => {\r\n                //console.log(\"check chosen\");\r\n                //console.log(response);\r\n                setDesk(response.data.counter)\r\n            },\r\n            error => {\r\n                console.log(error);\r\n            }\r\n        )\r\n    }\r\n     \r\n    \r\n    useEffect(() => {\r\n        checkChosenDesk()\r\n        \r\n        return () => {\r\n            \r\n        };\r\n    }, [])  \r\n    useEffect(() => {\r\n        if(!desk){\r\n            getDesks()\r\n        }else{\r\n        }  \r\n        return () => {\r\n            \r\n          };    \r\n    }, [desk]) \r\n    \r\n  return (\r\n    <>          \r\n        <ContentHeader\r\n            title=\"Desk\"\r\n            subtitle={desk ? \"Counter \" + desk.counter_code : subtitle}            \r\n        />\r\n        {!desk ? \r\n        <SelectDeskForm callback={handleSubmitDesk} validate={ValidateService} selectDesk={selectDesk}/>\r\n        :\r\n        <DeskComponent closeDesk={closeDesk} socket={socket} desk={desk}/>\r\n        }\r\n        \r\n    </>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport authHeader from \"../service/auth-header\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL+\"users/\";\r\n\r\nclass UsersService {\r\n    async getAll(){\r\n        return axios.get(API_URL , { headers: await authHeader() });        \r\n    }\r\n\r\n    async create(username, email, name, address, roles, password){        \r\n        return axios.post(API_URL + 'create', {\r\n            username, \r\n            email, \r\n            name, \r\n            address, \r\n            roles, \r\n            password\r\n        }, { headers: await authHeader() });\r\n\r\n    }\r\n\r\n    async findOne(id){\r\n        return axios.get(API_URL + 'edit/'+id, { headers: await authHeader() });\r\n    }\r\n\r\n    async edit(id, email, name, address, roles,){        \r\n        return axios.post(API_URL + 'edit/'+id, {             \r\n            email, \r\n            name, \r\n            address, \r\n            roles\r\n        }, { headers: await authHeader() });\r\n\r\n    }\r\n    async getProfile(id){        \r\n        return axios.post(API_URL + 'profile/',{id}, { headers: await authHeader() });\r\n\r\n    }\r\n    async profileUpdate(id, email, name, address){        \r\n        return axios.post(API_URL + 'profile-update/', { \r\n            id,            \r\n            email, \r\n            name, \r\n            address,             \r\n        }, { headers: await authHeader() });\r\n\r\n    }\r\n    async passwordUpdate(id, password){        \r\n        return axios.post(API_URL + 'password-update/', { \r\n            id,            \r\n            password            \r\n        }, { headers: await authHeader() });\r\n\r\n    }\r\n\r\n    async delete(id){\r\n        return axios.delete(API_URL + 'delete/'+ id, { headers: await authHeader() });\r\n    }\r\n\r\n}\r\nexport default new UsersService();","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport makeToast from '../../helper/Toaster';\r\nimport serviceFactory from '../../service/users.service';\r\nimport ContentHeader from '../partials/content-header.partials';\r\n\r\nexport default function UserList() {\r\n    const confirmation = Swal.mixin({\r\n        title: 'Are you sure?',\r\n        text: \"You won't be able to revert this!\",\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Yes, delete it!'\r\n      });\r\n    const [items, setItems] = useState([]);\r\n    const getAll = () => {\r\n        serviceFactory.getAll()\r\n            .then(\r\n                response => {\r\n                    //console.log(response.data);\r\n                    setItems(response.data);\r\n                },\r\n                error => {\r\n                    //console.log(\"alert alert\");\r\n                }\r\n            );\r\n    }\r\n\r\n    const deleteItem = (id) => {\r\n        confirmation.fire()\r\n            .then((result) => {\r\n                if (result.isConfirmed) {\r\n                    serviceFactory.delete(id)\r\n                    .then((response) => {\r\n                        getAll();\r\n                        makeToast(\"success\", response.data.message);                          \r\n                    }).catch((err) => {\r\n                        makeToast(\"error\", err.response.data.message);                \r\n                    });\r\n                }\r\n\r\n            })\r\n        \r\n        \r\n    }\r\n    useEffect(() => {\r\n        getAll();\r\n      return () => {\r\n        \r\n      };\r\n    }, [])\r\n  return (\r\n    <div>\r\n        <ContentHeader\r\n            title=\"Users\"\r\n            subtitle=\"List of all users\"\r\n            btnLink='/dashboard/users/create'\r\n            btnText='Add User'\r\n        />        \r\n        <section className=\"content\">\r\n            <div className=\"row\">\r\n            <div className=\"col-12\">\r\n                <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    \r\n                    <table id=\"table-user\" className=\"table table-bordered table-hover\">\r\n                    <thead className=\"text-center\">\r\n                        <tr className=\"\">\r\n                        <th style={{width: '10%'}}>#</th>\r\n                        <th className=\"\">Username</th>\r\n                        <th className=\"\">Name</th>\r\n                        <th className=\"\">Email</th>\r\n                        <th className=\"\">Address</th>\r\n                        <th className=\"\">Role</th>\r\n                        <th className=\"text-danger \"><i className=\"fa fa-bolt\" /> </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {items.map((item, index) =>(\r\n                            <tr className=\"\" key={index}>\r\n                                <td className=\"text-center\">{index+1}</td>\r\n                                <td className=\"\">{item.username}</td>\r\n                                <td className=\"text-center\">{item.name}</td>\r\n                                <td className=\"text-center\">{item.email}</td>\r\n                                <td className=\"text-center\">{item.address}</td>                                \r\n                                <td className=\"text-center\">{                                    \r\n                                    item.roles.map((role, index)=>{\r\n                                        if(index===0){\r\n                                            return role.name\r\n                                        }else{\r\n                                            return \", \" + role.name\r\n                                        }\r\n                                    })                                \r\n                                }\r\n                                </td>\r\n                                <td className=\"text-center \">                            \r\n                                    <div className=\"btn-group\" role=\"group\" aria-label=\"Second group\">\r\n                                    <Link to={`/dashboard/users/${item._id}/edit`} type=\"button\" className=\"btn btn-sm btn-primary\"><i className=\"fa fa-edit\" /></Link>                                \r\n                                    <button onClick={()=>deleteItem(item._id)} type=\"button\" className=\"btn btn-sm btn-danger\"><i className=\"fa fa-trash\" /></button>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        ))}                        \r\n                    </tbody>\r\n                    </table>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </section>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport authHeader from \"../service/auth-header\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL+\"services/\";\r\n\r\nclass ServicesService {\r\n    async getServices(){\r\n        return axios.get(API_URL , { headers: await authHeader() });        \r\n    }\r\n\r\n    async create(name, status){        \r\n        return axios.post(API_URL + 'create', {\r\n            name,\r\n            status\r\n        }, { headers: await authHeader() });\r\n\r\n    }\r\n\r\n    async findOne(id){\r\n        return axios.get(API_URL + 'edit/'+id, { headers: await authHeader() });\r\n    }\r\n\r\n    async edit(name, status, id){        \r\n        return axios.post(API_URL + 'edit/'+id, {\r\n            name,\r\n            status\r\n        }, { headers: authHeader() });\r\n\r\n    }\r\n\r\n    async delete(id){\r\n        return axios.delete(API_URL + 'delete/'+ id, { headers: await authHeader() });\r\n    }\r\n\r\n}\r\nexport default new ServicesService();","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport makeToast from '../../helper/Toaster';\r\nimport servicesService from '../../service/services.service';\r\nimport ContentHeader from '../partials/content-header.partials';\r\n\r\nexport default function ServiceList() {\r\n    const confirmation = Swal.mixin({\r\n        title: 'Are you sure?',\r\n        text: \"You won't be able to revert this!\",\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Yes, delete it!'\r\n      });\r\n    const [services, setServices] = useState([]);\r\n    const getServices = () => {\r\n        servicesService.getServices()\r\n            .then(\r\n                response => {\r\n                    //console.log(response.data);\r\n                    setServices(response.data);\r\n                },\r\n                error => {\r\n                    //console.log(\"alert alert\");\r\n                }\r\n            );\r\n    }\r\n\r\n    const deleteService = (id) => {\r\n        confirmation.fire()\r\n            .then((result) => {\r\n                if (result.isConfirmed) {\r\n                    servicesService.delete(id)\r\n                    .then((response) => {\r\n                        getServices();\r\n                        makeToast(\"success\", response.data.message);                          \r\n                    }).catch((err) => {\r\n                        makeToast(\"error\", err.response.data.message);                \r\n                    });\r\n                }\r\n\r\n            })\r\n        \r\n        \r\n    }\r\n    useEffect(() => {\r\n        getServices();\r\n      return () => {\r\n        \r\n      };\r\n    }, [])\r\n  return (\r\n    <div>\r\n        <ContentHeader\r\n            title=\"Services\"\r\n            subtitle=\"List of all services\"\r\n            btnLink='/dashboard/services/create'\r\n            btnText='Add Service'\r\n        />        \r\n        <section className=\"content\">\r\n            <div className=\"row\">\r\n            <div className=\"col-12\">\r\n                <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    \r\n                    <table id=\"table-user\" className=\"table table-bordered table-hover\">\r\n                    <thead className=\"text-center\">\r\n                        <tr className=\"\">\r\n                        <th style={{width: '10%'}}>#</th>\r\n                        <th className=\"\">Service Name</th>\r\n                        <th className=\"\">Status</th>\r\n                        <th className=\"text-danger \"><i className=\"fa fa-bolt\" /> </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {services.map((service, index) =>(\r\n                            <tr className=\"\" key={index}>\r\n                            <td className=\"text-center\">{index+1}</td>\r\n                            <td className=\"\">{service.name}</td>\r\n                            <th className=\"text-center\">{service.status ? \"Open\" : \"Closed\"}</th>\r\n                            <td className=\"text-center \">\r\n                            \r\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Second group\">\r\n                                <Link to={`/dashboard/services/${service._id}/edit`} type=\"button\" className=\"btn btn-sm btn-primary\"><i className=\"fa fa-edit\" /></Link>                                \r\n                                <button onClick={()=>deleteService(service._id)} type=\"button\" className=\"btn btn-sm btn-danger\"><i className=\"fa fa-trash\" /></button>\r\n                                </div>\r\n                            </td>\r\n                            </tr>\r\n                        ))}                        \r\n                    </tbody>\r\n                    </table>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </section>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ValidateForm from '../helper/validateForm';\r\n\r\nexport default function ServiceForm(props) {\r\n    const {values, errors, handleChange, handleSubmit} = ValidateForm(props.callback, props.validate, props.initialValues);    \r\n    const BackButton = withRouter((props) => (\r\n        <button onClick={() => {props.history.push('/dashboard/services')}} className=\"btn btn-danger mx-3\" type=\"button\"><i className=\"fa fa-fw fa-lg fa-times-circle\"></i> Cancel</button>        \r\n    ));\r\n  return (\r\n    <>    \r\n    <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n            <label>Name</label>\r\n            <input \r\n                type=\"text\" \r\n                className={`form-control ${errors.name && 'is-invalid' }`}\r\n                placeholder=\"Name\" \r\n                name=\"name\"\r\n                value={values.name || ''}\r\n                onChange={handleChange}\r\n            />\r\n            {errors.name &&\r\n                <span className=\"error invalid-feedback\">{errors.name ? errors.name : \"not valid\"}</span>                \r\n            }\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label>Status</label>  \r\n            <div className=\"custom-control custom-switch custom-switch-off-danger custom-switch-on-success\">                                    \r\n                <input \r\n                    type=\"checkbox\" \r\n                    className=\"custom-control-input\" \r\n                    id=\"statusService\"\r\n                    name=\"status\"\r\n                    checked={values.status || false}\r\n                    onChange={handleChange}                                                                                 \r\n                />\r\n                <label className=\"custom-control-label\" htmlFor=\"statusService\">{values.status ? \"Open\" : \"Closed\"}</label>\r\n            </div>\r\n        </div>\r\n        <div className=\"row mb-10\">\r\n            <div className=\"col-md-12 text-right\">\r\n            <BackButton />\r\n            <button type=\"submit\" className=\"btn btn-primary\"><i className=\"fa fa-fw fa-lg fa-check-circle\"></i> Save</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ContentHeader from '../partials/content-header.partials'\r\nimport servicesService from '../../service/services.service'\r\nimport makeToast from \"../../helper/Toaster\";\r\nimport ServiceForm from '../../components/service.form';\r\n\r\nconst ValidateService = (values) => {\r\n    let errors = {}    \r\n    if(!values.name){\r\n        errors.name = \"Name is required\"\r\n    } \r\n    return errors;\r\n  }\r\n\r\nexport default function ServiceEdit(props) {  \r\n    const [defValues, setdefValues] = useState({});    \r\n    const handleCreate = ({values}) => {        \r\n        servicesService.create(values.name, values.status)\r\n            .then(response => {                 \r\n                makeToast(\"success\", response.data.message);    \r\n                props.history.push('/dashboard/services');\r\n            }).catch((err) => {                \r\n                makeToast(\"error\", err.response.data.message);\r\n            })\r\n    }  \r\n    const handleUpdate = ({values}) => {        \r\n        servicesService.edit(values.name, values.status, props.match.params.id)\r\n            .then(response => {                 \r\n                makeToast(\"success\", response.data.message);    \r\n                props.history.push('/dashboard/services');\r\n            }).catch((err) => {                \r\n                makeToast(\"error\", err.response.data.message);\r\n            })\r\n    }    \r\n    let subtitle = \"Create new Service\";\r\n    let handleSubmit = props.match.params.id ? handleUpdate : handleCreate;\r\n    if(props.match.params.id){\r\n        subtitle = \"Edit Service\"      \r\n    } \r\n    \r\n    useEffect( () => {\r\n        if(props.match.params.id){\r\n            servicesService.findOne(props.match.params.id)\r\n            .then(response => {                     \r\n                setdefValues(response.data);                \r\n            }).catch((err) => {\r\n                if(err.response.status === 404){                    \r\n                    props.history.push('/dashboard/oops');\r\n                }\r\n                console.log(err);            \r\n            })\r\n        }\r\n        \r\n    }, [])\r\n    let valTest = defValues.name;\r\n    useEffect(() => {\r\n      valTest = defValues.name\r\n    }, [defValues])\r\n\r\n  return (\r\n    <>\r\n        <ContentHeader\r\n            title=\"Services\"\r\n            subtitle={subtitle}            \r\n        />  \r\n        <section className=\"content\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 mx-auto\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            <h3 className=\"card-title\">{subtitle} {defValues.name}</h3>\r\n                        </div>\r\n                        <div className=\"card-body\">                            \r\n                            <ServiceForm callback={handleSubmit} validate={ValidateService} initialValues={defValues} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n        </section>\r\n    </>\r\n  );\r\n}\r\n\r\nServiceEdit.propTypes = {\r\n    match: PropTypes.object.isRequired\r\n\r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport makeToast from '../../helper/Toaster';\r\nimport serviceFactory from '../../service/counters.service';\r\nimport ContentHeader from '../partials/content-header.partials';\r\n\r\nexport default function CounterList() {\r\n    const confirmation = Swal.mixin({\r\n        title: 'Are you sure?',\r\n        text: \"You won't be able to revert this!\",\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Yes, delete it!'\r\n      });\r\n    const [items, setItems] = useState([]);\r\n    const getAll = () => {\r\n        serviceFactory.getAll()\r\n            .then(\r\n                response => {\r\n                    console.log(response.data);\r\n                    setItems(response.data);\r\n                },\r\n                error => {\r\n                    //console.log(\"alert alert\");\r\n                }\r\n            );\r\n    }\r\n\r\n    const deleteItem = (id) => {\r\n        confirmation.fire()\r\n            .then((result) => {\r\n                if (result.isConfirmed) {\r\n                    serviceFactory.delete(id)\r\n                    .then((response) => {\r\n                        getAll();\r\n                        makeToast(\"success\", response.data.message);                          \r\n                    }).catch((err) => {\r\n                        makeToast(\"error\", err.response.data.message);                \r\n                    });\r\n                }\r\n\r\n            })\r\n        \r\n        \r\n    }\r\n    useEffect(() => {\r\n        getAll();\r\n      return () => {\r\n        \r\n      };\r\n    }, [])\r\n  return (\r\n    <div>\r\n        <ContentHeader\r\n            title=\"Counters\"\r\n            subtitle=\"List of all counters\"\r\n            btnLink='/dashboard/counters/create'\r\n            btnText='Add Counter'\r\n        />        \r\n        <section className=\"content\">\r\n            <div className=\"row\">\r\n            <div className=\"col-12\">\r\n                <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    \r\n                    <table id=\"table-user\" className=\"table table-bordered table-hover\">\r\n                    <thead className=\"text-center\">\r\n                        <tr className=\"\">\r\n                        <th style={{width: '10%'}}>#</th>\r\n                        <th className=\"\">Counter Name</th>\r\n                        <th className=\"\">Code</th>\r\n                        <th className=\"\">Status</th>\r\n                        <th className=\"\">Service</th>\r\n                        <th className=\"\">User</th>\r\n                        <th className=\"text-danger \"><i className=\"fa fa-bolt\" /> </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {items.map((item, index) =>(\r\n                            <tr className=\"\" key={index}>\r\n                            <td className=\"text-center\">{index+1}</td>\r\n                            <td className=\"\">{item.name}</td>\r\n                            <td className=\"text-center\">{item.counter_code}</td>\r\n                            <td className=\"text-center\">{item.status ? \"Open\" : \"Closed\"}</td>\r\n                            <td className=\"\">\r\n                            {\r\n                                item.services.map((service, index)=>{\r\n                                    if(index===0){\r\n                                        return service.name\r\n                                    }else{\r\n                                        return \", \" + service.name\r\n                                    }\r\n                                })   \r\n                            }\r\n                            </td>\r\n                            <td className=\"text-center\">{item.user && item.user.username ? item.user.username : ''}</td>\r\n                            <td className=\"text-center \">                            \r\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Second group\">\r\n                                <Link to={`/dashboard/counters/${item._id}/edit`} type=\"button\" className=\"btn btn-sm btn-primary\"><i className=\"fa fa-edit\" /></Link>                                \r\n                                <button onClick={()=>deleteItem(item._id)} type=\"button\" className=\"btn btn-sm btn-danger\"><i className=\"fa fa-trash\" /></button>\r\n                                </div>\r\n                            </td>\r\n                            </tr>\r\n                        ))}                        \r\n                    </tbody>\r\n                    </table>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </section>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport authHeader from \"../service/auth-header\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL+\"kiosk/\";\r\n\r\nclass kioskService {\r\n\r\n    getServices(){\r\n        return axios.get(API_URL + 'get-service', { headers: authHeader()})\r\n    }\r\n\r\n    makeTicket(serviceId){\r\n        return axios.post(API_URL + 'make-ticket', {serviceId}, {headers: authHeader()})\r\n    }\r\n\r\n}\r\nexport default new kioskService();","import React, { useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ValidateForm from '../helper/validateForm';\r\nimport kioskService from '../service/kiosk.service';\r\n\r\nexport default function CounterForm(props) {    \r\n    const {values, errors, handleChange, handleSubmit} = ValidateForm(props.callback, props.validate, props.initialValues);    \r\n    const [defServices, setdefServices] = useState([\"wowowo\"])\r\n    \r\n    const BackButton = withRouter((props) => (\r\n        <button onClick={() => {props.history.push('/dashboard/counters')}} className=\"btn btn-danger mx-3\" type=\"button\"><i className=\"fa fa-fw fa-lg fa-times-circle\"></i> Cancel</button>        \r\n    ));\r\n\r\n    const getServices = () => {\r\n        kioskService.getServices()\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setdefServices(response.data);\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n    useEffect(() => {\r\n        getServices()\r\n      \r\n    }, [])\r\n  return (\r\n    <>   \r\n    <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n            <label>Name</label>\r\n            <input \r\n                type=\"text\" \r\n                className={`form-control ${errors.name && 'is-invalid' }`}\r\n                placeholder=\"Name\" \r\n                name=\"name\"\r\n                value={values.name || ''}\r\n                onChange={handleChange}\r\n            />\r\n            {errors.name &&\r\n                <span className=\"error invalid-feedback\">{errors.name ? errors.name : \"not valid\"}</span>                \r\n            }\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label>Code a</label>\r\n            <input \r\n                type=\"number\" \r\n                min=\"1\"             \r\n                step=\"1\"   \r\n                className={`form-control ${errors.counter_code && 'is-invalid' }`}\r\n                placeholder=\"counter code\" \r\n                name=\"counter_code\"\r\n                value={values.counter_code || ''}\r\n                onChange={handleChange}                \r\n            />\r\n            {errors.counter_code &&\r\n                <span className=\"error invalid-feedback\">{errors.counter_code ? errors.counter_code : \"not valid\"}</span>                \r\n            }\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label>Status</label>  \r\n            <div className=\"custom-control custom-switch custom-switch-off-danger custom-switch-on-success\">                                    \r\n                <input \r\n                    type=\"checkbox\" \r\n                    className=\"custom-control-input\" \r\n                    id=\"statusService\"\r\n                    name=\"status\"\r\n                    checked={values.status || false}\r\n                    onChange={handleChange}                                                                                 \r\n                />\r\n                <label className=\"custom-control-label\" htmlFor=\"statusService\">{values.status ? \"Open\" : \"Closed\"}</label>\r\n            </div>\r\n        </div>\r\n        <div className=\"form-group mb-3\">\r\n            <label>Select Services</label>\r\n            <select \r\n                className='custom-select'\r\n                multiple={true} \r\n                name=\"services\" \r\n                onChange={handleChange} \r\n                value={values.services || []}  \r\n                size=\"3\"                                         \r\n            >\r\n                {defServices.map((service, index) =>{\r\n                    //console.log(role)\r\n                    return <option key={index} value={service._id}>{service.name}</option>\r\n                    \r\n                })}\r\n                </select>\r\n        </div>\r\n        <div className=\"row mb-10\">\r\n            <div className=\"col-md-12 text-right\">\r\n            <BackButton />\r\n            <button type=\"submit\" className=\"btn btn-primary\"><i className=\"fa fa-fw fa-lg fa-check-circle\"></i> Save</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ContentHeader from '../partials/content-header.partials'\r\nimport serviceFactory from '../../service/counters.service'\r\nimport makeToast from \"../../helper/Toaster\";\r\nimport EditForm from '../../components/counter.form';\r\n\r\nconst ValidateService = (values) => {\r\n    let errors = {}    \r\n    if(!values.name){\r\n        errors.name = \"Name is required\"\r\n    } \r\n    if(!values.counter_code){\r\n        errors.counter_code =\"Code is required\"\r\n    }\r\n    if(values.counter_code<=0){\r\n        errors.counter_code =\"Code is invalid\"\r\n    }\r\n    if(!Number.isInteger(parseFloat(values.counter_code))){\r\n        errors.counter_code =\"Code must be whole number\"\r\n    }\r\n    return errors;\r\n  }\r\n\r\nexport default function CounterEdit(props) {  \r\n    const [defValues, setdefValues] = useState({});    \r\n    const handleCreate = ({values}) => {     \r\n        console.log(\"create\");   \r\n        console.log(values.counter_code);\r\n        serviceFactory.create(values.name, values.counter_code, values.status, values.services)\r\n            .then(response => {                 \r\n                makeToast(\"success\", response.data.message);    \r\n                props.history.push('/dashboard/counters');\r\n            }).catch((err) => {                \r\n                makeToast(\"error\", err.response.data.message);\r\n            })\r\n        \r\n    }  \r\n    const handleUpdate = ({values}) => {  \r\n        console.log(\"edit\"); \r\n        console.log(values.counter_code); \r\n        var test = Number.isInteger(values.counter_code)\r\n        console.log(test);    \r\n        serviceFactory.edit(values.name, values.counter_code, values.status, props.match.params.id, values.services,)\r\n            .then(response => {                 \r\n                makeToast(\"success\", response.data.message);    \r\n                props.history.push('/dashboard/counters');\r\n            }).catch((err) => {                \r\n                makeToast(\"error\", err.response.data.message);\r\n            })\r\n        \r\n    }    \r\n    let subtitle = \"Create new Counter\";\r\n    let handleSubmit = props.match.params.id ? handleUpdate : handleCreate;\r\n    if(props.match.params.id){\r\n        subtitle = \"Edit Counter\"      \r\n    } \r\n    \r\n    useEffect( () => {\r\n        if(props.match.params.id){\r\n            serviceFactory.findOne(props.match.params.id)\r\n            .then(response => {                     \r\n                setdefValues(response.data);                \r\n            }).catch((err) => {\r\n                if(err.response.status === 404){                    \r\n                    props.history.push('/dashboard/oops');\r\n                }\r\n                console.log(err);            \r\n            })\r\n        }\r\n        \r\n    }, [])\r\n    let valTest = defValues.name;\r\n    useEffect(() => {\r\n      valTest = defValues.name\r\n    }, [defValues])\r\n\r\n  return (\r\n    <>\r\n        <ContentHeader\r\n            title=\"Counters\"\r\n            subtitle={subtitle}            \r\n        />  \r\n        <section className=\"content\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 mx-auto\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            <h3 className=\"card-title\">{subtitle} {defValues.name}</h3>\r\n                        </div>\r\n                        <div className=\"card-body\">                            \r\n                            <EditForm callback={handleSubmit} validate={ValidateService} initialValues={defValues} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n        </section>\r\n    </>\r\n  );\r\n}\r\n\r\nCounterEdit.propTypes = {\r\n    match: PropTypes.object.isRequired\r\n\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ValidateForm from '../helper/validateForm';\r\n\r\nexport default function ProfileForm(props) {    \r\n    const {values, errors, handleChange, handleSubmit} = ValidateForm(props.callback, props.validate, props.initialValues);        \r\n    \r\n  return (\r\n    <>   \r\n    <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n            <label>Username</label>\r\n            <input \r\n                type=\"text\" \r\n                className={`form-control ${errors.username && 'is-invalid' }`}\r\n                placeholder=\"Name\" \r\n                name=\"username\"\r\n                value={values.username || 'asdasd'}\r\n                onChange={handleChange}\r\n                disabled={true}\r\n            />\r\n            {errors.name &&\r\n                <span className=\"error invalid-feedback\">{errors.name ? errors.name : \"not valid\"}</span>                \r\n            }\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label>Email</label>\r\n            <input \r\n                type=\"text\" \r\n                className={`form-control ${errors.name && 'is-invalid' }`}\r\n                placeholder=\"Email\" \r\n                name=\"email\"\r\n                value={values.email || ''}\r\n                onChange={handleChange}\r\n            />\r\n            {errors.name &&\r\n                <span className=\"error invalid-feedback\">{errors.email ? errors.email : \"not valid\"}</span>                \r\n            }\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label>Name</label>\r\n            <input \r\n                type=\"text\" \r\n                className={`form-control ${errors.name && 'is-invalid' }`}\r\n                placeholder=\"Name\" \r\n                name=\"name\"\r\n                value={values.name || ''}\r\n                onChange={handleChange}\r\n            />\r\n            {errors.name &&\r\n                <span className=\"error invalid-feedback\">{errors.name ? errors.name : \"not valid\"}</span>                \r\n            }\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label>Address</label>\r\n            <input \r\n                type=\"text\" \r\n                className={`form-control ${errors.address && 'is-invalid' }`}\r\n                placeholder=\"Name\" \r\n                name=\"address\"\r\n                value={values.address || ''}\r\n                onChange={handleChange}\r\n            />\r\n            {errors.name &&\r\n                <span className=\"error invalid-feedback\">{errors.address ? errors.address : \"not valid\"}</span>                \r\n            }\r\n        </div>        \r\n        <div className=\"row mb-10\">\r\n            <div className=\"col-md-12 text-right\">\r\n            \r\n            <button type=\"submit\" className=\"btn btn-primary\"><i className=\"fa fa-fw fa-lg fa-check-circle\"></i> Save</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ValidateForm from '../helper/validateForm';\r\n\r\nexport default function PasswordForm(props) {\r\n    const {values, errors, handleChange, handleSubmit} = ValidateForm(props.callback, props.validate,);    \r\n  return (\r\n    <>\r\n    <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n            <label>Password</label>\r\n            <input \r\n                type=\"password\" \r\n                className={`form-control ${errors.password && 'is-invalid' }`}\r\n                placeholder=\"Password\" \r\n                name=\"password\"\r\n                value={values.password || ''}\r\n                onChange={handleChange}\r\n            />\r\n            {errors.name &&\r\n                <span className=\"error invalid-feedback\">{errors.password ? errors.password : \"not valid\"}</span>                \r\n            }\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label>Confirm Password</label>\r\n            <input \r\n                type=\"password\" \r\n                className={`form-control ${errors.passwordConfirm && 'is-invalid' }`}\r\n                placeholder=\"Confirm Password\" \r\n                name=\"passwordConfirm\"\r\n                value={values.passwordConfirm || ''}\r\n                onChange={handleChange}\r\n            />\r\n            {errors.name &&\r\n                <span className=\"error invalid-feedback\">{errors.passwordConfirm ? errors.passwordConfirm : \"not valid\"}</span>                \r\n            }\r\n        </div>        \r\n        <div className=\"row mb-10\">\r\n            <div className=\"col-md-12 text-right\">            \r\n            <button type=\"submit\" className=\"btn btn-primary\"><i className=\"fa fa-fw fa-lg fa-check-circle\"></i> Save</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    \r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport ContentHeader from '../partials/content-header.partials';\r\nimport ProfileForm from \"../../components/profile.form\";\r\n\r\nimport makeToast from \"../../helper/Toaster\";\r\n\r\nimport serviceFactory from '../../service/users.service'\r\nimport PasswordForm from '../../components/pasword.form';\r\n\r\nconst validateProfile = (values) => {\r\n    let errors = {}\r\n    return errors;\r\n}\r\nconst ValidatePasswordService = (values,) => {\r\n    let errors = {}    \r\n    if(!values.password){\r\n        errors.password = \"Password is required\"\r\n    }\r\n    if(!values.passwordConfirm){\r\n        errors.passwordConfirm = \"Please Re-type password\"\r\n    } else if (values.passwordConfirm !== values.password) {\r\n        errors.passwordConfirm = \"Password not match\"\r\n    }\r\n    return errors;\r\n}\r\n\r\nexport default function ProfilePage(props) {\r\n    const [defValues, setdefValues] = useState({});     \r\n    const [currentUser, setcurrentUser] = useState(JSON.parse(localStorage.getItem(\"user\")))\r\n    const defroles = [{name: 'user'}, {name: 'moder'}, {name: 'admin'}];\r\n    const handleSubmit = ({values}) => {\r\n        console.log(\"submit\");\r\n        serviceFactory.profileUpdate(currentUser.id, values.email, values.name, values.address)\r\n            .then(response => {                 \r\n                makeToast(\"success\", response.data.message);                    \r\n            }).catch((err) => {                \r\n                makeToast(\"error\", err.response.data.message);\r\n            })\r\n    }\r\n    const handlePasswordChange = ({values}) => {\r\n        console.log(values);\r\n        serviceFactory.passwordUpdate(currentUser.id, values.password)\r\n            .then(response => {                 \r\n                makeToast(\"success\", response.data.message);                    \r\n            }).catch((err) => {                \r\n                makeToast(\"error\", err.response.data.message);\r\n            })\r\n    }\r\n    useEffect(() => {        \r\n        \r\n        serviceFactory.getProfile(currentUser.id)\r\n        .then(response => {                     \r\n            setdefValues(response.data);                \r\n        }).catch((err) => {\r\n            if(err.response.status === 404){                    \r\n                props.history.push('/dashboard/oops');\r\n            }\r\n            console.log(err);            \r\n        })\r\n        \r\n        \r\n      \r\n    }, [])\r\n  return (\r\n    <>\r\n        <ContentHeader \r\n            title=\"Profile\"            \r\n        />\r\n        <section className=\"content\">\r\n            <div className=\"row profile\">\r\n                <div className=\"col-md-3\">\r\n                    <div className=\"card p-0\">\r\n                        <div className=\"card-body\">\r\n                        <div className=\"nav flex-column nav-pills user-tabs\" role=\"tablist\" aria-orientation=\"vertical\">                        \r\n                            <a className=\"nav-link active\" data-toggle=\"pill\" href=\"#profile-card\" role=\"tab\" aria-controls=\"profile-card\" aria-selected=\"true\">Profile</a>\r\n                            <a className=\"nav-link\" data-toggle=\"pill\" href=\"#change-password-card\" role=\"tab\" aria-controls=\"#change-password-card\" aria-selected=\"false\">Change Password</a>        \r\n                        </div>                     \r\n                        </div>   \r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-9\">\r\n                <div className=\"tab-content\" id=\"vert-tabs-tabContent\">\r\n                    <div className=\"tab-pane fade show active\" id=\"profile-card\" role=\"tabpanel\" aria-labelledby=\"profile-card-tab\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <ProfileForm callback={handleSubmit} validate={validateProfile} initialValues={defValues} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tab-pane fade\" id=\"change-password-card\" role=\"tabpanel\" aria-labelledby=\"change-password-card-tab\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                <h3 className=\"card-title\">Change Password</h3>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <PasswordForm callback={handlePasswordChange} validate={ValidatePasswordService} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n\r\n    \r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ValidateForm from '../helper/validateForm';\r\nimport authService from '../service/auth.service';\r\n\r\nexport default function UserForm(props) {    \r\n    const {values, errors, handleChange, handleSubmit} = ValidateForm(props.callback, props.validate, props.initialValues);    \r\n    const [defRoles, setdefRoles] = useState([\"user\", \"moder\", \"admin\"]);\r\n    let roleValue = [];\r\n    const getRoles = () => {\r\n        authService.getRoles()\r\n            .then(\r\n                response => {\r\n                    //console.log(response.data);\r\n                    setdefRoles(response.data);\r\n                },\r\n                error => {\r\n                    //console.log(\"alert alert\");\r\n                }\r\n            );\r\n        \r\n    }  \r\n    useEffect(() => { \r\n        getRoles();\r\n    }, [])\r\n    const BackButton = withRouter((props) => (\r\n        <button onClick={() => {props.history.push('/dashboard/users')}} className=\"btn btn-danger mx-3\" type=\"button\"><i className=\"fa fa-fw fa-lg fa-times-circle\"></i> Cancel</button>        \r\n    ));\r\n  return (\r\n    <>   \r\n    <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n            <label>Username</label>\r\n            <input \r\n                type=\"text\" \r\n                className={`form-control ${errors.username && 'is-invalid' }`}\r\n                placeholder=\"Name\" \r\n                name=\"username\"\r\n                value={values.username || ''}\r\n                onChange={handleChange}\r\n                disabled={props.isEditing}\r\n                \r\n            />\r\n            {errors.name &&\r\n                <span className=\"error invalid-feedback\">{errors.name ? errors.name : \"not valid\"}</span>                \r\n            }\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label>Email</label>\r\n            <input \r\n                type=\"text\" \r\n                className={`form-control ${errors.name && 'is-invalid' }`}\r\n                placeholder=\"Email\" \r\n                name=\"email\"\r\n                value={values.email || ''}\r\n                onChange={handleChange}\r\n            />\r\n            {errors.name &&\r\n                <span className=\"error invalid-feedback\">{errors.email ? errors.email : \"not valid\"}</span>                \r\n            }\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label>Name</label>\r\n            <input \r\n                type=\"text\" \r\n                className={`form-control ${errors.name && 'is-invalid' }`}\r\n                placeholder=\"Name\" \r\n                name=\"name\"\r\n                value={values.name || ''}\r\n                onChange={handleChange}\r\n            />\r\n            {errors.name &&\r\n                <span className=\"error invalid-feedback\">{errors.name ? errors.name : \"not valid\"}</span>                \r\n            }\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label>Address</label>\r\n            <textarea\r\n                className={`form-control ${errors.address && 'is-invalid' }`}\r\n                placeholder=\"Address\" \r\n                name=\"address\"\r\n                onChange={handleChange}\r\n                value={values.address || ''}\r\n            ></textarea>            \r\n            {errors.name &&\r\n                <span className=\"error invalid-feedback\">{errors.address ? errors.address : \"not valid\"}</span>                \r\n            }\r\n        </div>\r\n        <div className=\"form-group mb-3\">\r\n            <label>Select Roles</label>\r\n            <select \r\n                className='custom-select'\r\n                multiple={true} \r\n                name=\"roles\" \r\n                onChange={handleChange} \r\n                value={values.roles || []}  \r\n                size=\"3\"                                         \r\n            >\r\n                {defRoles.map((role, index) =>{\r\n                    //console.log(role)\r\n                    return <option key={index} value={role.name}>{role.name}</option>\r\n                    \r\n                })}\r\n                </select>\r\n        </div>\r\n        {!props.isEditing &&\r\n        <>\r\n        <div className=\"form-group\">\r\n            <label>Password</label>\r\n            <input \r\n                type=\"password\" \r\n                className={`form-control ${errors.password && 'is-invalid' }`}\r\n                placeholder=\"Password\" \r\n                name=\"password\"\r\n                value={values.password || ''}\r\n                onChange={handleChange}\r\n            />\r\n            {errors.name &&\r\n                <span className=\"error invalid-feedback\">{errors.password ? errors.password : \"not valid\"}</span>                \r\n            }\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label>Confirm Password</label>\r\n            <input \r\n                type=\"password\" \r\n                className={`form-control ${errors.passwordConfirm && 'is-invalid' }`}\r\n                placeholder=\"Confirm Password\" \r\n                name=\"passwordConfirm\"\r\n                value={values.passwordConfirm || ''}\r\n                onChange={handleChange}\r\n            />\r\n            {errors.name &&\r\n                <span className=\"error invalid-feedback\">{errors.passwordConfirm ? errors.passwordConfirm : \"not valid\"}</span>                \r\n            }\r\n        </div>\r\n        </>\r\n        }\r\n        <div className=\"row mb-10\">\r\n            <div className=\"col-md-12 text-right\">\r\n            <BackButton />\r\n            <button type=\"submit\" className=\"btn btn-primary\"><i className=\"fa fa-fw fa-lg fa-check-circle\"></i> Save</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ContentHeader from '../partials/content-header.partials'\r\nimport serviceFactory from '../../service/users.service'\r\nimport makeToast from \"../../helper/Toaster\";\r\nimport EditForm from '../../components/user.form';\r\nimport PasswordForm from '../../components/pasword.form';\r\n\r\nconst ValidateCreateService = (values,) => {\r\n    let errors = {}    \r\n    if(!values.username){\r\n        errors.username = \"Username is required\"\r\n    } else if (values.username.length < 3){\r\n        errors.username = \"Username minimal containt 3 character\"\r\n    }\r\n    if(!values.password){\r\n        errors.password = \"Password is required\"\r\n    }\r\n    if(!values.passwordConfirm){\r\n        errors.passwordConfirm = \"Please Re-type password\"\r\n    } else if (values.passwordConfirm !== values.password) {\r\n        errors.passwordConfirm = \"Password not match\"\r\n    }\r\n    return errors;\r\n}\r\nconst ValidateEditService = (values,) => {\r\n    let errors = {}    \r\n    if(!values.username){\r\n        errors.username = \"Username is required\"\r\n    } else if (values.username.length < 3){\r\n        errors.username = \"Username minimal containt 3 character\"\r\n    }    \r\n    return errors;\r\n}\r\nconst ValidatePasswordService = (values,) => {\r\n    let errors = {}    \r\n    if(!values.password){\r\n        errors.password = \"Password is required\"\r\n    }\r\n    if(!values.passwordConfirm){\r\n        errors.passwordConfirm = \"Please Re-type password\"\r\n    } else if (values.passwordConfirm !== values.password) {\r\n        errors.passwordConfirm = \"Password not match\"\r\n    }\r\n    return errors;\r\n}\r\n\r\nexport default function UserEdit(props) {  \r\n    const [defValues, setdefValues] = useState({});    \r\n    const handleCreate = ({values}) => {     \r\n        console.log(\"create\");   \r\n        \r\n        serviceFactory.create(values.username, values.email, values.name, values.address, values.roles, values.password)\r\n            .then(response => {                 \r\n                makeToast(\"success\", response.data.message);    \r\n                props.history.push('/dashboard/users');\r\n            }).catch((err) => {                \r\n                makeToast(\"error\", err.response.data.message);\r\n            })\r\n        \r\n        \r\n    }  \r\n    const handleUpdate = ({values}) => {  \r\n        console.log(\"edit\");   \r\n           \r\n        serviceFactory.edit(props.match.params.id, values.email, values.name, values.address, values.roles)\r\n            .then(response => {                 \r\n                makeToast(\"success\", response.data.message);    \r\n                props.history.push('/dashboard/users');\r\n            }).catch((err) => {                \r\n                makeToast(\"error\", err.response.data.message);\r\n            })\r\n        \r\n        \r\n    }  \r\n    const handlePasswordChange = ({values}) => {\r\n        console.log(values);\r\n        serviceFactory.passwordUpdate(props.match.params.id, values.password)\r\n            .then(response => {                 \r\n                makeToast(\"success\", response.data.message);    \r\n                props.history.push('/dashboard/users');                \r\n            }).catch((err) => {                \r\n                makeToast(\"error\", err.response.data.message);\r\n            })\r\n    }  \r\n    let subtitle = \"Create new User\";\r\n    let handleSubmit = props.match.params.id ? handleUpdate : handleCreate;\r\n    const isEditing = props.match.params.id ? true : false;\r\n    const ValidateService = props.match.params.id ? ValidateEditService : ValidateCreateService;\r\n    if(props.match.params.id){\r\n        subtitle = \"Edit User\"      \r\n    } \r\n    \r\n    useEffect( () => {\r\n        if(props.match.params.id){\r\n            serviceFactory.findOne(props.match.params.id)\r\n            .then(response => {                     \r\n                setdefValues(response.data);                \r\n            }).catch((err) => {\r\n                /*if(err.response.status === 404){                    \r\n                    props.history.push('/dashboard/oops');\r\n                }*/\r\n                console.log(err);            \r\n            })\r\n        }\r\n        \r\n    }, [])\r\n       \r\n\r\n  return (\r\n    <>\r\n        <ContentHeader\r\n            title=\"Users\"\r\n            subtitle={subtitle}            \r\n        />  \r\n        <section className=\"content\">\r\n            <div className=\"row\">\r\n                {isEditing && \r\n                <>\r\n                <div className=\"col-md-3\">\r\n                    <div className=\"card p-0\">\r\n                        <div className=\"card-body\">\r\n                        <div className=\"nav flex-column nav-pills user-tabs\" role=\"tablist\" aria-orientation=\"vertical\">                        \r\n                            <a className=\"nav-link active\" data-toggle=\"pill\" href=\"#profile-card\" role=\"tab\" aria-controls=\"profile-card\" aria-selected=\"true\">Profile</a>\r\n                            <a className=\"nav-link\" data-toggle=\"pill\" href=\"#change-password-card\" role=\"tab\" aria-controls=\"#change-password-card\" aria-selected=\"false\">Change Password</a>        \r\n                        </div>                     \r\n                        </div>   \r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-9\">\r\n                <div className=\"tab-content\" id=\"vert-tabs-tabContent\">\r\n                    <div className=\"tab-pane fade show active\" id=\"profile-card\" role=\"tabpanel\" aria-labelledby=\"profile-card-tab\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                <h3 className=\"card-title\">{subtitle} {defValues.name}</h3>\r\n                            </div>\r\n                            <div className=\"card-body\">                            \r\n                                <EditForm callback={handleSubmit} validate={ValidateService} initialValues={defValues} isEditing={isEditing} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tab-pane fade\" id=\"change-password-card\" role=\"tabpanel\" aria-labelledby=\"change-password-card-tab\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                <h3 className=\"card-title\">Change Password</h3>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <PasswordForm callback={handlePasswordChange} validate={ValidatePasswordService} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                </>\r\n                \r\n                }\r\n                {!isEditing &&\r\n                    <div className=\"col-md-8 mx-auto\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                <h3 className=\"card-title\">{subtitle} {defValues.name}</h3>\r\n                            </div>\r\n                            <div className=\"card-body\">                            \r\n                                <EditForm callback={handleSubmit} validate={ValidateService} initialValues={defValues} isEditing={isEditing} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div> \r\n        </section>\r\n    </>\r\n  );\r\n}\r\n\r\nUserEdit.propTypes = {\r\n    match: PropTypes.object.isRequired\r\n\r\n}\r\n\r\n\r\n","import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL+\"settings/\";\r\n//const API_SERVER = process.env.REACT_APP_API_URL;\r\n\r\nclass DesksService  {\r\n    async resetCounter(){\r\n        return axios.get(API_URL+ 'reset-count', { headers: await authHeader() })\r\n    }\r\n    async getCounter(){\r\n        return axios.get(API_URL+ 'get-count', { headers: await authHeader() })\r\n    }\r\n    \r\n}\r\n\r\nexport default new DesksService();","import React, { useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport makeToast from '../../helper/Toaster';\r\nimport serviceFactory from '../../service/settings.service';\r\nimport ContentHeader from '../partials/content-header.partials';\r\n\r\nexport default function SettingsPage() {\r\n    const [ticketCounts, setticketCounts] = useState();\r\n    const confirmation = Swal.mixin({\r\n        title: 'Are you sure?',\r\n        text: \"You won't be able to revert this!\",\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Yes, reset it!'\r\n      });\r\n    const resetCounter = () => {\r\n        confirmation.fire()\r\n        .then((result) => {\r\n            if (result.isConfirmed) {\r\n                console.log(\"reseted\");\r\n                serviceFactory.resetCounter()\r\n                    .then((response) => {                        \r\n                        makeToast(\"success\", response.data.message);  \r\n                        getCounter();\r\n                    }).catch((err) => {\r\n                        makeToast(\"error\", err.response.data.message);                \r\n                    });\r\n            }\r\n        })\r\n    }\r\n    const getCounter = () => {\r\n        serviceFactory.getCounter()\r\n            .then((response)=>{\r\n                console.log(response.data);\r\n                setticketCounts(response.data);\r\n            }).catch((err)=>{\r\n                console.log(err);\r\n            })\r\n    }\r\n    useEffect(() => {\r\n        getCounter();\r\n      return () => {\r\n        \r\n      };\r\n    }, [])\r\n  return (\r\n    <>\r\n        <ContentHeader\r\n            title=\"Settings\"            \r\n        />\r\n        <section className=\"content\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <button onClick={resetCounter} className=\"btn btn-success btn-lg\">Reset Ticket Count</button>\r\n                            {ticketCounts &&\r\n                                <div>\r\n                                    {ticketCounts.map((ticketCount, index)=>(\r\n                                        <p key={index}>Service Name:  {(ticketCount.service && ticketCount.service.name) ? ticketCount.service.name :  \"no service\"} \r\n                                            - ticket count: {ticketCount.sequence_value}</p>\r\n                                    ))}\r\n                                    \r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    \r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport adminlteHelper from '../helper/adminlte.helper';\r\nimport authService from '../service/auth.service';\r\n\r\nimport HeaderPartial from './partials/header.partial';\r\nimport SidebarPartial from './partials/sidebar.partials';\r\nimport FooterPartial, {  } from \"./partials/footer.partial\";\r\n\r\nimport Content1 from './dashboardPages/content1';\r\nimport NoPages from './dashboardPages/nopages';\r\nimport DeskPage from './dashboardPages/desk';\r\nimport UserList from './dashboardPages/user.list';\r\nimport ServiceList from './dashboardPages/service.list';\r\nimport ServiceEdit from './dashboardPages/service.edit';\r\nimport CounterList from './dashboardPages/counter.list';\r\nimport CounterEdit from './dashboardPages/counter.edit';\r\nimport ProfilePage from './dashboardPages/profile';\r\nimport UserEdit from './dashboardPages/user.edit';\r\n\r\nimport io from \"socket.io-client\";\r\nimport SettingsPage from './dashboardPages/settings';\r\n\r\nexport default class DashboardPage extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n      isModerator: false,\r\n      isAdmin: false,\r\n      currentUser: authService.getCurrentUser(),\r\n      token: '', \r\n      socket: null,\r\n    };\r\n  }\r\n\r\n\r\n  setupSocket = () => {\r\n    if(!this.state.socket){\r\n      console.log(\"not socketed\");\r\n      const newsocket = io();\r\n\r\n      newsocket.on(\"connect\", ()=> {\r\n        console.log(\"Socket connected\");;\r\n      })\r\n\r\n      newsocket.on(\"disconnect\", () => {\r\n        console.log(\"disconnect from setupsocket\");\r\n        this.setState({socket:null});\r\n        setTimeout(this.setupSocket, 3000);        \r\n      });\r\n      newsocket.on(\"TicketCountUpdate\", (message) => {        \r\n        console.log(\"from dashboard: \"+message);\r\n      })  \r\n      \r\n      this.setState({socket:newsocket});      \r\n    }\r\n  }\r\n\r\n  logout = () => {    \r\n    authService.logout();\r\n    this.setState({\r\n      currentUser: ''\r\n    });\r\n  }\r\n  \r\n  componentDidMount(){\r\n    document.body.classList.add('sidebar-mini');\r\n    adminlteHelper.fixLoginRegisterHeight();\r\n    adminlteHelper.fixContentHeight();\r\n    const user = authService.getCurrentUser();\r\n\r\n    if(user) {\r\n      this.setState({\r\n        currentUser: user,\r\n        isModerator: user.roles.includes(\"ROLE_MODERATOR\"),\r\n        isAdmin: user.roles.includes(\"ROLE_ADMIN\")\r\n      });\r\n    }\r\n    this.setupSocket();\r\n  }\r\n  componentWillUnmount(){\r\n    console.log(\"will unmount\");\r\n    if(this.state.socket){\r\n      console.log(\"disconnect will unmount\");\r\n      this.state.socket.disconnect();\r\n\r\n    }\r\n\r\n  }\r\n  \r\n  render() {\r\n    const matchPath = this.props.match.path;\r\n    const { currentUser, isModerator, isAdmin, token, socket } = this.state;\r\n    //const user = authService.getCurrentUser();\r\n    if(!currentUser)\r\n      return <Redirect to='/login' />\r\n    return (\r\n      <>\r\n        <HeaderPartial logout={this.logout} />\r\n        <SidebarPartial isModerator={isModerator} currentUser={currentUser} />\r\n        {/* Content Wrapper. Contains page content */}      \r\n        <div className=\"content-wrapper\">        \r\n          <Switch>\r\n            <Route path={`${matchPath}/desk`}>            \r\n              <DeskPage socket={socket} />\r\n            </Route>            \r\n            <Route path={`${matchPath}/profile`}>\r\n              <ProfilePage />\r\n            </Route>\r\n            {/* Admin Only */}\r\n            <Route path={`${matchPath}/reports`}>\r\n              <Content1 />\r\n            </Route>\r\n            <Route exact path={`${matchPath}/users`}><UserList /></Route>\r\n            <Route exact path={`${matchPath}/users/create`} component={UserEdit} />\r\n            <Route exact path={`${matchPath}/users/:id/edit`} component={UserEdit} />\r\n\r\n            <Route exact path={`${matchPath}/counters`}><CounterList /></Route>\r\n            <Route exact path={`${matchPath}/counters/create`} component={CounterEdit} />\r\n            <Route exact path={`${matchPath}/counters/:id/edit`} component={CounterEdit} />\r\n\r\n            <Route exact path={`${matchPath}/services`}><ServiceList /></Route>\r\n            <Route exact path={`${matchPath}/services/create`} component={ServiceEdit} />\r\n            <Route path={`${matchPath}/services/:id/edit`} component={ServiceEdit} />\r\n              \r\n            <Route path={`${matchPath}/settings`}>\r\n              <SettingsPage />\r\n            </Route>\r\n            {/* End of Admin Only */}\r\n            <Route exact path={matchPath}> \r\n              <Content1 />\r\n            </Route>\r\n            <Route>\r\n              <NoPages />\r\n            </Route>\r\n          </Switch>\r\n          \r\n        </div>\r\n        {/* /.content-wrapper */}\r\n        <FooterPartial />\r\n        \r\n      </>\r\n    )\r\n  }\r\n}","import React from 'react'\r\n\r\nconst PrintAble = (props) => {\r\n  return (\r\n    <div className=\"text-center d-print-block d-none ticket-print\">\r\n      {props.ticket.serviceName !== '' ?\r\n      <h3>{props.ticket.serviceName}</h3> :\r\n      ''\r\n      }      \r\n      <h3>Ticket Number</h3>\r\n      <h2>{props.ticket.ticket_number}</h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PrintAble\r\n","import React, { useState } from 'react';\r\nimport PrintAble from '../helper/Printable';\r\nimport kioskService from '../service/kiosk.service';\r\n\r\nexport default function KioskPage() {\r\n    const [listService, setListService ] = useState(['dummy Service']);    \r\n    const [ticket, setTicket] = useState({})\r\n    const [firstRender, setfirstRender] = useState(true);\r\n    \r\n    const getServices = () => {\r\n        //console.log(\"get available services\");\r\n        kioskService.getServices()\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setListService(response.data);\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    const printOrder = (serviceId, serviceName='') => {\r\n        //console.log(\"print this\");\r\n        //console.log(serviceId);\r\n        makeTicket(serviceId, serviceName);\r\n        \r\n    }\r\n\r\n    const makeTicket = (serviceId, serviceName='') => {\r\n        kioskService.makeTicket(serviceId)\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                response.data.serviceName=serviceName;\r\n                setTicket(response.data);\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n    React.useEffect(() => {\r\n        document.body.classList.add('kiosk-page');\r\n        //helper.fixLoginRegisterHeight();\r\n        getServices()\r\n        \r\n        return () => {\r\n            document.body.classList.remove('kiosk-page');\r\n        };\r\n    }, []);\r\n\r\n    React.useEffect(()=> {\r\n        if(firstRender){\r\n            setfirstRender(false)\r\n        }else{\r\n            window.print();\r\n        }\r\n    }, [ticket])\r\n  return (\r\n    <div>\r\n        <div className=\"card kiosk-box d-print-none\">\r\n            <div className=\"card-header\">Print Ticket</div>\r\n            <div className=\"card-body\">            \r\n                <div className=\"d-flex flex-wrap justify-content-center\">\r\n                    {listService.map((service, index) => {\r\n                        return(\r\n                            <button key={index} className=\"print-button btn bg-gradient-primary btn-lg btn-block\" onClick={() => printOrder(service._id, service.name)}>{service.name}</button>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n        {ticket &&\r\n            <PrintAble ticket={ticket} />\r\n        }\r\n        \r\n    </div>\r\n\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport helper from \"../helper/adminlte.helper\";\r\nimport authService from '../service/auth.service';\r\nimport makeToast from \"../helper/Toaster\";\r\n\r\nimport ValidateForm from \"../helper/validateForm\";\r\n\r\n\r\nconst ValidateLogin = (values) => {\r\n    let errors = {}    \r\n    if(!values.username){\r\n        errors.username = \"Username is required\";\r\n    }\r\n    if(!values.password){\r\n        errors.password = \"Password is required\"\r\n    }\r\n    return errors;\r\n}\r\n\r\nexport default function LoginPage(props) {            \r\n    const {values, errors, handleChange, handleSubmit} = ValidateForm(handleLogin, ValidateLogin);\r\n\r\n    function handleLogin(e) {        \r\n        authService.login(values.username, values.password)\r\n            .then(response => { \r\n                console.log(response.data);            \r\n                makeToast(\"success\", \"welcome \" + response.data.username);\r\n                //return <Redirect to=\"/\" />   \r\n                props.history.push(\"/\");\r\n            }).catch((err) => {  \r\n                console.log(err);\r\n                makeToast(\"error\", err.response.data.message);\r\n            })\r\n    }\r\n    useEffect(() => {\r\n        document.body.classList.add('login-page');\r\n        helper.fixLoginRegisterHeight();\r\n        \r\n        return () => {\r\n            document.body.classList.remove('login-page');\r\n        };\r\n    }, []);\r\n    \r\n  return (\r\n    <div className=\"login-box\">\r\n        <div className=\"login-logo\">\r\n            <b>Admin</b>LTE\r\n        </div>\r\n        {/* /.login-logo */}\r\n        <div className=\"card\">\r\n            <div className=\"card-body login-card-body\">\r\n            <p className=\"login-box-msg\">Sign in to start your session</p>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"input-group mb-3\">\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${errors.username ? 'is-invalid' : '' }`}\r\n                        //className='form-control'\r\n                        placeholder=\"Username\" \r\n                        onChange={handleChange}\r\n                        name='username'\r\n                        value={values.username || ''}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                        <div className=\"input-group-text\">\r\n                        <span className=\"fas fa-user\" />\r\n                        </div>\r\n                    </div>\r\n                    {errors.username &&\r\n                        <span className=\"error invalid-feedback\">{errors.username ? errors.username : \"not valid\"}</span>                \r\n                    }\r\n                </div>\r\n                <div className=\"input-group mb-3\">\r\n                    <input \r\n                        type=\"password\" \r\n                        className={`form-control ${errors.password && 'is-invalid' }`}\r\n                        //className='form-control'\r\n                        placeholder=\"Password\"\r\n                        onChange={handleChange}\r\n                        name='password'\r\n                        value={values.password || ''}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                        <div className=\"input-group-text\">\r\n                        <span className=\"fas fa-lock\" />\r\n                        </div>\r\n                    </div>\r\n                    {errors.password &&\r\n                        <span className=\"error invalid-feedback\">{errors.password ? errors.password : \"not valid\"}</span>                \r\n                    }\r\n                </div>\r\n                <div className=\"row\">\r\n                <div className=\"col-8\">\r\n                    <div className=\"icheck-primary\">\r\n                    <input type=\"checkbox\" id=\"remember\" />\r\n                    <label htmlFor=\"remember\">\r\n                        Remember Me\r\n                    </label>\r\n                    </div>\r\n                </div>\r\n                {/* /.col */}\r\n                <div className=\"col-4\">\r\n                    <button type=\"submit\" className=\"btn btn-primary btn-block\">Sign In</button>\r\n                </div>\r\n                {/* /.col */}\r\n                </div>\r\n            </form>\r\n            {/* /.social-auth-links */}\r\n            \r\n            <p className=\"mb-0\">\r\n                <Link to='/register' className=\"text-center\">Register a new membership</Link>                \r\n            </p>\r\n            </div>\r\n            {/* /.login-card-body */}\r\n        </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport authHeader from \"../service/auth-header\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL+\"monitor/\";\r\n\r\nclass monitorService {\r\n\r\n    getAudio(){\r\n        return axios.get(API_URL + 'getaudio', { headers: authHeader()})\r\n    }\r\n    getTicket(id){\r\n        return axios.post(API_URL + 'get-ticket',{id}, { headers: authHeader()})\r\n    }\r\n\r\n\r\n}\r\nexport default new monitorService();","import React from 'react'\r\n\r\nexport const AudioListContext = React.createContext({\r\n    audioList: null,\r\n});\r\nexport const MonitorListContext = React.createContext({\r\n    audioList: null,\r\n});","import React from 'react'\r\nimport { AudioListContext } from \"../context/Contexts\";\r\n\r\nexport default function ListAudio() {\r\n  return (\r\n    <>\r\n      <AudioListContext.Consumer>\r\n        {(audioList)=>(\r\n          <div>            \r\n            {(audioList || []).map((audiofile,index) => (\r\n              <audio key={index} id={`audio${audiofile.ID}`} className=\"audioitem\" src={audiofile.link}>{audiofile.file}</audio>\r\n            ))}\r\n            \r\n          </div>\r\n        )}\r\n\r\n      </AudioListContext.Consumer>\r\n      {/*audioList.map((audiofile,index) => (\r\n          <audio key={index} id={`audio${audiofile.ID}`} className=\"audioitem\" src={audiofile.link}>{audiofile.file}</audio>\r\n      ))*/}    \r\n    </>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport default function MonitorList({calling, currentCall, ticketCalled}) {\r\n    const defArr = [1,2,3,4]\r\n    console.log(ticketCalled);\r\n    const item = [];\r\n    for (let index = 0; index < 12; index++) {\r\n        item.push(\r\n        <div key={index} className=\"col\">\r\n            <div className=\"card\">\r\n                <div className=\"card-body \">\r\n                    <div className=\"row d-flex align-items-center\">                    \r\n                        <h2 className=\"flex-fill text-blue align-self-center\">\r\n                            Counter {(ticketCalled[index] && ticketCalled[index].counter && ticketCalled[index].counter.counter_code) ? ticketCalled[index].counter.counter_code : \"--\"}\r\n                        </h2>\r\n                    \r\n                        <h1 className=\"flex-fill align-self-center\">\r\n                            <b>{(ticketCalled[index] && ticketCalled[index].ticket_number) ? ticketCalled[index].ticket_number : \"--\"}</b>\r\n                        </h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n        \r\n        \r\n    }\r\n  return (\r\n    <>\r\n        <section className=\"content\">\r\n            <div className=\"row d-flex\">\r\n                <div className=\"col-md-6 d-flex\">\r\n                    <div className=\"card align-self-stretch col-12\">\r\n                        <div className={`card-body text-center ${calling && 'blink'}`}>\r\n                            <p>ticket number</p>\r\n                            <span className=\"display-3\"><b>{(currentCall && currentCall.ticket_number) ? currentCall.ticket_number : \"--\"}</b></span>\r\n                            <p>Please proceed to</p>\r\n                            <h2 className=\"text-blue\">Counter {(currentCall && currentCall.counter && currentCall.counter.counter_code) ? currentCall.counter.counter_code : \"--\"}</h2>\r\n                        </div>\r\n                    </div>\r\n                </div>                \r\n                <div className=\"col-md-6 d-flex\">\r\n                    <div className=\"card align-self-stretch col-12\">\r\n                        <div className=\"card-body\">\r\n                        <svg className=\"bd-placeholder-img bd-placeholder-img-lg img-fluid\" width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\" role=\"img\" aria-label=\"Placeholder: Responsive image\">\r\n                            <title>Placeholder</title>\r\n                            <rect width=\"100%\" height=\"100%\" fill=\"#868e96\" />\r\n                            <text x=\"50%\" y=\"50%\" fill=\"#dee2e6\" dy=\".3em\">Responsive image</text>\r\n                        </svg>\r\n\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n            <div className=\"row row-cols-4\">\r\n                {item}\r\n            </div>\r\n        </section>\r\n    \r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport io from \"socket.io-client\";\r\nimport monitorService from '../service/monitor.service';\r\nimport monitorCalling from '../helper/monitorCalling';\r\n\r\nimport ListAudio from '../components/audioList.component';\r\nimport MonitorList from '../components/monitorList.component';\r\n\r\nimport { AudioListContext, MonitorListContext } from \"../context/Contexts\";\r\nclass MonitorPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            audioList:null,\r\n            socket:null,\r\n            calling: false,\r\n            callTicket: [],\r\n            currentCall: null,\r\n            ticketCalled: [],\r\n            test: \"halo aja\",         \r\n        }\r\n    }\r\n\r\n    getAudio = () => { \r\n        monitorService.getAudio()\r\n            .then((response) => {\r\n                this.setState({\r\n                    audioList: response.data\r\n                })              \r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })  \r\n    }\r\n    setupSocket = () => {\r\n        var socket = this.state.socket;\r\n        console.log(\"setupSocket\");\r\n        if(!socket){\r\n            const newSocket = io();\r\n            \r\n            newSocket.on(\"connect\", ()=>{\r\n                console.log(\"Socket connected\");\r\n            })\r\n            newSocket.on(\"disconnect\", () => {\r\n                console.log(\"disconnect from setupsocket\");\r\n                this.setState({socket:null});                \r\n                setTimeout(this.setupSocket, 3000);\r\n            });\r\n            newSocket.emit(\"joinRoom\", \"monitor\");\r\n            newSocket.on(\"calling\", (id)=>{\r\n                console.log(\"should call ticket : \"+ id);                \r\n                this.getTicket(id);\r\n            })\r\n            newSocket.on(\"reCalling\", (id)=>{\r\n                console.log(\"should Recall ticket : \"+ id);                \r\n                this.getTicket(id, false);\r\n            })\r\n            this.setState({socket:newSocket});            \r\n        }\r\n    }\r\n    dismantleSocket = () => {\r\n        var socket = this.state.socket;\r\n        if(socket){\r\n            socket.off(\"calling\", ()=>{\r\n                console.log(\"off calling\");\r\n            });\r\n            socket.emit(\"leaveRoom\", \"monitor\");\r\n            socket.disconnect();            \r\n            this.setState({socket:null}); \r\n        }\r\n    }\r\n    getTicket = (id, iscallNext = true) => {\r\n        monitorService.getTicket(id)\r\n            .then((response) => {\r\n                var theticket = response.data;\r\n                theticket.iscallNext= iscallNext;\r\n                this.setState(state => {\r\n                    const callTicket = [...state.callTicket, theticket];               \r\n                    return {callTicket};\r\n                });               \r\n                \r\n            }).catch((err) => {\r\n                \r\n            });\r\n    }\r\n    \r\n    recursiveCalling = async() => {\r\n        if(!this.state.calling){            \r\n            console.log(\"recursiveCalling\");\r\n            const listCalling = this.state.callTicket            \r\n            \r\n            if(listCalling && listCalling.length > 0){\r\n                this.setState({\r\n                    calling:true,\r\n                    currentCall: listCalling[0]\r\n                });\r\n                var ticketNumber = listCalling[0].ticket_number.toString();\r\n                var counter_code = listCalling[0].counter.counter_code.toString(); \r\n                await monitorCalling.letCall(ticketNumber, counter_code)\r\n                .then((response)=>{\r\n                    if(response){\r\n                        console.log(\"response: \", response);\r\n                        setTimeout(()=>{\r\n                            this.setState(state=>{\r\n                                const tempCalled = state.ticketCalled;\r\n                                const [first, ...rest] = state.callTicket;\r\n                                if(first.iscallNext){\r\n                                    return {\r\n                                        callTicket: rest,\r\n                                        ticketCalled: [first, ...tempCalled],\r\n                                        calling:false\r\n                                    }\r\n                                }\r\n                                else{\r\n                                    return {\r\n                                        callTicket: rest,                                        \r\n                                        calling:false\r\n                                    }\r\n                                }\r\n                                \r\n                            });\r\n                        },1000)                   \r\n                                                \r\n                    }\r\n                })\r\n            }\r\n        }\r\n        \r\n\r\n    }\r\n    shoutCaller = async(theTicket) => {\r\n        if(!this.state.calling){\r\n            this.setState({calling:true})\r\n            var ticketNumber = theTicket.ticket_number.toString();\r\n            var counter_code = theTicket.counter.counter_code.toString();  \r\n            var callDone = await monitorCalling.letCall(ticketNumber, counter_code)\r\n            .then((response)=>{\r\n                console.log(\"next\", response);\r\n                if(callDone){\r\n                    /*if(theTicket.iscallNext){\r\n                        var temp = [...ticketCalled, theTicket];\r\n                        setTicketCalled(temp);\r\n                    }*/\r\n                    \r\n                    this.setState({calling:false})\r\n                    \r\n                }\r\n            });\r\n\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState){\r\n        if (this.state.callTicket !== prevState.callTicket) {\r\n            console.log(\"callTicket updated\");\r\n            this.recursiveCalling();\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        document.body.classList.add('monitor-page');\r\n        this.getAudio();\r\n        this.setupSocket();\r\n    }\r\n    componentWillUnmount(){\r\n        this.dismantleSocket();\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n        <>            \r\n            <AudioListContext.Provider value={this.state.audioList}>\r\n                <ListAudio />\r\n            </AudioListContext.Provider>            \r\n            <div className=\"monitor-wrapper mt-2\">\r\n            <MonitorList calling={this.state.calling} currentCall={this.state.currentCall} ticketCalled={this.state.ticketCalled} />\r\n            </div>\r\n            <button onClick={this.recursiveCalling} className=\"btn btn-outline-success my-2 my-sm-0\" >Play caller</button>\r\n            \r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MonitorPage\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport adminlteHelper from '../helper/adminlte.helper';\r\n//import { createAuthProvider } from \"../helper/auth.helper\";\r\n\r\nexport default function NoPages() {\r\n    /*\r\n    const {useAuth, authFetch, login, logout} = createAuthProvider()\r\n    const [logged] = useAuth();\r\n    const test = () => {        \r\n        console.log(logged);\r\n        \r\n    }\r\n    const Dashboard = () => {\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        authFetch('/posts')\r\n            .then(r => r.json())\r\n            .then(_posts => setPosts(_posts))\r\n    }, []);\r\n\r\n    return <div>\r\n        {posts.map(post => <div key={post.id}>\r\n            {post.message}\r\n        </div>)}\r\n    </div>\r\n    };\r\n    */\r\n    \r\n    useEffect(() => {\r\n        document.body.classList.add('error-page');\r\n        adminlteHelper.fixLoginRegisterHeight();\r\n        \r\n        return () => {\r\n            document.body.classList.remove('error-page');\r\n        };\r\n    }, []);\r\n  return (\r\n    <div className=\"error-page vcenter-box\">        \r\n        <h2 className=\"headline text-warning\"> 404</h2>    \r\n        <div className=\"error-content\">\r\n            <h3 className=\"text-center\"><i className=\"fas fa-exclamation-triangle text-warning\" /> Oops! Page not found.</h3>    \r\n            <p className=\"text-center\">We could not find the page you were looking for.</p>                 \r\n        </div>            \r\n    </div>\r\n\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport PrintAble from '../helper/Printable';\r\nimport kioskService from '../service/kiosk.service';\r\n\r\nexport default function NoprintkioskPage() {\r\n    const [listService, setListService ] = useState(['dummy Service']);\r\n    const ticketNumber = 1;\r\n    const [ticket, setTicket] = useState({})\r\n    const [firstRender, setfirstRender] = useState(true);\r\n    \r\n    const getServices = () => {\r\n        console.log(\"get available services\");\r\n        kioskService.getServices()\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setListService(response.data);\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    const printOrder = (serviceId, serviceName='') => {\r\n        console.log(\"print this\");\r\n        console.log(serviceId);\r\n        makeTicket(serviceId, serviceName);\r\n        \r\n    }\r\n\r\n    const makeTicket = (serviceId, serviceName='') => {\r\n        kioskService.makeTicket(serviceId)\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                response.data.serviceName=serviceName;\r\n                setTicket(response.data);\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n    React.useEffect(() => {\r\n        document.body.classList.add('kiosk-page');\r\n        //helper.fixLoginRegisterHeight();\r\n        getServices()\r\n        \r\n        return () => {\r\n            document.body.classList.remove('kiosk-page');\r\n        };\r\n    }, []);\r\n\r\n    React.useEffect(()=> {\r\n        if(firstRender){\r\n            setfirstRender(false)\r\n        }else{\r\n            //window.print();\r\n        }\r\n    }, [ticket])\r\n  return (\r\n    <div>\r\n        <div className=\"card kiosk-box d-print-none\">\r\n            <div className=\"card-header\">Print Ticket</div>\r\n            <div className=\"card-body\">            \r\n                <div className=\"d-flex flex-wrap justify-content-center\">\r\n                    {listService.map((service, index) => {\r\n                        return(\r\n                            <button key={index} className=\"print-button btn bg-gradient-primary btn-lg btn-block\" onClick={() => printOrder(service._id, service.name)}>{service.name}</button>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n        {ticket &&\r\n            <PrintAble ticket={ticket} />\r\n        }\r\n        \r\n    </div>\r\n\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport adminlteHelper from '../helper/adminlte.helper';\r\nimport authService from '../service/auth.service';\r\nimport makeToast from \"../helper/Toaster\";\r\n\r\nimport ValidateForm from \"../helper/validateForm\";\r\n\r\nconst ValidateRegister = (values) => {\r\n    let errors = {}    \r\n    /*if(!values.fullname){\r\n        errors.fullname = \"Name is required\";\r\n    }*/\r\n    if(!values.username){\r\n        errors.username = \"Username is required\"\r\n    } else if (values.username.length < 3){\r\n        errors.username = \"Username minimal containt 3 character\"\r\n    }\r\n    if(!values.password){\r\n        errors.password = \"Password is required\"\r\n    }\r\n    if(!values.passwordConfirm){\r\n        errors.passwordConfirm = \"Please Re-type password\"\r\n    } else if (values.passwordConfirm !== values.password) {\r\n        errors.passwordConfirm = \"Password not match\"\r\n    }\r\n    return errors;\r\n  }\r\n\r\n\r\n\r\nexport default function RegisterPage(props) {\r\n    const [defRoles, setdefRoles] = useState([]);\r\n    const {values, errors, handleChange, handleSubmit} = ValidateForm(handleRegister, ValidateRegister);\r\n\r\n    function handleRegister (e) {\r\n        //e.preventDefault();\r\n        //console.log('register');\r\n        \r\n        authService.register(values.username, values.password, values.roles, values.fullname)\r\n            .then(response => { \r\n                console.log(response.data);            \r\n                makeToast(\"success\", response.data.message);\r\n                //return <Redirect to=\"/login\" />\r\n                props.history.push(\"/login\");\r\n            }).catch((err) => {                \r\n                makeToast(\"error\", err.response.data.message);\r\n            })\r\n\r\n    }      \r\n\r\n    const getRoles = () => {\r\n        authService.getRoles()\r\n            .then(\r\n                response => {\r\n                    console.log(response.data);\r\n                    setdefRoles(response.data);\r\n                },\r\n                error => {\r\n                    //console.log(\"alert alert\");\r\n                }\r\n            );\r\n        \r\n    }    \r\n    useEffect(() => {\r\n        getRoles();\r\n        document.body.classList.add('register-page');\r\n        adminlteHelper.fixLoginRegisterHeight();\r\n        return () => {\r\n            document.body.classList.remove('register-page')\r\n        };\r\n    }, [])\r\n  return (\r\n    <div className=\"register-box\">\r\n        <div className=\"register-logo\">\r\n            <b>Admin</b>LTE \r\n        </div>\r\n        <div className=\"card\">\r\n            <div className=\"card-body register-card-body\">\r\n            <p className=\"login-box-msg\">Register a new membership</p>\r\n            \r\n            <form onSubmit={handleSubmit} >\r\n                <div className=\"input-group mb-3 is-invalid\">\r\n                    <input \r\n                        type=\"text\"                     \r\n                        className={`form-control ${errors.fullname && 'is-invalid' }`}\r\n                        placeholder=\"Full name\" \r\n                        onChange={handleChange}\r\n                        name='fullname'  \r\n                        value={values.fullname || ''}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                        <div className=\"input-group-text\">\r\n                        <span className=\"fas fa-id-card\" />\r\n                        </div>\r\n                    </div>\r\n                    {errors.fullname &&\r\n                        <span className=\"error invalid-feedback\">{errors.fullname ? errors.fullname : \"not valid\"}</span>                \r\n                    }\r\n                \r\n                </div>\r\n                <div className=\"input-group mb-3\">\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${errors.username && 'is-invalid' }`}\r\n                        placeholder=\"Username\" \r\n                        onChange={handleChange}\r\n                        name='username'\r\n                        value={values.username || ''}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                        <div className=\"input-group-text\">\r\n                        <span className=\"fas fa-user\" />\r\n                        </div>\r\n                    </div>\r\n                    {errors.username &&\r\n                        <span className=\"error invalid-feedback\">{errors.username ? errors.username : \"not valid\"}</span>                \r\n                    }\r\n                </div>\r\n                <div className=\"form-group mb-3\">\r\n                    <label>Select Roles</label>\r\n                    {<select \r\n                        className='custom-select'\r\n                        multiple={true} \r\n                        name=\"roles\" \r\n                        onChange={handleChange} \r\n                        value={values.roles || []}  \r\n                        size=\"3\"                                         \r\n                    >\r\n                        {defRoles.map((role, index) =>(\r\n                            <option key={index} value={role.name}>{role.name}</option>\r\n                        ))}\r\n                        </select>}\r\n                </div>\r\n                <div className=\"input-group mb-3\">\r\n                    <input \r\n                        type=\"password\" \r\n                        className={`form-control ${errors.password && 'is-invalid' }`}\r\n                        placeholder=\"Password\"\r\n                        onChange={handleChange}\r\n                        name='password'\r\n                        value={values.password || ''}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                        <div className=\"input-group-text\">\r\n                        <span className=\"fas fa-lock\" />\r\n                        </div>\r\n                    </div>\r\n                    {errors.password &&\r\n                        <span className=\"error invalid-feedback\">{errors.password ? errors.password : \"not valid\"}</span>                \r\n                    }\r\n                </div>\r\n                <div className=\"input-group mb-3\">\r\n                    <input \r\n                        type=\"password\" \r\n                        className={`form-control ${errors.passwordConfirm && 'is-invalid' }`}\r\n                        placeholder=\"Retype password\" \r\n                        onChange={handleChange}\r\n                        name='passwordConfirm'\r\n                        value={values.passwordConfirm || ''}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                        <div className=\"input-group-text\">\r\n                        <span className=\"fas fa-lock\" />\r\n                        </div>\r\n                    </div>\r\n                    {errors.passwordConfirm &&\r\n                        <span className=\"error invalid-feedback\">{errors.passwordConfirm ? errors.passwordConfirm : \"not valid\"}</span>                \r\n                    }\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Register</button>                  \r\n            </form>\r\n            <p className=\"mb-0\">\r\n                <Link to='/login' className=\"text-center\">already have a membership</Link>                \r\n            </p>\r\n            </div>\r\n            {/* /.form-box */}\r\n        </div>{/* /.card */}\r\n    </div>\r\n\r\n  );\r\n}\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport DashboardPage from './pages/dashboardPage';\nimport KioskPage from './pages/kioskPage';\nimport LoginPage from \"./pages/loginPage\";\nimport MonitorPage from './pages/monitorPage';\nimport NoPages from './pages/noPages';\nimport NoprintkioskPage from './pages/nopkioskPage';\nimport RegisterPage from './pages/registerPage';\n\n\nfunction App() {      \n  return (\n    <Router>\n        <Switch>\n          <Route exact path=\"/\" render={() => <Redirect to=\"dashboard\" />} />\n          <Route exact path='/login' component={LoginPage}/>\n          <Route exact path='/register' component={RegisterPage}/> \n          <Route path='/dashboard' render={(props) => <DashboardPage {...props} />} />\n          {/*<Route path='/dashboard'>\n              <DashboardPage />\n  </Route>*/}\n          <Route path='/monitor'>\n            <MonitorPage />\n          </Route>  \n          <Route path='/kiosk'>\n            <KioskPage />\n          </Route> \n          <Route path='/nopkiosk'>\n            <NoprintkioskPage />\n          </Route>\n          <Route>\n            <NoPages />\n          </Route>           \n        </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","    const letCall = (ticketNumber, counterNumber) => {\r\n        return new Promise(resolve => {\r\n            var time = 0;        \r\n            setTimeout(()=>{\r\n                time = callingNumber(ticketNumber)                 \r\n                setTimeout(()=>{\r\n                    time = toCounter()                    \r\n                    setTimeout(()=>{\r\n                        time = callingNumber(counterNumber)                               \r\n                        setTimeout(()=>{\r\n                            \r\n                            \r\n                                console.log(\"call done\"); \r\n                                resolve(true)\r\n                            \r\n                            //setCalling(false);       \r\n                        }, time);\r\n                    }, time);\r\n                }, time);\r\n            }, time); \r\n        });\r\n    }\r\n      \r\n    const toCounter = () => {\r\n        var totalwaktu = 0;\r\n        setTimeout(function(){\r\n            play(\"audioTO\");\r\n        }, totalwaktu);\r\n        totalwaktu =totalwaktu+1100;  \r\n        setTimeout(function(){\r\n            play(\"audioCOUNTER\");\r\n        }, totalwaktu);        \r\n        totalwaktu =totalwaktu+1100;  \r\n        return totalwaktu;\r\n\r\n    }    \r\n    \r\n    const repeatCall = (j, number) => {        \r\n        setTimeout(function(){\r\n            play(\"audio\"+number);\r\n        }, 1100*j);\r\n\r\n    }\r\n    const callingNumber = (ticketNumber) => {        \r\n        var totalwaktu = 0;\r\n        var arrayChar = Array.from(ticketNumber);        \r\n        var sisa = ticketNumber;\r\n        var charlength = arrayChar.length-1; \r\n       \r\n        var j = 0\r\n        for (var i = 0; i < arrayChar.length; i++) {\r\n            \r\n            var number = arrayChar[i] * Math.pow(10, (charlength-i));\r\n            if(number>9999){\r\n                //not yet\r\n                \r\n\r\n            }else if(sisa<20){\r\n                repeatCall(j, sisa);\r\n                totalwaktu = totalwaktu+1100;\r\n                j++;\r\n                sisa = 0;\r\n                //console.log(totalwaktu);\r\n                break;\r\n\r\n            }else if(number !== 0){\r\n                repeatCall(j, number);\r\n                totalwaktu = totalwaktu+1100;\r\n                j++;\r\n            }\r\n            sisa -= number;\r\n            //console.log(number);\r\n            //console.log(sisa);\r\n            //console.log(totalwaktu);\r\n            if(sisa === 0) break;\r\n            \r\n\r\n        }\r\n        return totalwaktu;\r\n              \r\n    }\r\n\r\n    //PLAY FRAMEWORK\r\n\tconst play = (id) =>\r\n\t{\r\n\t\tconst playPromise=document.getElementById(id).play();\r\n\t\tif(playPromise !== null) // Jika tidak diblock browser, jalankan\r\n\t\t{\r\n\t\t\tplayPromise.catch(() => {\r\n\t\t\t\tdocument.getElementById(id).pause();\r\n\t\t\t\tdocument.getElementById(id).currentTime=0;\r\n\t\t\t\tdocument.getElementById(id).play();\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n    \r\n\r\n    \r\nconst monitorCalling = {    \r\n    letCall\r\n}\r\n    \r\nmodule.exports = monitorCalling;"],"sourceRoot":""}